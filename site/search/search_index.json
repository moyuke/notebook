{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to moyuke's notebook","text":""},{"location":"#about","title":"About","text":"Abstract <ul> <li>note of CS courses</li> <li>note of general education</li> <li>some projects</li> </ul> <p>(\uff5e\uffe3\u25bd\uffe3)\uff5e\ud83c\udf81</p>"},{"location":"class-ADS/10/","title":"NP\u5b8c\u5168","text":""},{"location":"class-ADS/10/#_1","title":"\u6982\u5ff5\u4ecb\u7ecd","text":"<ul> <li> <p>P: \u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4O(\\(n^k\\)) \u5185\u89e3\u51b3\u7684\u95ee\u9898</p> </li> <li> <p>NP: \u4e0d\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u6216\u4e0d\u786e\u5b9a\u80fd\u4e0d\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\uff0c\u4f46\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u9a8c\u8bc1\uff08\u68c0\u9a8c\u4e00\u7ec4\u89e3\u662f\u5426\u6ee1\u8db3\uff09\u7684\u95ee\u9898\uff0cP\\(\\subseteq\\)NP</p> </li> <li> <p>NPC: NP\u5b8c\u5168\u95ee\u9898\uff0c\u6240\u6709NP\u95ee\u9898\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u90fd\u80fd\u7ea6\u5316(Reducibility)\u5230\u5b83 \u7684NP\u95ee\u9898\uff0c\u5373\u89e3\u51b3\u4e86\u6b64NPC\u95ee\u9898\uff0c\u6240\u6709NP\u95ee\u9898\u4e5f\u90fd\u5f97\u5230\u89e3\u51b3\u3002</p> </li> <li> <p>NP hard: NP\u96be\u95ee\u9898\uff0c\u6240\u6709NP\u95ee\u9898\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u90fd\u80fd\u7ea6\u5316(Reducibility)\u5230\u5b83 \u7684\u95ee\u9898(\u4e0d\u4e00\u5b9a\u662fNP\u95ee\u9898)\u3002</p> </li> <li> <p></p> </li> </ul> <p>NP\u5b8c\u5168\u95ee\u9898\uff1a\u627e\u4e0d\u5230\u591a\u9879\u5f0f\u7b97\u6cd5\uff0c\u4e5f\u65e0\u6cd5\u8bc1\u660e\u4e0d\u5b58\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5</p> <ul> <li>\u6700\u77ed\u8def\u5f84\u5224\u5b9a\u7248\u672c</li> <li>\u54c8\u5bc6\u987f\u5708</li> <li>3-CNF\u53ef\u6ee1\u8db3\u6027\u95ee\u9898</li> </ul> <ul> <li>\u5148\u8bc1\u660e\u5b83\u81f3\u5c11\u662f\u4e00\u4e2aNP\u95ee\u9898\uff0c\u518d\u8bc1\u660e\u5176\u4e2d\u4e00\u4e2a\u5df2\u77e5\u7684NPC\u95ee\u9898\u80fd\u7ea6\u5316\u5230\u5b83\uff08\u7531\u7ea6\u5316\u7684\u4f20\u9012\u6027\uff0c\u5219NPC\u95ee\u9898\u5b9a\u4e49\u7684\u7b2c\u4e8c\u6761\u4e5f\u5f97\u4ee5\u6ee1\u8db3\uff1b\u81f3\u4e8e\u7b2c\u4e00\u4e2aNPC\u95ee\u9898\u662f\u600e\u4e48\u6765\u7684\uff0c\u4e0b\u6587\u5c06\u4ecb\u7ecd\uff09\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8bf4\u5b83\u662fNPC\u95ee\u9898\u4e86\u3002</li> <li>\u5df2\u77e5\u7684NPC\uff1aSAT\u95ee\u9898\uff0cVertex cover\uff0cTSP\u5224\u5b9a\u7248\u672c\uff08\u6c42\u6700\u77ed\u56de\u8def\u7684\u662fNPhard\u4f46\u4e0d\u662fNPC\uff0c\u4e00\u822c\u8bf4TSP\u90fd\u6307\u7684\u662fNPC\u7684TSP\uff09</li> <li>Reduction(\u89c4\u7ea6)\uff1a\u5982\u679c\u80fd\u627e\u5230\u8fd9\u6837\u4e00\u4e2a\u53d8\u5316\u6cd5\u5219\uff0c\u5bf9\u4efb\u610f\u4e00\u4e2a\u7a0b\u5e8fA\u7684\u8f93\u5165\uff0c\u90fd\u80fd\u6309\u8fd9\u4e2a\u6cd5\u5219\u53d8\u6362\u6210\u7a0b\u5e8fB\u7684\u8f93\u5165\uff0c\u4f7f\u4e24\u7a0b\u5e8f\u7684\u8f93\u51fa\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u8bf4\uff0c\u95ee\u9898A\u53ef\u7ea6\u5316\u4e3a\u95ee\u9898B\u3002</li> <li>x\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u89c4\u7ea6\u5230y \uff08x \\(\\leq_p\\)y\uff09</li> </ul>"},{"location":"class-ADS/10/#_2","title":"\u7ecf\u5178\u95ee\u9898","text":"<ul> <li>\u505c\u673a\u95ee\u9898</li> <li>\u6700\u77ed\u8def\u95ee\u9898<ul> <li>(G,s,t,k)\uff1as\u5230t\u662f\u5426\u6709\uff1c=k\u957f\u7684\u8def\u5f84</li> <li>decision\u95ee\u9898 -&gt; \u7b49\u4ef7\u4e8e\u4e00\u4e2a\u96c6\u5408</li> <li>instance:  -&gt; String <li>3-CNF\u95ee\u9898<ul> <li>satisfability\u95ee\u9898\uff08SAT\uff09</li> <li>\u5bf9\u4e00\u7ec4\u8d4b\u503c\uff0c\u8bc1\u660e\u53ef\u6ee1\u8db3</li> <li>3-SAT\uff1a\u6709k\u4e2aclause\uff0cthe MAX-3SAT problem is to find a truth assignment that satisfies as many clauses as possible.</li> <li>\u6bcf\u4e00\u4e2aclause\u90fd\u662f a || b || c \u7684\u5f62\u5f0f</li> <li>B() is an efficient verifier(\u9a8c\u8bc1\u5668) for problem X if</li> <li>B\u4e3a\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5</li> <li>P() is a poly function\u4e14\u6ee1\u8db3\u5bf9\u4efb\u610fs\uff0cs\u5c5e\u4e8eX\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728string t\u4f7f\u5f97B(s,t) = yes\uff0c\u5176\u4e2d|t|&lt;=P(|s|)</li> <li>B(s,t)\uff1a\u5728t\u4e0b\u8ba1\u7b97s\uff0c\u82e5s\u6ee1\u8db3\uff0c\u8fd4\u56deyes</li> <li>\u53ea\u8981\u6c42\u5b58\u5728\u6027\uff0cyes-certificate</li> </ul> </li> <li>\u54c8\u5bc6\u987f\u5708\uff08HCP\uff09<ul> <li>hint\uff1a\u4e00\u7ec4\u5708</li> <li>B\uff1a\u6309\u7167hint\u8d70\u4e00\u904d\uff0c\u68c0\u67e5\u662f\u5426\u6bcf\u4e2a\u70b9\u90fd\u8d70\u4e86\u4e00\u6b21</li> </ul> </li> <li>Travelling Salesman Problem\uff08TSP\uff09<ul> <li>\u7ed9\u4e00\u5f20\u5b8c\u5168\u56feG\u548c\u6574\u6570k\uff0c\u95ee\u662f\u5426\u5b58\u5728\u7b80\u5355\u73af\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u8d70\u4e00\u6b21\u4e14cost&lt;=k</li> <li>HCP \\(\\leq_p\\)TSP</li> <li>\u8865\u6210\u5b8c\u5168\u56fe\uff0c\u539f\u6765\u7684\u8fb9\u8bbe\u4e3a1\uff0c\u8865\u4e0a\u7684\u8fb9\u8bbe\u4e3a2\uff0c\u82e5HCP\u6210\u7acb\uff0c\u5219TSP\u7684k\u53d6\u4e3a|v|\u5373\u53ef</li> <li>\u5b9e\u4f8b\u7684\u8f6c\u5316\u4e3a\u591a\u9879\u5f0f\u65f6\u95f4</li> </ul> </li> <li>\u6700\u5927\u56e2\u95ee\u9898\uff08clique problem\uff09<ul> <li>\u7ed9\u51faG\u548ck</li> <li>\u95ee\u662f\u5426\u80fd\u9009\u51fa\u81f3\u5c11k\u4e2a\u70b9\u4f7f\u5f97\u4e24\u4e24\u4e4b\u95f4\u90fd\u6709\u8fb9\u76f8\u8fde\uff08\u4e3a\u56e2\uff09</li> </ul> </li> <li>\u9876\u70b9\u8986\u76d6\u95ee\u9898\uff08vertex cover problem\uff09<ul> <li>\u7ed9\u51faG\u548ck</li> <li>\u662f\u5426\u6709\u4e00\u4e2a\u70b9\u96c6\u4fdd\u8bc1\u6bcf\u6761\u8fb9\u81f3\u5c11\u6709\u4e00\u4e2a\u7aef\u70b9\u88ab\u9009\u4e2d</li> <li>clique problem \\(\\leq_p\\) vertex cover problem</li> <li>\u8fb9\u96c6\u4e92\u8865</li> <li>\u70b9\u96c6C\u5728G\u91cc\u662f\u56e2\u5f53\u4e14\u4ec5\u5f53\u5728V-C\u5728G'\u91cc\u662f\u9876\u70b9\u8986\u76d6</li> </ul> </li>"},{"location":"class-ADS/10/#_3","title":"\u9898\u76ee","text":"<ul> <li> <p>1.If L1 \u2264p L2 and L2\u2208NP, then L1\u2208NP.     T     \u6ce8\u610f&lt;=p\u7b49\u4ef7\u4e8ereduce to\uff0c\u590d\u6742\u7684\u5982\u679c\u662fNp\uff0c\u90a3\u4e48\u7b80\u5355\u7684\u4e5f\u662fNP</p> <p>2.All NP-complete problems are NP problems. T</p> <p>3.All the languages can be decided by a non-deterministic machine. F \u4e0d\u786e\u5b9a\u56fe\u7075\u673a\u53ef\u4ee5\u7528\u6765\u9a8c\u8bc1NP\u95ee\u9898\u7684\u89e3\u662f\u5426\u662f\u6b63\u786e\u7684\uff0c\u786e\u5b9a\u56fe\u7075\u673a\u53ef\u4ee5\u7528\u6765\u6c42\u89e3P\u95ee\u9898\u3002</p> <p>NP hard\u95ee\u9898\u65e0\u6cd5\u901a\u8fc7\u4e0d\u786e\u5b9a\u56fe\u7075\u673a\u9a8c\u8bc1</p> <p>4.All NP problems can be solved in polynomial time in a non-deterministic machine. T</p> <p>5.If a problem can be solved by dynamic programming, it must be solved in polynomial time. F</p> <p>0-1\u80cc\u5305\u95ee\u9898\u53ef\u4ee5\u7528DP\u89e3\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u4e0d\u662f\u591a\u9879\u5f0f\u7684, \u539f\u56e0\u662f\u8f93\u5165\u7684\u6570\u636e\u4e0d\u662f\u591a\u9879\u5f0f\u7684\u3002</p> <p>6.Among the following problems, __ is NOT an NP-complete problem.</p> <p>A.Vertex cover problem</p> <p>B.Hamiltonian cycle problem</p> <p>C.Halting problem</p> <p>D.Satisfiability problem</p> <p>D SAT\u95ee\u9898\u662f\u7b2c\u4e00\u4e2a\u88ab\u8bc1\u660e\u7684NPC\u95ee\u9898\uff0cA\u662fNPC\u95ee\u9898\uff0cB\u662f\u6c49\u5bc6\u5c14\u987f\u56de\u8def\uff0cNPC\u95ee\u9898\u3002C\u505c\u673a\u95ee\u9898\u662f\u4e0d\u53ef\u89e3\u7684\uff0c\u9009C</p> <p>7.Suppose Q is a problem in NP, but not necessarily NP-complete. Which of the following is FALSE?</p> <p>A.A polynomial-time algorithm for SAT would sufficiently imply a polynomial-time algorithm for Q.</p> <p>B.A polynomial-time algorithm for Q would sufficiently imply a polynomial-time algorithm for SAT.</p> <p>C.If Q \u2209P, then P\u2260NP.</p> <p>D.If Q is NP-hard, then Q is NP-complete.</p> <p>\u770b\u4e0a\u9762\u7684\u56fe\uff0cSAT\u662fNPC\u95ee\u9898\uff0c\u5982\u679c\u89e3\u51b3\u4e86\uff0c\u53ef\u4ee5\u89e3\u51b3\u6240\u6709NP\u95ee\u9898</p> <p>B\uff0c Q\u4e0d\u4e00\u5b9a\u662fNPC\u7684\uff0c\u6240\u4ee5\u4e0d\u5bf9\uff0cC\uff0c\u5982\u679cQ\u4e0d\u662fP\uff0c\u90a3\u4e48\u8bf4\u660eNP\u6ca1\u6709\u88ab\u89e3\u51b3\uff0cD\uff0cNP-hard\u548cNP\u4ea4\u96c6\u662fNPC</p> <p>8.A language L belongs to NP iff there exist a two-input polynomial-time algorithm A that verifies language L in polynomial time.</p> <p>T\uff0c \u8fd9\u662fppt\u4e0a\u7684</p> <p>9.Given that problem A is NP-complete. If problem B is in NP and can be polynomially reduced to problem A, then problem B is NP-complete.</p> <p>B&lt;= A\uff0c\u4f46\u662fA\u662fNPC\u95ee\u9898\uff0cA&lt;=B\u624d\u80fd\u8bf4\u660eB\u4e5f\u662fNPC\u95ee\u9898\u3002</p> <p>10.All decidable problems are NP problems.</p> <p>F\uff0c\u8fd8\u6709NP hard\u95ee\u9898</p> <p>11.All NP problems are decidable.</p> <p>T, \u53ef\u4ee5\u901a\u8fc7\u4e0d\u786e\u5b9a\u56fe\u7075\u673a\u5224\u65ad</p> <p>12.To prove problem B is NP-complete, we can use a NP-complete problem A and use a polynomial-time reduction algorithm to transform an instance of problem B to an instance of problem A.</p> <p>F, \u5e94\u8be5\u4e0d\u662f\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u800c\u662f\u6574\u4e2a\u95ee\u9898</p> <p>13.If P = NP then the Shortest-Path (finding the shortest path between a pair of given vertices in a given graph) problem is NP-complete.</p> <p>T, P=NP\u8bf4\u660e\u6240\u6709\u7684NP\u95ee\u9898\u5747\u53ef\u89e3\uff0c\u6240\u6709\u7684NPC\u95ee\u9898\u53ef\u89e3\uff0cNP=NPC</p> </li> </ul>"},{"location":"class-ADS/11/","title":"\u8fd1\u4f3c","text":"<ul> <li> <p>\u8fd1\u4f3c\u6bd4\uff1a</p> </li> <li> <p>max(A(I)/opt(I) , opt(I)/A(I)) &lt;= $ \\rho \\((|I|)\uff0c\u5219\u79f0\u5176\u4e3a\\)\\rho$(n)\u8fd1\u4f3c\u7684\u7b97\u6cd5</p> </li> <li> <p>A polynomial-time approximation scheme(PTAS)</p> </li> <li> <p>PTAS\uff1a\u5173\u4e8en\u4e3a\u591a\u9879\u5f0f</p> </li> <li> <p>FPTAS\uff1a\u5173\u4e8e1/\u03f5\u4e5f\u4e3a\u591a\u9879\u5f0f</p> </li> <li> <p>\u4f8b\u5b50\uff1a</p> </li> <li> <p>Binpack problem\uff08NPhard\uff09</p> <ul> <li>input\uff1an items with sizes s1~sn</li> <li>output\uff1a\u7528\u5c3d\u53ef\u80fd\u5c11\u7684\u7bb1\u5b50\u88c5\uff08\u7bb1\u5b50\u5bb9\u91cf\u56fa\u5b9a\uff09</li> <li>Next fit\uff1a\u987a\u5e8f\u88c5\uff0c\u88c5\u4e0d\u4e0b\u5c01\u7bb1\u4e0b\u4e00\u4e2a</li> <li>NF\u7528\u7684\u7bb1\u5b50\u6570\uff0copt\u6700\u4f18\u89e3\u7bb1\u5b50\u6570</li> <li>NF/opt &lt;= 2\uff1a\u8fd1\u4f3c\u6bd4</li> <li>2-approximation\u7b97\u6cd5</li> <li>Any fit\uff1afor\u4e00\u904d\uff0c\u5f53\u524d\u6253\u5f00\u7684\u7bb1\u5b50\u53ef\u4ee5\u88c5\u5c31\u88c5\uff0c\u4e0d\u80fd\u5c31\u5f00\u4e00\u4e2a\u65b0\u7684</li> <li>First fit\uff1a\u627e\u7b2c\u4e00\u4e2a</li> <li>Best fit\uff1a\u627e\u88c5\u7684\u6700\u6ee1\u7684</li> <li>BF(I)&amp;FF(I) &lt;= 1.7opt(I)\uff0c\u5373\u8fd1\u4f3c\u6bd4\u4e3a1.7<ul> <li>\u7edd\u5bf9\u8fd1\u4f3c\u6bd4</li> </ul> </li> <li>First/Best fit decreasing:</li> <li>\u5148\u5bf9item\u6392\u5e8f</li> <li>BFD(I)&amp;FFD(I) &lt;= 11/9 opt(I) + 6/9<ul> <li>\u6e10\u8fdb\u8fd1\u4f3c\u6bd4\u4e3a11/9</li> <li>\u7edd\u5bf9\u8fd1\u4f3c\u6bd4\uff0c\u5728 opt(I) \u53d62\u65f6\u5f97\uff0c\u4e3a1.5</li> </ul> </li> <li>NP\u590d\u6742\u5ea6\u6700\u4f18\u8fd1\u4f3c\u6bd41.5\uff0c\u8981\u6c42online\u5219\u6700\u4f185/3</li> </ul> </li> <li> <p>Knapsack problem(\u80cc\u5305\u95ee\u9898)</p> <ul> <li>Input\uff1an items (v1,w1)~(vn,wn)\uff0c\u5bb9\u91cfC</li> <li>output\uff1a\u6700\u5927\u5316\u603b\u4ef7\u503c\u7684\u80cc\u5305\u88c5\u6cd5</li> <li>O(nC)\u6216O(nV_sum)\uff0c\u4f2a\u591a\u9879\u5f0f</li> <li>\u5206\u6570\u7248\u672c\uff1a\u53ef\u4ee5\u9009\u96f6\u70b9\u51e0\u4e2a\u7269\u54c1</li> <li>\u6309\u6027\u4ef7\u6bd4\u8d2a\u5fc3</li> <li>\u6574\u6570\u7248\u672c\uff08NPhard\uff09</li> <li>\u8d2a\u5fc3\u7b97\u6cd5<ul> <li>on vi/wi\uff08\u6027\u4ef7\u6bd4\uff09</li> <li>\u88ab\u5c0f\u7269\u4ef6\u5361\uff0c\u9009\u4e0d\u4e86\u9ad8\u4ef7\u503c\u5927\u7269\u4ef6</li> <li>OPT/A&gt;=(C-1)/2</li> <li>on vi\uff08\u4ef7\u503c\uff09</li> <li>\u88ab\u5927\u7269\u4ef6\u5361\uff0c\u9009\u4e0d\u4e86\u9ad8\u6027\u4ef7\u6bd4\u5c0f\u7269\u4ef6</li> <li>OPT/A&gt;=C-1</li> <li>\u4e24\u79cd\u7b97\u6cd5\u5b58\u5728\u7f3a\u70b9\uff0c\u4f46\u4e92\u8865</li> </ul> </li> <li>A*\uff1aA1\u548cA2\u5404\u8dd1\u4e00\u904d\u9009\u6700\u4f18<ul> <li>A1 &gt;= OPT_\u5206\u6570\u7248\u672c - Vmax</li> <li>A2 &gt;= Vmax</li> <li>\u52192A* &gt;= OPT_frac &gt;= OPT</li> <li>A* &gt;= OPT/2</li> </ul> </li> <li>\u4f18\u5316\uff1a\u6240\u6709v\u9664\u4ee5\u4e00\u4e2ad<ul> <li>\u539f\u672cO(\\(n^2V_{sum}\\))</li> <li>d=gcd(v1...vn)\uff0c\u5219\u4e0d\u5f71\u54cd\u7ed3\u679c</li> <li>d= $ \\lceil nV_{sum}/\\delta\\rceil$ \uff0c\u5219O($ n^3 / \\delta $)</li> <li>\u6c42\u51fa\u8fd1\u4f3c\u6bd4\u4e3a$ 1/1-\\delta $ </li> </ul> </li> <li>K-center problem</li> <li>Input\uff1an site s1...sn\uff0c\u6574\u6570k</li> <li>output\uff1a\u627e\u5230k\u4e2acenter\uff0c\u76d6\u4f4f\u6240\u6709sites\u5e76\u4f7f\u5f97\u534a\u5f84\u6700\u5c0f</li> <li>dist(x,c)=\\(min_{y\\sub C}\\) (dist(x,y))</li> <li>k=1\uff1a\u968f\u4fbf\u9009\u4e00\u4e2asite\u4f5c\u4e3acenter\uff0c\u8fd1\u4f3c\u6bd4\u4e3a2</li> <li>\u5df2\u77e5\u6700\u4f18\u89e3\uff1a<ul> <li>\u82e5\u5b58\u5728\u672a\u8986\u76d6site\uff0c\u9009\u4e3asite\uff0c\u7136\u540e\u53bb\u6389\u8986\u76d6\u7684site</li> <li>\u5faa\u73af\u6700\u591a\u8fdb\u884ck\u6b21</li> <li>\u6240\u4ee5\u5047\u5b9a\u4e00\u4e2a\u89e3\uff08\u4e8c\u5206\uff09</li> </ul> </li> <li>\u8d2a\u5fc3<ul> <li>\u9009\u4e00\u4e2asite\u4f5c\u4e3acenter</li> <li>\u4e00\u76f4\u9009\u62e9\u8ddd\u79bbcenter\u6700\u8fdc\u7684site\u4f5c\u4e3a\u65b0\u7684center</li> <li>\u5f97\u5230\u6700\u7ec8\u7684center\u96c6\u5408Ck</li> <li>r(Ck)&lt;=2r*</li> </ul> </li> </ul> </li> <li> <p>\u9898\u76ee\uff1a</p> <ul> <li>1.Suppose ALG is an \u03b1-approximation algorithm for an optimization problem \u03a0 whose approximation ratio is tight. Then for every \u03f5&gt;0 there is no (\u03b1\u2212\u03f5)-approximation algorithm for \u03a0 unless P = NP.   F, \u6309\u7167\u6211\u7684\u7406\u89e3\uff0c\u53ef\u80fd\u4f1a\u6709\u8fd1\u4f3c\u6bd4\u66f4\u5c0f\u7684\u7b97\u6cd5\u3002</li> </ul> <p>2.As we know there is a 2-approximation algorithm for the Vertex Cover problem. Then we must be able to obtain a 2-approximation algorithm for the Clique problem, since the Clique problem can be polynomially reduced to the Vertex Cover problem.   T\uff0c reduce to \u5c31\u7b97&lt;=\uff0c\u5982\u679cCP&lt;=VC, VC\u6709\u8fd1\u4f3c\u6bd4\u4e3a2\u7684\u7b97\u6cd5\uff0c\u90a3\u4e48CP\u4e5f\u6709</p> <p>3.For the bin-packing problem: let S=\u2211Si. Which of the following statements is FALSE?</p> <p>A.The number of bins used by the next-fit heuristic is never more than \u23082S\u2309</p> <p>B.The number of bins used by the first-fit heuristic is never more than \u23082S\u2309</p> <p>C.The next-fit heuristic leaves at most one bin less than half full</p> <p>D.The first-fit heuristic leaves at most one bin less than half full</p> <p>NF\u8fd1\u4f3c\u6bd4\u662f2\uff0c\u5176\u4ed6\u7684\u8fd1\u4f3c\u6bd4\u90fd\u6bd42\u5c0f\u3002Next fit\u53ef\u80fd\u6709\u591a\u4e2a\u534a\u7a7a\u7684bit\uff0c\u56e0\u4e3a\u5982\u679c\u6c38\u8fdc\u5f80\u524d\u653e\uff0c\u4e0d\u4f1a\u56de\u5934\u653e\u4e4b\u524d\u7684\uff0c\u6240\u4ee5\u662fC\uff0c\u800cFF\u4f1a\u68c0\u67e5\u4e4b\u524d\u6240\u6709\u4f4d\uff0c\u56e0\u6b64\u5982\u679c\u6709\u4e24\u4e2a\u534a\u7a7a\u7684\uff0c\u5b83\u4eec\u4f1a\u653e\u5728\u4e00\u8d77\u3002</p> <p>4.To approximate a maximum spanning tree T of an undirected graph G=(V,E) with distinct edge weights w(u,v) on each edge (u,v)\u2208E, let\u2019s denote the set of maximum-weight edges incident on each vertex by S. Also let w(E\u2032)=\u2211(u,v)\u2208E\u2032\uff0c w(u,v) for any edge set E\u2032. Which of the following statements is TRUE?</p> <p>A.S=T for any graph G</p> <p>B.S\u2260T for any graph G</p> <p>C.w(T)\u2265w(S)/2 for any graph G</p> <p>D.None of the above</p> <p>C, \u9898\u76ee\u7684\u610f\u601d\u662f\uff0c\u5982\u679c\u628a\u6bcf\u4e2a\u70b9\u6700\u5927\u6743\u503c\u7684\u8fb9\u52a0\u5165\u4e00\u4e2a\u96c6\u5408\uff0c\u90a3\u4e48\u8fd9\u4e2a\u96c6\u5408\u7684\u6743\u503c\u548c\u6700\u5927\u751f\u6210\u6811\u6743\u503c\u4e4b\u6bd4\u662f\u591a\u5c11\u3002\u6ce8\u610f\uff0c\u70b9\u7684\u6700\u5927\u6743\u503c\u8fb9\u96c6\u5408\u610f\u5473\u7740\u96c6\u5408\u91cc\u76f8\u540c\u7684\u8fb9\u6700\u591a\u51fa\u73b0\u4e00\u6b21\u3002</p> <p>\u5f88\u5bb9\u6613\u8bc1\u660e\uff0cS\u91cc\u9762\u4e0d\u5b58\u5728\u73af\uff0c\u56e0\u6b64T\u4e00\u5b9a\u5305\u542bS.\u6240\u4ee5w(T)&gt;=w(S)</p> <p>\u5047\u5982\u5b58\u5728\u73af\uff0c\u8bbe\u8fb9\u4e3ae1,e2,e3,\u2026ej, \u70b9\u4e3ap1, \u2026pj</p> <p>\u7531\u4e8ee1\u5728S\u4e2d\uff0c\u56e0\u6b64w(e1)&gt;w(ej)\uff0c\u7531\u4e8ee2\u5728S\u4e2d\uff0c\u56e0\u6b64w(e2)&gt;w(e1),\u2026\uff0c\u6700\u540e\u5f97\u5230\u7684\u662fw(ej)&gt;w(e1)\uff0c\u77db\u76fe\u3002</p> <p>5.Assume that you are a real world Chinese postman, which have learned an awesome course \u201cAdvanced Data Structures and Algorithm Analysis\u201d (ADS). Given a 2-dimensional map indicating N positions pi(xi ,yi) of your post office and all the addresses you must visit, you\u2019d like to find a shortest path starting and finishing both at your post office, and visit all the addresses at least once in the circuit. Fortunately, you have a magic item \u201cBamboo copter &amp; Hopter\u201d from \u201cDoraemon\u201d, which makes sure that you can fly between two positions using the directed distance (or displacement).</p> <p>Bamboo.jpg (\u201cBamboo copter &amp; Hopter\u201d, japan12.com/bamboo-copter-hopter)</p> <p>However, reviewing the knowledge in the ADS course, it is an NPC problem! Wasting too much time in finding the shortest path is unwise, so you decide to design a 2\u2212approximation algorithm as follows, to achieve an acceptable solution.</p> <p>Compute a minimum spanning tree T connecting all the addresses.   Regard the post office as the root of T.   Start at the post office.   Visit the addresses in order of a _____ of T.   Finish at the post office.   There are several methods of traversal which can be filled in the blank of the above algorithm. Assume that P\u2260NP, how many methods of traversal listed below can fulfill the requirement?</p> <p>Level-Order Traversal   Pre-Order Traversal   Post-Order Traversal</p> <p>A.0</p> <p>B.1</p> <p>C.2</p> <p>D.3</p> <p>C\uff0c\u4e0d\u77e5\u9053\u9898\u76ee\u518d\u8bf4\u4ec0\u4e48</p> <p>6.An approximation scheme that runs in O(n^2/\u03f5) for any fixed \u03f5&gt;0 is a fully polynomial-time approximation scheme.</p> <p>T, \u5982\u679c1/\u03f5\u4e5f\u662f\u591a\u9879\u5f0f\u7ea7\u522b\u7684\uff0c\u90a3\u4e48\u5c31\u7b97\u662ffull</p> <p>7.An approximation scheme that runs in O(n^2 3^\u03f5) for any fixed \u03f5&gt;0 is a polynomial-time approximation scheme.</p> <p>T, \u53ea\u8981\u662fn\u662f\u591a\u9879\u5f0f\u7ea7\u522b\u7684\u5c31\u53ef\u4ee5\u3002</p> <p>8.In the bin packing problem, we are asked to pack a list of items L to the minimum number of bins of capacity 1. For the instance L, let FF(L) denote the number of bins used by the algorithm First Fit. The instance L\u2032 is derived from L by deleting one item from L. Then FF(L\u2032) is at most of FF(L).</p> <p>F, \u5982\u679c\u662fNF\u5219\u662fF, yds\u8bf4\u7684\u3002</p> <p>9.For the 0-1 version of the Knapsack problem, if we are greedy on taking the maximum profit or profit density, then the resulting profit must be bounded below by the optimal solution minus the maximum profit.</p> <p>Popt&lt;Pfrac&lt;Pgre+pmax\uff0c\u6700\u4f18\u89e3\u4e00\u5b9a\u5c0f\u4e8e\u7269\u4f53\u53ef\u5206\u60c5\u51b5\u4e0b\u7684\u89e3\u3002\u800c\u7269\u4f53\u53ef\u5206\u60c5\u51b5\u4e0b\u7684\u89e3\uff0c\u53ef\u4ee5\u770b\u6210greedy\u7684\u89e3+\u4e00\u90e8\u5206\u4e0d\u5b8c\u6574\u7684\u7269\u4f53\u3002\u4e0d\u5b8c\u6574\u7684\u7269\u4f53\u6743\u503c\u4e00\u5b9a\u5c0f\u4e8e\u6700\u5927\u6743\u503c\u3002</p> <p>(\u611f\u89c9\u8bc1\u660e\u6709\u95ee\u9898)</p> <p>10.An (1+\u03f5)-approximation scheme of time complexity (n+1/\u03f5)^3 is a PTAS but not an FPTAS.</p> <p>F</p> </li> </ul>"},{"location":"class-ADS/15/","title":"\u5916\u90e8\u6392\u5e8f","text":"<p>1.Suppose we have the internal memory that can handle 12 numbers at a time, and the following two runs on the tapes:</p> <p>Run 1: 1, 3, 5, 7, 8, 9, 10, 12</p> <p>Run 2: 2, 4, 6, 15, 20, 25, 30, 32</p> <p>Use 2-way merge with 4 input buffers and 2 output buffers for parallel operations. Which of the following three operations are NOT done in parallel?</p> <p>(3\u5206)</p> <p>A.1 and 2 are written onto the third tape; 3 and 4 are merged into an output buffer; 6 and 15 are read into an input buffer</p> <p>B.3 and 4 are written onto the third tape; 5 and 6 are merged into an output buffer; 8 and 9 are read into an input buffer</p> <p>C.5 and 6 are written onto the third tape; 7 and 8 are merged into an output buffer; 20 and 25 are read into an input buffer</p> <p>D.7 and 8 are written onto the third tape; 9 and 15 are merged into an output buffer; 10 and 12 are read into an input buffer</p> <p>\u5de5\u4f5c\u539f\u7406\uff1abuffer \u4e00\u4e2a\u4e00\u4e2a\u6309\u987a\u5e8f\u88ab\u5199\u3002\u4e24\u4e2arun\u8f6e\u6d41\u5bf9buffer\u8fdb\u884c\u5199\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u5982\u679c\u4e4b\u524d\u6709\u6ca1\u6709merge\u5b8c\u6210\u7684\uff0c\u6bd4\u8f83\u590d\u6742\uff0c\u9700\u8981\u7b49\u5f85\u3002</p> <p>\u4e00\u51714+2\u4e2abuffer, \u5185\u5b58\u670912\u4e2a\u6570\uff0c\u56e0\u6b64\u6bcf\u4e2abuffer2\u4e2a\u6570\u3002\u516d\u4e2abuffer,\u540e\u4e24\u4e2a\u662f\u8f93\u51fa\u7684</p> <p></p> <p></p> <p>\u8fd9\u9898A\u63cf\u8ff0\u7684\u662f3-&gt;4, B\u63cf\u8ff0\u7684\u662f4-&gt;5\uff0cC\u63cf\u8ff0\u7684\u662f5-&gt;6, D\u9519\u5728\u4e0d\u662f9\u548c15 merge, 9\u548c10 merge</p>"},{"location":"class-ADS/ADS%E5%90%8E%E7%AF%87/","title":"NP\u5b8c\u5168","text":"<ul> <li>NP\u5b8c\u5168\u95ee\u9898\uff1a\u627e\u4e0d\u5230\u591a\u9879\u5f0f\u7b97\u6cd5\uff0c\u4e5f\u65e0\u6cd5\u8bc1\u660e\u4e0d\u5b58\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5</li> <li>\u6700\u77ed\u8def\u5f84\u5224\u5b9a\u7248\u672c</li> <li>\u54c8\u5bc6\u987f\u5708</li> <li>3-CNF\u53ef\u6ee1\u8db3\u6027\u95ee\u9898</li> <li>P: \u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4O($ n^k $) \u5185\u89e3\u51b3\u7684\u95ee\u9898</li> <li>NP: \u4e0d\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u6216\u4e0d\u786e\u5b9a\u80fd\u4e0d\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\uff0c\u4f46\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u9a8c\u8bc1\uff08\u68c0\u9a8c\u4e00\u7ec4\u89e3\u662f\u5426\u6ee1\u8db3\uff09\u7684\u95ee\u9898\uff0cP$\\subseteq $NP</li> <li>NPC: NP\u5b8c\u5168\u95ee\u9898\uff0c\u6240\u6709NP\u95ee\u9898\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u90fd\u80fd\u7ea6\u5316(Reducibility)\u5230\u5b83 \u7684NP\u95ee\u9898\uff0c\u5373\u89e3\u51b3\u4e86\u6b64NPC\u95ee\u9898\uff0c\u6240\u6709NP\u95ee\u9898\u4e5f\u90fd\u5f97\u5230\u89e3\u51b3\u3002</li> <li>NP hard: NP\u96be\u95ee\u9898\uff0c\u6240\u6709NP\u95ee\u9898\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u90fd\u80fd\u7ea6\u5316(Reducibility)\u5230\u5b83 \u7684\u95ee\u9898(\u4e0d\u4e00\u5b9a\u662fNP\u95ee\u9898)\u3002</li> <li>\u5148\u8bc1\u660e\u5b83\u81f3\u5c11\u662f\u4e00\u4e2aNP\u95ee\u9898\uff0c\u518d\u8bc1\u660e\u5176\u4e2d\u4e00\u4e2a\u5df2\u77e5\u7684NPC\u95ee\u9898\u80fd\u7ea6\u5316\u5230\u5b83\uff08\u7531\u7ea6\u5316\u7684\u4f20\u9012\u6027\uff0c\u5219NPC\u95ee\u9898\u5b9a\u4e49\u7684\u7b2c\u4e8c\u6761\u4e5f\u5f97\u4ee5\u6ee1\u8db3\uff1b\u81f3\u4e8e\u7b2c\u4e00\u4e2aNPC\u95ee\u9898\u662f\u600e\u4e48\u6765\u7684\uff0c\u4e0b\u6587\u5c06\u4ecb\u7ecd\uff09\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u8bf4\u5b83\u662fNPC\u95ee\u9898\u4e86\u3002</li> <li>\u5df2\u77e5\u7684NPC\uff1aSAT\u95ee\u9898\uff0cVertex cover\uff0cTSP\u5224\u5b9a\u7248\u672c\uff08\u6c42\u6700\u77ed\u56de\u8def\u7684\u662fNPhard\u4f46\u4e0d\u662fNPC\uff0c\u4e00\u822c\u8bf4TSP\u90fd\u6307\u7684\u662fNPC\u7684TSP\uff09</li> <li></li> <li>reduction(\u89c4\u7ea6)\uff1a\u5982\u679c\u80fd\u627e\u5230\u8fd9\u6837\u4e00\u4e2a\u53d8\u5316\u6cd5\u5219\uff0c\u5bf9\u4efb\u610f\u4e00\u4e2a\u7a0b\u5e8fA\u7684\u8f93\u5165\uff0c\u90fd\u80fd\u6309\u8fd9\u4e2a\u6cd5\u5219\u53d8\u6362\u6210\u7a0b\u5e8fB\u7684\u8f93\u5165\uff0c\u4f7f\u4e24\u7a0b\u5e8f\u7684\u8f93\u51fa\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u8bf4\uff0c\u95ee\u9898A\u53ef\u7ea6\u5316\u4e3a\u95ee\u9898B\u3002</li> <li> <p>x\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u89c4\u7ea6\u5230y \uff08x $ \\leq_p $y\uff09</p> </li> <li> <p>\u4f8b\u5b50\uff1a</p> </li> <li> <p>\u505c\u673a\u95ee\u9898</p> </li> <li>\u6700\u77ed\u8def\u95ee\u9898<ul> <li>(G,s,t,k)\uff1as\u5230t\u662f\u5426\u6709\uff1c=k\u957f\u7684\u8def\u5f84</li> <li>decision\u95ee\u9898 -&gt; \u7b49\u4ef7\u4e8e\u4e00\u4e2a\u96c6\u5408</li> <li>instance:  -&gt; String <li>3-CNF\u95ee\u9898<ul> <li>satisfability\u95ee\u9898\uff08SAT\uff09</li> <li>\u5bf9\u4e00\u7ec4\u8d4b\u503c\uff0c\u8bc1\u660e\u53ef\u6ee1\u8db3</li> <li>3-SAT\uff1a\u6709k\u4e2aclause\uff0cthe MAX-3SAT problem is to find a truth assignment that satisfies as many clauses as possible.</li> <li>\u6bcf\u4e00\u4e2aclause\u90fd\u662f a || b || c \u7684\u5f62\u5f0f</li> <li>B() is an efficient verifier(\u9a8c\u8bc1\u5668) for problem X if</li> <li>B\u4e3a\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5</li> <li>P() is a poly function\u4e14\u6ee1\u8db3\u5bf9\u4efb\u610fs\uff0cs\u5c5e\u4e8eX\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728string t\u4f7f\u5f97B(s,t) = yes\uff0c\u5176\u4e2d|t|&lt;=P(|s|)</li> <li>B(s,t)\uff1a\u5728t\u4e0b\u8ba1\u7b97s\uff0c\u82e5s\u6ee1\u8db3\uff0c\u8fd4\u56deyes</li> <li>\u53ea\u8981\u6c42\u5b58\u5728\u6027\uff0cyes-certificate</li> </ul> </li> <li>\u54c8\u5bc6\u987f\u5708\uff08HCP\uff09<ul> <li>hint\uff1a\u4e00\u7ec4\u5708</li> <li>B\uff1a\u6309\u7167hint\u8d70\u4e00\u904d\uff0c\u68c0\u67e5\u662f\u5426\u6bcf\u4e2a\u70b9\u90fd\u8d70\u4e86\u4e00\u6b21</li> </ul> </li> <li>Travelling Salesman Problem\uff08TSP\uff09<ul> <li>\u7ed9\u4e00\u5f20\u5b8c\u5168\u56feG\u548c\u6574\u6570k\uff0c\u95ee\u662f\u5426\u5b58\u5728\u7b80\u5355\u73af\u4f7f\u5f97\u6bcf\u4e2a\u70b9\u8d70\u4e00\u6b21\u4e14cost&lt;=k</li> <li>HCP $ \\leq_p $TSP</li> <li>\u8865\u6210\u5b8c\u5168\u56fe\uff0c\u539f\u6765\u7684\u8fb9\u8bbe\u4e3a1\uff0c\u8865\u4e0a\u7684\u8fb9\u8bbe\u4e3a2\uff0c\u82e5HCP\u6210\u7acb\uff0c\u5219TSP\u7684k\u53d6\u4e3a|v|\u5373\u53ef</li> <li>\u5b9e\u4f8b\u7684\u8f6c\u5316\u4e3a\u591a\u9879\u5f0f\u65f6\u95f4</li> </ul> </li> <li>\u6700\u5927\u56e2\u95ee\u9898\uff08clique problem\uff09<ul> <li>\u7ed9\u51faG\u548ck</li> <li>\u95ee\u662f\u5426\u80fd\u9009\u51fa\u81f3\u5c11k\u4e2a\u70b9\u4f7f\u5f97\u4e24\u4e24\u4e4b\u95f4\u90fd\u6709\u8fb9\u76f8\u8fde\uff08\u4e3a\u56e2\uff09</li> </ul> </li> <li> <p>\u9876\u70b9\u8986\u76d6\u95ee\u9898\uff08vertex cover problem\uff09</p> <ul> <li>\u7ed9\u51faG\u548ck</li> <li>\u662f\u5426\u6709\u4e00\u4e2a\u70b9\u96c6\u4fdd\u8bc1\u6bcf\u6761\u8fb9\u81f3\u5c11\u6709\u4e00\u4e2a\u7aef\u70b9\u88ab\u9009\u4e2d</li> <li>clique problem $ \\leq_p $ vertex cover problem</li> <li>\u8fb9\u96c6\u4e92\u8865</li> <li>\u70b9\u96c6C\u5728G\u91cc\u662f\u56e2\u5f53\u4e14\u4ec5\u5f53\u5728V-C\u5728G'\u91cc\u662f\u9876\u70b9\u8986\u76d6</li> </ul> </li> <li> <p>\u9898\u76ee\uff1a</p> </li> <li> <p>1.If L1 \u2264p L2 and L2\u2208NP, then L1\u2208NP.     T     \u6ce8\u610f&lt;=p\u7b49\u4ef7\u4e8ereduce to\uff0c\u590d\u6742\u7684\u5982\u679c\u662fNp\uff0c\u90a3\u4e48\u7b80\u5355\u7684\u4e5f\u662fNP</p> <p>2.All NP-complete problems are NP problems. T</p> <p>3.All the languages can be decided by a non-deterministic machine. F \u4e0d\u786e\u5b9a\u56fe\u7075\u673a\u53ef\u4ee5\u7528\u6765\u9a8c\u8bc1NP\u95ee\u9898\u7684\u89e3\u662f\u5426\u662f\u6b63\u786e\u7684\uff0c\u786e\u5b9a\u56fe\u7075\u673a\u53ef\u4ee5\u7528\u6765\u6c42\u89e3P\u95ee\u9898\u3002</p> <p>NP hard\u95ee\u9898\u65e0\u6cd5\u901a\u8fc7\u4e0d\u786e\u5b9a\u56fe\u7075\u673a\u9a8c\u8bc1</p> <p>4.All NP problems can be solved in polynomial time in a non-deterministic machine. T</p> <p>5.If a problem can be solved by dynamic programming, it must be solved in polynomial time. F</p> <p>0-1\u80cc\u5305\u95ee\u9898\u53ef\u4ee5\u7528DP\u89e3\uff0c\u4f46\u662f\u590d\u6742\u5ea6\u4e0d\u662f\u591a\u9879\u5f0f\u7684, \u539f\u56e0\u662f\u8f93\u5165\u7684\u6570\u636e\u4e0d\u662f\u591a\u9879\u5f0f\u7684\u3002</p> <p>6.Among the following problems, __ is NOT an NP-complete problem.</p> <p>A.Vertex cover problem</p> <p>B.Hamiltonian cycle problem</p> <p>C.Halting problem</p> <p>D.Satisfiability problem</p> <p>D SAT\u95ee\u9898\u662f\u7b2c\u4e00\u4e2a\u88ab\u8bc1\u660e\u7684NPC\u95ee\u9898\uff0cA\u662fNPC\u95ee\u9898\uff0cB\u662f\u6c49\u5bc6\u5c14\u987f\u56de\u8def\uff0cNPC\u95ee\u9898\u3002C\u505c\u673a\u95ee\u9898\u662f\u4e0d\u53ef\u89e3\u7684\uff0c\u9009C</p> <p>7.Suppose Q is a problem in NP, but not necessarily NP-complete. Which of the following is FALSE?</p> <p>A.A polynomial-time algorithm for SAT would sufficiently imply a polynomial-time algorithm for Q.</p> <p>B.A polynomial-time algorithm for Q would sufficiently imply a polynomial-time algorithm for SAT.</p> <p>C.If Q \u2209P, then P\u2260NP.</p> <p>D.If Q is NP-hard, then Q is NP-complete.</p> <p>\u770b\u4e0a\u9762\u7684\u56fe\uff0cSAT\u662fNPC\u95ee\u9898\uff0c\u5982\u679c\u89e3\u51b3\u4e86\uff0c\u53ef\u4ee5\u89e3\u51b3\u6240\u6709NP\u95ee\u9898</p> <p>B\uff0c Q\u4e0d\u4e00\u5b9a\u662fNPC\u7684\uff0c\u6240\u4ee5\u4e0d\u5bf9\uff0cC\uff0c\u5982\u679cQ\u4e0d\u662fP\uff0c\u90a3\u4e48\u8bf4\u660eNP\u6ca1\u6709\u88ab\u89e3\u51b3\uff0cD\uff0cNP-hard\u548cNP\u4ea4\u96c6\u662fNPC</p> <p>8.A language L belongs to NP iff there exist a two-input polynomial-time algorithm A that verifies language L in polynomial time.</p> <p>T\uff0c \u8fd9\u662fppt\u4e0a\u7684</p> <p>9.Given that problem A is NP-complete. If problem B is in NP and can be polynomially reduced to problem A, then problem B is NP-complete.</p> <p>B&lt;= A\uff0c\u4f46\u662fA\u662fNPC\u95ee\u9898\uff0cA&lt;=B\u624d\u80fd\u8bf4\u660eB\u4e5f\u662fNPC\u95ee\u9898\u3002</p> <p>10.All decidable problems are NP problems.</p> <p>F\uff0c\u8fd8\u6709NP hard\u95ee\u9898</p> <p>11.All NP problems are decidable.</p> <p>T, \u53ef\u4ee5\u901a\u8fc7\u4e0d\u786e\u5b9a\u56fe\u7075\u673a\u5224\u65ad</p> <p>12.To prove problem B is NP-complete, we can use a NP-complete problem A and use a polynomial-time reduction algorithm to transform an instance of problem B to an instance of problem A.</p> <p>F, \u5e94\u8be5\u4e0d\u662f\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u800c\u662f\u6574\u4e2a\u95ee\u9898</p> <p>13.If P = NP then the Shortest-Path (finding the shortest path between a pair of given vertices in a given graph) problem is NP-complete.</p> <p>T, P=NP\u8bf4\u660e\u6240\u6709\u7684NP\u95ee\u9898\u5747\u53ef\u89e3\uff0c\u6240\u6709\u7684NPC\u95ee\u9898\u53ef\u89e3\uff0cNP=NPC</p> </li>"},{"location":"class-ADS/ADS%E5%90%8E%E7%AF%87/#_1","title":"\u8fd1\u4f3c","text":"<ul> <li> <p>\u8fd1\u4f3c\u6bd4\uff1a</p> </li> <li> <p>max(A(I)/opt(I) , opt(I)/A(I)) &lt;= $ \\rho \\((|I|)\uff0c\u5219\u79f0\u5176\u4e3a\\)\\rho$(n)\u8fd1\u4f3c\u7684\u7b97\u6cd5</p> </li> <li> <p>A polynomial-time approximation scheme(PTAS)</p> </li> <li> <p>PTAS\uff1a\u5173\u4e8en\u4e3a\u591a\u9879\u5f0f</p> </li> <li> <p>FPTAS\uff1a\u5173\u4e8e1/\u03f5\u4e5f\u4e3a\u591a\u9879\u5f0f</p> </li> <li> <p>\u4f8b\u5b50\uff1a</p> </li> <li> <p>Binpack problem\uff08NPhard\uff09</p> <ul> <li>input\uff1an items with sizes s1~sn</li> <li>output\uff1a\u7528\u5c3d\u53ef\u80fd\u5c11\u7684\u7bb1\u5b50\u88c5\uff08\u7bb1\u5b50\u5bb9\u91cf\u56fa\u5b9a\uff09</li> <li>Next fit\uff1a\u987a\u5e8f\u88c5\uff0c\u88c5\u4e0d\u4e0b\u5c01\u7bb1\u4e0b\u4e00\u4e2a</li> <li>NF\u7528\u7684\u7bb1\u5b50\u6570\uff0copt\u6700\u4f18\u89e3\u7bb1\u5b50\u6570</li> <li>NF/opt &lt;= 2\uff1a\u8fd1\u4f3c\u6bd4</li> <li>2-approximation\u7b97\u6cd5</li> <li>Any fit\uff1afor\u4e00\u904d\uff0c\u5f53\u524d\u6253\u5f00\u7684\u7bb1\u5b50\u53ef\u4ee5\u88c5\u5c31\u88c5\uff0c\u4e0d\u80fd\u5c31\u5f00\u4e00\u4e2a\u65b0\u7684</li> <li>First fit\uff1a\u627e\u7b2c\u4e00\u4e2a</li> <li>Best fit\uff1a\u627e\u88c5\u7684\u6700\u6ee1\u7684</li> <li>BF(I)&amp;FF(I) &lt;= 1.7opt(I)\uff0c\u5373\u8fd1\u4f3c\u6bd4\u4e3a1.7<ul> <li>\u7edd\u5bf9\u8fd1\u4f3c\u6bd4</li> </ul> </li> <li>First/Best fit decreasing:</li> <li>\u5148\u5bf9item\u6392\u5e8f</li> <li>BFD(I)&amp;FFD(I) &lt;= 11/9 opt(I) + 6/9<ul> <li>\u6e10\u8fdb\u8fd1\u4f3c\u6bd4\u4e3a11/9</li> <li>\u7edd\u5bf9\u8fd1\u4f3c\u6bd4\uff0c\u5728 opt(I) \u53d62\u65f6\u5f97\uff0c\u4e3a1.5</li> </ul> </li> <li>NP\u590d\u6742\u5ea6\u6700\u4f18\u8fd1\u4f3c\u6bd41.5\uff0c\u8981\u6c42online\u5219\u6700\u4f185/3</li> </ul> </li> <li> <p>Knapsack problem(\u80cc\u5305\u95ee\u9898)</p> <ul> <li>Input\uff1an items (v1,w1)~(vn,wn)\uff0c\u5bb9\u91cfC</li> <li>output\uff1a\u6700\u5927\u5316\u603b\u4ef7\u503c\u7684\u80cc\u5305\u88c5\u6cd5</li> <li>O(nC)\u6216O(nV_sum)\uff0c\u4f2a\u591a\u9879\u5f0f</li> <li>\u5206\u6570\u7248\u672c\uff1a\u53ef\u4ee5\u9009\u96f6\u70b9\u51e0\u4e2a\u7269\u54c1</li> <li>\u6309\u6027\u4ef7\u6bd4\u8d2a\u5fc3</li> <li>\u6574\u6570\u7248\u672c\uff08NPhard\uff09</li> <li>\u8d2a\u5fc3\u7b97\u6cd5<ul> <li>on vi/wi\uff08\u6027\u4ef7\u6bd4\uff09</li> <li>\u88ab\u5c0f\u7269\u4ef6\u5361\uff0c\u9009\u4e0d\u4e86\u9ad8\u4ef7\u503c\u5927\u7269\u4ef6</li> <li>OPT/A&gt;=(C-1)/2</li> <li>on vi\uff08\u4ef7\u503c\uff09</li> <li>\u88ab\u5927\u7269\u4ef6\u5361\uff0c\u9009\u4e0d\u4e86\u9ad8\u6027\u4ef7\u6bd4\u5c0f\u7269\u4ef6</li> <li>OPT/A&gt;=C-1</li> <li>\u4e24\u79cd\u7b97\u6cd5\u5b58\u5728\u7f3a\u70b9\uff0c\u4f46\u4e92\u8865</li> </ul> </li> <li>A*\uff1aA1\u548cA2\u5404\u8dd1\u4e00\u904d\u9009\u6700\u4f18<ul> <li>A1 &gt;= OPT_\u5206\u6570\u7248\u672c - Vmax</li> <li>A2 &gt;= Vmax</li> <li>\u52192A* &gt;= OPT_frac &gt;= OPT</li> <li>A* &gt;= OPT/2</li> </ul> </li> <li>\u4f18\u5316\uff1a\u6240\u6709v\u9664\u4ee5\u4e00\u4e2ad<ul> <li>\u539f\u672cO(\\(n^2V_{sum}\\))</li> <li>d=gcd(v1...vn)\uff0c\u5219\u4e0d\u5f71\u54cd\u7ed3\u679c</li> <li>d= $ \\lceil nV_{sum}/\\delta\\rceil$ \uff0c\u5219O($ n^3 / \\delta $)</li> <li>\u6c42\u51fa\u8fd1\u4f3c\u6bd4\u4e3a$ 1/1-\\delta $ </li> </ul> </li> <li>K-center problem</li> <li>Input\uff1an site s1...sn\uff0c\u6574\u6570k</li> <li>output\uff1a\u627e\u5230k\u4e2acenter\uff0c\u76d6\u4f4f\u6240\u6709sites\u5e76\u4f7f\u5f97\u534a\u5f84\u6700\u5c0f</li> <li>dist(x,c)=\\(min_{y\\sub C}\\) (dist(x,y))</li> <li>k=1\uff1a\u968f\u4fbf\u9009\u4e00\u4e2asite\u4f5c\u4e3acenter\uff0c\u8fd1\u4f3c\u6bd4\u4e3a2</li> <li>\u5df2\u77e5\u6700\u4f18\u89e3\uff1a<ul> <li>\u82e5\u5b58\u5728\u672a\u8986\u76d6site\uff0c\u9009\u4e3asite\uff0c\u7136\u540e\u53bb\u6389\u8986\u76d6\u7684site</li> <li>\u5faa\u73af\u6700\u591a\u8fdb\u884ck\u6b21</li> <li>\u6240\u4ee5\u5047\u5b9a\u4e00\u4e2a\u89e3\uff08\u4e8c\u5206\uff09</li> </ul> </li> <li>\u8d2a\u5fc3<ul> <li>\u9009\u4e00\u4e2asite\u4f5c\u4e3acenter</li> <li>\u4e00\u76f4\u9009\u62e9\u8ddd\u79bbcenter\u6700\u8fdc\u7684site\u4f5c\u4e3a\u65b0\u7684center</li> <li>\u5f97\u5230\u6700\u7ec8\u7684center\u96c6\u5408Ck</li> <li>r(Ck)&lt;=2r*</li> </ul> </li> </ul> </li> <li> <p>\u9898\u76ee\uff1a</p> <ul> <li>1.Suppose ALG is an \u03b1-approximation algorithm for an optimization problem \u03a0 whose approximation ratio is tight. Then for every \u03f5&gt;0 there is no (\u03b1\u2212\u03f5)-approximation algorithm for \u03a0 unless P = NP.   F, \u6309\u7167\u6211\u7684\u7406\u89e3\uff0c\u53ef\u80fd\u4f1a\u6709\u8fd1\u4f3c\u6bd4\u66f4\u5c0f\u7684\u7b97\u6cd5\u3002</li> </ul> <p>2.As we know there is a 2-approximation algorithm for the Vertex Cover problem. Then we must be able to obtain a 2-approximation algorithm for the Clique problem, since the Clique problem can be polynomially reduced to the Vertex Cover problem.   T\uff0c reduce to \u5c31\u7b97&lt;=\uff0c\u5982\u679cCP&lt;=VC, VC\u6709\u8fd1\u4f3c\u6bd4\u4e3a2\u7684\u7b97\u6cd5\uff0c\u90a3\u4e48CP\u4e5f\u6709</p> <p>3.For the bin-packing problem: let S=\u2211Si. Which of the following statements is FALSE?</p> <p>A.The number of bins used by the next-fit heuristic is never more than \u23082S\u2309</p> <p>B.The number of bins used by the first-fit heuristic is never more than \u23082S\u2309</p> <p>C.The next-fit heuristic leaves at most one bin less than half full</p> <p>D.The first-fit heuristic leaves at most one bin less than half full</p> <p>NF\u8fd1\u4f3c\u6bd4\u662f2\uff0c\u5176\u4ed6\u7684\u8fd1\u4f3c\u6bd4\u90fd\u6bd42\u5c0f\u3002Next fit\u53ef\u80fd\u6709\u591a\u4e2a\u534a\u7a7a\u7684bit\uff0c\u56e0\u4e3a\u5982\u679c\u6c38\u8fdc\u5f80\u524d\u653e\uff0c\u4e0d\u4f1a\u56de\u5934\u653e\u4e4b\u524d\u7684\uff0c\u6240\u4ee5\u662fC\uff0c\u800cFF\u4f1a\u68c0\u67e5\u4e4b\u524d\u6240\u6709\u4f4d\uff0c\u56e0\u6b64\u5982\u679c\u6709\u4e24\u4e2a\u534a\u7a7a\u7684\uff0c\u5b83\u4eec\u4f1a\u653e\u5728\u4e00\u8d77\u3002</p> <p>4.To approximate a maximum spanning tree T of an undirected graph G=(V,E) with distinct edge weights w(u,v) on each edge (u,v)\u2208E, let\u2019s denote the set of maximum-weight edges incident on each vertex by S. Also let w(E\u2032)=\u2211(u,v)\u2208E\u2032\uff0c w(u,v) for any edge set E\u2032. Which of the following statements is TRUE?</p> <p>A.S=T for any graph G</p> <p>B.S\u2260T for any graph G</p> <p>C.w(T)\u2265w(S)/2 for any graph G</p> <p>D.None of the above</p> <p>C, \u9898\u76ee\u7684\u610f\u601d\u662f\uff0c\u5982\u679c\u628a\u6bcf\u4e2a\u70b9\u6700\u5927\u6743\u503c\u7684\u8fb9\u52a0\u5165\u4e00\u4e2a\u96c6\u5408\uff0c\u90a3\u4e48\u8fd9\u4e2a\u96c6\u5408\u7684\u6743\u503c\u548c\u6700\u5927\u751f\u6210\u6811\u6743\u503c\u4e4b\u6bd4\u662f\u591a\u5c11\u3002\u6ce8\u610f\uff0c\u70b9\u7684\u6700\u5927\u6743\u503c\u8fb9\u96c6\u5408\u610f\u5473\u7740\u96c6\u5408\u91cc\u76f8\u540c\u7684\u8fb9\u6700\u591a\u51fa\u73b0\u4e00\u6b21\u3002</p> <p>\u5f88\u5bb9\u6613\u8bc1\u660e\uff0cS\u91cc\u9762\u4e0d\u5b58\u5728\u73af\uff0c\u56e0\u6b64T\u4e00\u5b9a\u5305\u542bS.\u6240\u4ee5w(T)&gt;=w(S)</p> <p>\u5047\u5982\u5b58\u5728\u73af\uff0c\u8bbe\u8fb9\u4e3ae1,e2,e3,\u2026ej, \u70b9\u4e3ap1, \u2026pj</p> <p>\u7531\u4e8ee1\u5728S\u4e2d\uff0c\u56e0\u6b64w(e1)&gt;w(ej)\uff0c\u7531\u4e8ee2\u5728S\u4e2d\uff0c\u56e0\u6b64w(e2)&gt;w(e1),\u2026\uff0c\u6700\u540e\u5f97\u5230\u7684\u662fw(ej)&gt;w(e1)\uff0c\u77db\u76fe\u3002</p> <p>5.Assume that you are a real world Chinese postman, which have learned an awesome course \u201cAdvanced Data Structures and Algorithm Analysis\u201d (ADS). Given a 2-dimensional map indicating N positions pi(xi ,yi) of your post office and all the addresses you must visit, you\u2019d like to find a shortest path starting and finishing both at your post office, and visit all the addresses at least once in the circuit. Fortunately, you have a magic item \u201cBamboo copter &amp; Hopter\u201d from \u201cDoraemon\u201d, which makes sure that you can fly between two positions using the directed distance (or displacement).</p> <p>Bamboo.jpg (\u201cBamboo copter &amp; Hopter\u201d, japan12.com/bamboo-copter-hopter)</p> <p>However, reviewing the knowledge in the ADS course, it is an NPC problem! Wasting too much time in finding the shortest path is unwise, so you decide to design a 2\u2212approximation algorithm as follows, to achieve an acceptable solution.</p> <p>Compute a minimum spanning tree T connecting all the addresses.   Regard the post office as the root of T.   Start at the post office.   Visit the addresses in order of a _____ of T.   Finish at the post office.   There are several methods of traversal which can be filled in the blank of the above algorithm. Assume that P\u2260NP, how many methods of traversal listed below can fulfill the requirement?</p> <p>Level-Order Traversal   Pre-Order Traversal   Post-Order Traversal</p> <p>A.0</p> <p>B.1</p> <p>C.2</p> <p>D.3</p> <p>C\uff0c\u4e0d\u77e5\u9053\u9898\u76ee\u518d\u8bf4\u4ec0\u4e48</p> <p>6.An approximation scheme that runs in O(n^2/\u03f5) for any fixed \u03f5&gt;0 is a fully polynomial-time approximation scheme.</p> <p>T, \u5982\u679c1/\u03f5\u4e5f\u662f\u591a\u9879\u5f0f\u7ea7\u522b\u7684\uff0c\u90a3\u4e48\u5c31\u7b97\u662ffull</p> <p>7.An approximation scheme that runs in O(n^2 3^\u03f5) for any fixed \u03f5&gt;0 is a polynomial-time approximation scheme.</p> <p>T, \u53ea\u8981\u662fn\u662f\u591a\u9879\u5f0f\u7ea7\u522b\u7684\u5c31\u53ef\u4ee5\u3002</p> <p>8.In the bin packing problem, we are asked to pack a list of items L to the minimum number of bins of capacity 1. For the instance L, let FF(L) denote the number of bins used by the algorithm First Fit. The instance L\u2032 is derived from L by deleting one item from L. Then FF(L\u2032) is at most of FF(L).</p> <p>F, \u5982\u679c\u662fNF\u5219\u662fF, yds\u8bf4\u7684\u3002</p> <p>9.For the 0-1 version of the Knapsack problem, if we are greedy on taking the maximum profit or profit density, then the resulting profit must be bounded below by the optimal solution minus the maximum profit.</p> <p>Popt&lt;Pfrac&lt;Pgre+pmax\uff0c\u6700\u4f18\u89e3\u4e00\u5b9a\u5c0f\u4e8e\u7269\u4f53\u53ef\u5206\u60c5\u51b5\u4e0b\u7684\u89e3\u3002\u800c\u7269\u4f53\u53ef\u5206\u60c5\u51b5\u4e0b\u7684\u89e3\uff0c\u53ef\u4ee5\u770b\u6210greedy\u7684\u89e3+\u4e00\u90e8\u5206\u4e0d\u5b8c\u6574\u7684\u7269\u4f53\u3002\u4e0d\u5b8c\u6574\u7684\u7269\u4f53\u6743\u503c\u4e00\u5b9a\u5c0f\u4e8e\u6700\u5927\u6743\u503c\u3002</p> <p>(\u611f\u89c9\u8bc1\u660e\u6709\u95ee\u9898)</p> <p>10.An (1+\u03f5)-approximation scheme of time complexity (n+1/\u03f5)^3 is a PTAS but not an FPTAS.</p> <p>F</p> </li> </ul>"},{"location":"class-ADS/ADS%E5%90%8E%E7%AF%87/#_2","title":"\u5916\u90e8\u6392\u5e8f","text":"<p>1.Suppose we have the internal memory that can handle 12 numbers at a time, and the following two runs on the tapes:</p> <p>Run 1: 1, 3, 5, 7, 8, 9, 10, 12</p> <p>Run 2: 2, 4, 6, 15, 20, 25, 30, 32</p> <p>Use 2-way merge with 4 input buffers and 2 output buffers for parallel operations. Which of the following three operations are NOT done in parallel?</p> <p>(3\u5206)</p> <p>A.1 and 2 are written onto the third tape; 3 and 4 are merged into an output buffer; 6 and 15 are read into an input buffer</p> <p>B.3 and 4 are written onto the third tape; 5 and 6 are merged into an output buffer; 8 and 9 are read into an input buffer</p> <p>C.5 and 6 are written onto the third tape; 7 and 8 are merged into an output buffer; 20 and 25 are read into an input buffer</p> <p>D.7 and 8 are written onto the third tape; 9 and 15 are merged into an output buffer; 10 and 12 are read into an input buffer</p> <p>\u5de5\u4f5c\u539f\u7406\uff1abuffer \u4e00\u4e2a\u4e00\u4e2a\u6309\u987a\u5e8f\u88ab\u5199\u3002\u4e24\u4e2arun\u8f6e\u6d41\u5bf9buffer\u8fdb\u884c\u5199\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u5982\u679c\u4e4b\u524d\u6709\u6ca1\u6709merge\u5b8c\u6210\u7684\uff0c\u6bd4\u8f83\u590d\u6742\uff0c\u9700\u8981\u7b49\u5f85\u3002</p> <p>\u4e00\u51714+2\u4e2abuffer, \u5185\u5b58\u670912\u4e2a\u6570\uff0c\u56e0\u6b64\u6bcf\u4e2abuffer2\u4e2a\u6570\u3002\u516d\u4e2abuffer,\u540e\u4e24\u4e2a\u662f\u8f93\u51fa\u7684</p> <p></p> <p></p> <p>\u8fd9\u9898A\u63cf\u8ff0\u7684\u662f3-&gt;4, B\u63cf\u8ff0\u7684\u662f4-&gt;5\uff0cC\u63cf\u8ff0\u7684\u662f5-&gt;6, D\u9519\u5728\u4e0d\u662f9\u548c15 merge, 9\u548c10 merge</p>"},{"location":"class-DB/12/","title":"\u7269\u7406\u5b58\u50a8","text":""},{"location":"class-DB/12/#_1","title":"\u7269\u7406\u5b58\u50a8","text":"<ul> <li> <p>\u5206\u7c7b\uff1a</p> </li> <li> <p>\u6613\u5931\u5b58\u50a8 volatile storage </p> </li> <li> <p>\u975e\u6613\u5931\u5b58\u50a8 non-volatile storage </p> </li> <li> <p></p> </li> <li> <p>NVM\uff08non-volatile memory\uff09: \u6389\u7535\u4e0d\u4e22</p> </li> <li> <p>primary storage: Fastest media but volatile (cache, main memory).</p> </li> <li> <p>secondary storage: next level in hierarchy, non-volatile, moderately fast access time</p> <p>also called on-line storage </p> <p>E.g. flash memory, magnetic disks</p> </li> <li> <p>tertiary storage: lowest level in hierarchy, non-volatile, slow access time</p> <p>also called off-line storage </p> <p>E.g. magnetic tape, optical storage</p> </li> <li> <p>\u78c1\u76d8 magnetic disks</p> </li> <li> <p>tracks(\u78c1\u9053)  sectors(\u6247\u533a)</p> </li> <li> <p>Access Time \u8bbf\u95ee\u65f6\u95f4\uff0c\u6beb\u79d2\u7ea7</p> <ul> <li>Seek Time \u5bfb\u9053\u65f6\u95f4\uff1a\u627e\u5230\u5bf9\u5e94\u78c1\u9053</li> <li>Rotational latency \u65cb\u8f6c\u5ef6\u8fdf\uff1a\u8f6c\u5230\u5bf9\u5e94\u6247\u533a</li> </ul> </li> <li> <p>Data-transfer rate \u6570\u636e\u4f20\u8f93\u7387</p> </li> <li> <p>\u6570\u636e\u5e93\u4f20\u8f93\u4ee5block\u4e3a\u5355\u4f4d </p> </li> <li> <p>\u8bbf\u95ee\u6a21\u5f0f\uff1a</p> <ul> <li> <p>Sequential access pattern(\u987a\u5e8f\u8bbf\u95ee\u6a21\u5f0f)   Successive requests are for successive disk blocks   Disk seek required only for first block</p> </li> <li> <p>Random access pattern\uff08\u968f\u673a\u8bbf\u95ee\u6a21\u5f0f\uff09   Each access requires a seek   Transfer rates are low since a lot of time is wasted in seeks </p> </li> </ul> <p>\u5c3d\u91cf\u8f6c\u5316\u4e3a\u987a\u5e8f\u8bbf\u95ee\u6a21\u5f0f </p> <ul> <li> <p>I/O operations per second (IOPS \uff0c\u6bcf\u79d2I/O\u64cd\u4f5c\u6570)</p> </li> <li> <p>\u8861\u91cf\u78c1\u76d8\u8bbf\u95ee\u901f\u5ea6</p> </li> <li>Number of random block reads that a disk can support per second     50 to 200 IOPS on current generation magnetic disks</li> </ul> </li> <li> <p>Mean time to failure (MTTF\uff0c\u5e73\u5747\u6545\u969c\u65f6\u95f4)</p> <ul> <li>\u8861\u91cf\u78c1\u76d8\u53ef\u9760\u6027</li> <li>the average time the disk is expected to run continuously without any failure</li> </ul> </li> <li> <p>\u78c1\u76d8\u5757\u8bbf\u95ee\u7684\u4f18\u5316</p> </li> <li> <p>Buffering \u7f13\u5b58: in-memory buffer to cache disk blocks</p> </li> <li> <p>Read-ahead(Prefetch): Read extra blocks from a track in anticipation that they will be requested soon</p> </li> <li> <p>Disk-arm-scheduling algorithms re-order block requests so that disk arm movement is minimized </p> </li> <li> <p>File organization\uff1a\u5c06\u788e\u7247\u5316\u7684\u6587\u4ef6\u91cd\u65b0\u6574\u7406     Allocate blocks of a file in as contiguous a manner as possible     Allocation in units of extents(\u76d8\u533a\uff09</p> </li> <li> <p>Nonvolatile write buffers \uff08\u975e\u6613\u5931\u6027\u5199\u7f13\u5b58\uff09</p> <p>speed up disk writes by writing blocks to a non-volatile RAM buffer immediately</p> </li> <li> <p>Log disk\uff08\u65e5\u5fd7\u78c1\u76d8\uff09</p> <p>a disk devoted to writing a sequential log of block updates Used exactly like nonvolatile RAM</p> </li> <li> <p>Flash Storage</p> </li> <li> <p>NAND flash</p> <ul> <li>Page can only be written once   Must be erased to allow rewrite</li> </ul> </li> <li>SSD(Solid State Disks) <ul> <li></li> <li>SSD\u6bd4\u78c1\u76d8\u5feb\u767e\u500d\uff0c\u78c1\u76d8\u80fd\u8017\u9ad8\uff08\u673a\u68b0\u8fd0\u52a8\uff09\u66f4\u65b0\u4e3a\u5373\u5e2d\u5199\u5165</li> </ul> </li> <li>Flash storage \u4e2d\u7684\u5730\u5740\u6620\u5c04\u6f02\u79fb\uff0c\u5df2\u8fbe\u6210\u78e8\u635f\u5747\u8861\uff08wear leveling)</li> <li></li> <li> <p>\u5bf9\u4e8e\u5927\u6570\u636e\uff0c\u70ed\u6570\u636e\uff08\u5e38\u8bbf\u95ee\uff09\u653e\u5728SSD\uff0c\u51b7\u6570\u636e\u653e\u5728\u78c1\u76d8\u91cc</p> </li> <li> <p>NVM\uff0c\u53c8\u79f0Storage Class Memory</p> </li> <li> <p></p> </li> <li>Persistence\u53ef\u4ee5\u770b\u51fa\u662f\u5426\u6613\u5931</li> <li> <p>NVM\u548cSSD\u4e0e\u786c\u76d8\u4e0d\u540c\uff0c\u7528\u5b57\u8282\u5bfb\u5740</p> </li> <li> <p>\u968f\u5802\u6d4b\u8bd5\uff1a</p> </li> <li> <p>Which physical storage media is non-volatile?</p> <p>\u591a\u9009\u9898 (1 \u5206) </p> <p>A.cache</p> <p>B.main memory</p> <p>C.flash memory</p> <p>D.magnetic disk</p> <p>E.SSD(State Solid Disk)</p> <p>F.magnetic tapes</p> <p>G.optical disk</p> <p>\u6b63\u786e\u7b54\u6848: C D E F G</p> </li> <li> <p>Which physical storage medias belong to the secondary storage? </p> <p>\u591a\u9009\u9898 (1 \u5206)</p> <p>A.cache</p> <p>B.main memory </p> <p>C.flash memory</p> <p>D.SSD(Solid State Disk)</p> <p>E.magnetic disk</p> <p>F.magnetic tapes</p> <p>G.optical disk</p> <p>\u6b63\u786e\u7b54\u6848: C D E</p> </li> <li> <p>Which term represents the time that the disk controller takes to reposition the disk arm over the correct track.</p> <p>\u5355\u9009\u9898 (1 \u5206)</p> <p>A.access time</p> <p>B.seek time</p> <p>C.rotational latency</p> <p>D.data-transfer rate </p> <p>\u6b63\u786e\u7b54\u6848: B</p> </li> <li> <p>What is the right approach to  optimizing  data access of disks?</p> <p>\u591a\u9009\u9898 (1 \u5206)</p> <p>A.Buffering</p> <p>B.Read-ahead</p> <p>C.defragment the file system</p> <p>D.Non-volatile write buffers</p> <p>E.Log disk</p> <p>\u6b63\u786e\u7b54\u6848: A B C D E</p> </li> <li> <p>MTTF means    1   (\u6ce8\u610f\uff1a\u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199).</p> <p>\u586b\u7a7a\u9898 (1 \u5206) (\u8bf7\u6309\u9898\u76ee\u4e2d\u7684\u7a7a\u7f3a\u987a\u5e8f\u4f9d\u6b21\u586b\u5199\u7b54\u6848)</p> <p>\u6b63\u786e\u7b54\u6848: Mean Time To Failure</p> </li> <li> <p>IOPS  means     1   (\u6ce8\u610f\uff1a\u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199).</p> <p>\u586b\u7a7a\u9898 (1 \u5206) (\u8bf7\u6309\u9898\u76ee\u4e2d\u7684\u7a7a\u7f3a\u987a\u5e8f\u4f9d\u6b21\u586b\u5199\u7b54\u6848)</p> <p>\u6b63\u786e\u7b54\u6848: I/O Operations Per Second</p> </li> </ul>"},{"location":"class-DB/13/","title":"\u6570\u636e\u5b58\u50a8\u7ed3\u6784","text":""},{"location":"class-DB/13/#_1","title":"\u6570\u636e\u5b58\u50a8\u7ed3\u6784","text":"<ul> <li> <p>\u6570\u636e\u5e93\u6587\u4ef6\u5b58\u5728\u78c1\u76d8\u91cc\uff0c\u6587\u4ef6\u7531\u8bb0\u5f55(record)\u7ec4\u6210\uff0crecord\u7531\u5404\u4e2a\u5b57\u6bb5(field)\u7ec4\u6210</p> </li> <li> <p>\u5b9a\u957f\u8bb0\u5f55(Fixed-Length Record)\uff0c\u53ef\u4ee5\u8ba1\u7b97\u6bcf\u4e2ablock\u53ef\u4ee5\u653e\u591a\u5c11\u8bb0\u5f55</p> </li> <li> <p>\u5b58record i\uff1a\u82e5\u957fn byte\uff0c\u4ecen*(i-1) byte\u5f00\u59cb</p> </li> <li> <p>\u5220\u9664\uff1a\u4e0d\u79fb\u52a8 record\uff0c\u8bb0\u4e3a\u7a7a\u8bb0\u5f55</p> <ul> <li>\u7a7a\u8bb0\u5f55\u8bbe\u6307\u9488\u6307\u4e0b\u4e00\u4e2a\u7a7a\u7684record</li> <li>\u5934\u90e8\u52a0\u4e0aheader\u6307\u5411\u7b2c\u4e00\u6761\u7a7a\u8bb0\u5f55</li> </ul> </li> <li> <p>\u4e0d\u5b9a\u957f\u8bb0\u5f55(Variable-Length Record)</p> </li> <li> <p>\u539f\u56e0\uff1a\u6709\u4e0d\u5b9a\u957f\u5b57\u7b26\u4e32\uff0c\u6709\u7a7a\u5b57\u6bb5</p> </li> <li>\u65b9\u6cd5\uff1a\u4e0d\u5b9a\u957f\u7684\u5168\u653e\u540e\u9762\uff0c\u7528(offset,length)\u8bb0\u5f55\u4f4d\u7f6e\u548c\u957f\u5ea6</li> <li></li> <li>Null bitmap\uff1a\u6709\u51e0\u4e2a\u5c5e\u6027\u5c31\u6709\u51e0\u4f4d\uff0c0\u8868\u793a\u975e\u7a7a\uff0c1\u8868\u793a\u7a7a</li> <li></li> <li>\u63d2\u5165\uff1a\u6307\u9488+\u957f\u5ea6\u5b58\u8bb0\u5f55\u4f4d\u7f6e\uff0c\u5728free space\u4ece\u540e\u5f80\u524d\u63d2\u5165</li> <li> <p>\u5220\u9664\uff1a\u76f8\u5bf9\u5730\u5740\uff0cblock_num + index</p> </li> <li> <p>Record\u7ec4\u7ec7\u89c4\u5219\uff1a</p> </li> <li> <p>\u5806\uff1a</p> <ul> <li></li> <li>\u7ef4\u62a4\u7a7a\u95f2\u5757\u7684map\uff0c\u8bb0\u5f55\u7a7a\u95f2\u7a0b\u5ea6\uff1a7\u5373\u215e\u7684\u7a7a\u95f2</li> </ul> </li> <li>\u987a\u5e8f Sequential<ul> <li>\u63d2\u5165\uff1a\u63d2\u5230\u4e2d\u95f4\u4f1a\u5bfc\u81f4\u540e\u9762\u7684\u8bb0\u5f55\u5168\u4f53\u540e\u79fb\uff0c\u56e0\u6b64\u76f4\u63a5\u653e\u5728\u6700\u540e\uff0c\u901a\u8fc7\u6307\u9488\u4e32\u8054</li> <li>\u6bcf\u4e2a\u4e00\u6bb5\u65f6\u95f4\u6309\u987a\u5e8f\u91cd\u6574\uff08\u514b\u670d\u788e\u7247\u5316\uff09</li> </ul> </li> <li>B+\u6811</li> <li> <p>\u54c8\u5e0c</p> </li> <li> <p>\u5b58\u653e\u65b9\u5f0f\uff1a</p> </li> <li> <p>\u6309\u884c\u5b58\u653e</p> </li> <li> <p>\u6309\u5217\u5b58\u653e\uff1acache\u547d\u4e2d\u7387\u9ad8</p> </li> <li> <p>\u7f13\u5b58\u7ba1\u7406 Buffer manager</p> </li> <li> <p>\u7f13\u5b58\u66ff\u6362\uff1a</p> <ul> <li>LRU\u7b56\u7565\uff08Least Recently Used\uff09\u6700\u8fd1\u6700\u5c11\u7528\u5230</li> <li></li> <li>\u5728for\u5faa\u73af\u7b49\u573a\u666f\uff0cLRU\u53ef\u80fd\u662f\u4e00\u79cd\u574f\u7b56\u7565</li> </ul> </li> <li>\u82e5\u8bbf\u95ee\u7684block\u4e0d\u5728\u7f13\u5b58\uff0c\u8bfb\u51fa\u5230\u7f13\u51b2\u533a</li> <li> <p>\u8bbf\u95ee\u8bf7\u6c42\u65f6\uff0c\u9489\u5728(pin)\u7f13\u51b2\u533a\uff0c\u8bf7\u6c42\u4e3a\u8bfb\u65f6\u52a0\u5171\u4eab\u9501\uff0c\u5199\u65f6\u52a0exclusive lock</p> </li> <li> <p>\u968f\u5802\u6d4b\u8bd5\uff1a</p> </li> <li> <p>What is contained in the header of slotted page? </p> <p>\u591a\u9009\u9898 (1 \u5206)</p> <p>A.number of record entries</p> <p>B.end location of free space in the block</p> <p>C.location of each record</p> <p>D.size of each record</p> <p>E.primary key of each record</p> <p>\u6b63\u786e\u7b54\u6848: A B C D</p> </li> <li> <p>What kind file organization is suitable for applications that require sequential processing of the entire file? </p> <p>\u5355\u9009\u9898 (1 \u5206)</p> <p>A.heap file organization</p> <p>B.sequential file organization</p> <p>C.multitable clustering file organization</p> <p>D.hash file organization</p> <p>\u6b63\u786e\u7b54\u6848: B</p> </li> <li> <p>Which statement is incorrect?</p> <p>\u591a\u9009\u9898 (1 \u5206)</p> <p>A.For heap file organization, records can be placed anywhere in the file where there is free space.</p> <p>B.Database system seeks to minimize the number of block transfers between the disk and memory. </p> <p>C.If the needed block is not in the buffer, the buffer manager will replace some other block, if required, to make space for the new block.</p> <p>D.LRU is the most suitable replacement strategy for buffer manager in any cases.</p> <p>\u6b63\u786e\u7b54\u6848: D</p> </li> <li> <p>For the buffer manager, there are following assumptions:</p> <p>\u2022 There are 4 buffer pages.</p> <p>\u2022 Initially the buffer is empty occupied.</p> <p>\u2022 The data access sequence is 1,2,3,4,5,4,3,2,1,3,5</p> <p>According to the LRU replacement strategy, there are    1    times replacements occurred,  and the data item    2    is the least recently used after completing the above data access sequence.</p> <p>\u586b\u7a7a\u9898 (1 \u5206) (\u8bf7\u6309\u9898\u76ee\u4e2d\u7684\u7a7a\u7f3a\u987a\u5e8f\u4f9d\u6b21\u586b\u5199\u7b54\u6848)</p> <p>\u6b63\u786e\u7b54\u6848:</p> <p>1\uff1a3</p> <p>2\uff1a2</p> </li> </ul>"},{"location":"class-DB/14/","title":"\u7d22\u5f15","text":""},{"location":"class-DB/14/#indexing","title":"\u7d22\u5f15Indexing","text":"<ul> <li> <p>Form\uff1asearch key - pointer</p> </li> <li> <p>Query type</p> </li> <li> <p>Point query: records with a specified value in the attribute</p> </li> <li> <p>Range query: records with an attribute value falling in a specified range of values.</p> </li> <li> <p>Primary index \u4e3b\u7d22\u5f15</p> </li> <li> <p></p> </li> <li> <p>candidate key\u552f\u4e00\u60c5\u51b5\u4e0b\u7528\u8d77\u6765\u65b9\u4fbf</p> </li> <li> <p>Secondary Indices</p> </li> <li> <p></p> </li> <li>\u4e0d\u552f\u4e00\uff0c\u4e2d\u95f4\u7684\u6307\u9488\u6307\u5411\u591a\u4e2a\u76ee\u6807</li> <li></li> <li> <p>Dense index\uff1aIndex record appears for every search-key value in the file. </p> </li> <li> <p></p> </li> <li> <p>Sparse index\uff1acontains index records for only some search-key values.</p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p>Multilevel Index\uff08\u591a\u7ea7\u7d22\u5f15\uff09</p> </li> <li> <p>\u7d22\u5f15\u7684\u7d22\u5f15</p> </li> <li> <p></p> </li> <li> <p>B+ Tree Index</p> </li> <li> <p>\u6bcf\u4e2a\u8282\u70b9\u90fd\u548cblock\u5927\u5c0f\u4e00\u6837</p> </li> <li></li> <li>\u53f6\u5b50\u7ed3\u70b9\u5c31\u662f\u672b\u7ea7\u7d22\u5f15\uff0c\u4e4b\u95f4\u7528\u6307\u9488\u76f8\u8fde\uff0c\u4f7f\u8fde\u7eed</li> <li>\u9ad8\u5ea6\uff1a$ log_{n}(k)&lt;= height &lt;=log_{n/2}(k/2)+1 $\uff0c\u5411\u4e0a\u53d6\u6574\uff08\u6839\u8282\u70b9\u6700\u5c0f\u4e24\u53c9\uff09</li> <li>\u5927\u5c0f\uff1a\u6700\u5927\uff1a\u534a\u6ee1\uff0c\u6700\u5c0f\uff1a\u5168\u6ee1</li> <li>\u548cADS\u4e0d\u540c\uff1a\u6bcf\u4e2a\u8282\u70b9\u5bb9\u91cf\u76f8\u7b49\uff0c\u975e\u53f6\u5b50\u548c\u53f6\u5b50\u4e00\u6837\uff08ADS\u91cc\u975e\u53f6\u5b50\u6700\u591a\u9636\u6570-1\uff09<ul> <li>\u4e5f\u5c31\u662f\u8bf4\u4e2d\u95f4\u7ed3\u70b9\u7684\u5206\u53c9\u6570\u6bd4\u53f6\u5b50\u7ed3\u70b9\u503c\u6570\u591a1</li> </ul> </li> <li> <p>\u4f5c\u7528\uff1a\u53c9\u6570\u591a\uff0c\u5c42\u6570\u5c11\uff0c\u51cf\u5c11seek&amp;block transfer\u6b21\u6570</p> </li> <li> <p>\u4f30\u8ba1 height &amp; size</p> </li> <li> <p>person( pid char(18) primary key,  </p> <p>\u200b           name char(8), </p> <p>\u200b           age smallint, \u200b             address char(40)); </p> <p>Block size : 4K 1000000 persons</p> </li> <li> <p>Records per block =  4096/(18+8+2+40) =60.235=60</p> <ul> <li>record \u5927\u5c0f\u6839\u636e\u5404\u4e2a\u5c5e\u6027\u7c7b\u578b\u7b97</li> </ul> </li> <li> <p>blocks for storing 1M persons= 1000000/60 =16667</p> <ul> <li>\u8ba1\u7b97block\u6570</li> </ul> </li> <li> <p>B+ tree n(fan-out)  = (4096-4)/(18+4) +1 = 187</p> <ul> <li>B+\u6811\u4e00\u4e2a\u8282\u70b9\u5c31\u662f\u4e00\u4e2ablock\uff0c\u5b58\u653eM\u4e2a\u503c\u548cM+1\u4e2a\u6307\u9488</li> </ul> <p>\u5373\u4f7f\u662f\u53f6\u5b50\u7ed3\u70b9\uff0c\u4e5f\u591a\u51fa\u4e00\u4e2a\u6307\u5411\u4e0b\u4e00\u4e2a\u53f6\u5b50\u7684\u6307\u9488</p> <p>\u6307\u9488\u6bd4\u503c\u591a\u4e00\u4e2a\uff0c\u6240\u4ee5\u5148-4\uff0c\u540e+1</p> <ul> <li> <p>\u4e00\u4e2a\u7d22\u5f15\u9879=\u7d22\u5f15\u503c+\u6307\u9488(\u5047\u8bbe4byte)=18+4</p> </li> <li> <p>\u6700\u5927187\u53c9\uff0c\u6700\u5c11 n/2 = 94\u53c9</p> </li> <li> <p>\u80fd\u7d22\u5f15\u591a\u5c11\u503c</p> </li> <li> <p>2 levels:  min=2<code>*</code>93 = 186            max= 187'<code>*</code>186 = 34,782</p> </li> <li> <p>3 levels:  min=2<code>*</code>94<code>*</code>93 = 17484        max=187<code>*</code>187<code>*</code>186 = 6,504,234</p> </li> <li> <p>4 levels:  min=2<code>*</code>94<code>*</code>94<code>*</code>93 = 1,643,496</p> <p>\u200b              max=187<code>*</code>187<code>*</code>187<code>*</code>186 = 1,216,291,758</p> </li> <li> <p>\u6613\u5f97\u8fd9\u4e2aB+\u6811\u4e3a3\u5c42</p> </li> </ul> </li> <li> <p>size\uff1a</p> <ul> <li>\u6700\u5c0f\uff08\u5168\u6ee1\uff09100000/186+100000/186/187+1</li> <li>\u6700\u5927\uff08\u534a\u6ee1\uff09100000/93+100000/93/94+1</li> </ul> </li> <li> <p>Bottom-up B+ Tree Build</p> </li> <li> <p></p> </li> <li>fanout = 4\uff0c\u5219\u9636\u6570\u4e3a3</li> <li>\u5148\u6392\u5e8f\uff0c\u6309\u5e8f\u5206\u5757\uff0c\u7136\u540e\u5411\u4e0a\u6784\u5efa</li> <li>\u6784\u5efa\u4e0a\u56feB+\u6811 cost\uff1a1 seek + 9 block transfer</li> <li>\u63d2\u5165\u5927\u91cf\u503c/\u5408\u5e76\u6811\u53ef\u4ee5\u76f4\u63a5\u628a\u53f6\u5b50merge\u5e76\u6392\u5e8f\uff0c\u7136\u540e\u91cd\u5efa</li> <li></li> <li> <p>\u539f\u6811\u7684\u53f6\u5b50\u8bfb\u53d6\uff1a1 seek+6 block transfer</p> </li> <li> <p>Indexing in Main Memory</p> </li> <li> <p>Random access in memory </p> <ul> <li>Much cheaper than on disk/flash, but still expensive compared to cache read</li> <li>Binary search for a key value within a large B+-tree node results in many cache misses</li> <li>Data structures that make best use of cache preferable \u2013 cache conscious</li> </ul> </li> <li>Cache miss<ul> <li>HD\u4ee5block\u4e3a\u5355\u4f4d\u8bfb\u5230buffer\uff0cbuffer\u4ee564byte(\u4f8b)\u4e3a\u5355\u4f4d\u8bfb\u5230cache\uff0c\u5927\u8282\u70b9\u5c31\u4f1a\u8bfb\u4e0d\u5168\uff0c\u67e5\u627e\u7d22\u5f15\u503c\u8fc7\u7a0b\u4e2d\u8bfb\u53d6\u7684cache\u53ea\u6709\u5c0f\u90e8\u5206\u6709\u7528\uff0c\u6ca1\u627e\u5230-&gt;\u4ea7\u751fmiss</li> <li>\u964d\u4f4emiss\uff1a</li> <li>\u5c0f\u8282\u70b9\uff1aB+ trees with small nodes that fit in cache line are preferable to reduce cache misses</li> <li>\u6307\u9488\u548csearch key\u5206\u5f00\u6392</li> <li>\u5efa\u7acb\u4e00\u4e2a\u201c\u8def\u6807\u201d\uff08\u4e00\u68f5\u5c0f\u6811\uff09</li> </ul> </li> <li> <p>Key idea:  </p> <ul> <li>use large node size to optimize disk access, </li> <li>but structure data within a node using a tree with small node size, instead of using an array, to optimize cache access.</li> </ul> </li> <li> <p>LSM tree(Log Structured Merge) \u5199\u4f18\u5316\u7684\u6811\u7ed3\u6784</p> </li> <li> <p></p> </li> <li>Benefits of LSM approach     Inserts are done using only sequential I/O operations \u968f\u673a\u5199-&gt;\u987a\u5e8f\u5199     Leaves are full, avoiding space wastage     Reduced number of I/O operations per record inserted as compared to normal B+-tree (up to some size)</li> <li> <p>Drawback of LSM approach     Queries have to search multiple trees     Entire content of each level copied multiple times</p> </li> <li> <p>LSM-Stepped Merge Index</p> </li> <li> <p></p> </li> <li>\u5185\u5b58\u6ee1\u4e86\u76f4\u63a5\u5199\u5230\u4e0b\u4e00\u5c42\u6765\uff0cdisk\u4e2d\u8fd9\u4e00\u5c42\u6ee1\u4e86\u518dmerge\u5199\u5230\u4e0b\u4e00\u5c42</li> <li>\u5220\u9664\uff1a\u63d2\u5165\u5220\u9664\u6807\u8bb0</li> <li> <p>\u66f4\u65b0\uff1a\u5220\u9664+\u63d2\u5165</p> </li> <li> <p>Buffer Tree</p> </li> <li> <p></p> </li> <li> <p>\u968f\u5802\u6d4b\u8bd5</p> </li> <li> <p>1.Indexing mechanisms are used to speed up access  to desired data.</p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B.No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> <li> <p>2.Range query returns records with an attribute value falling in a specified range of values.</p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B.No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> <li> <p>3.Secondary index is an index whose search key specifies an order same as the sequential order of the file. </p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B.NO</p> <p>\u6b63\u786e\u7b54\u6848: B</p> </li> <li> <p>4.In an dense index, index record appears for every search-key value in the file. </p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B.No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> <li> <p>5.In a B+-tree , all paths from root to leaf are of the same length.</p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B.No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> <li> <p>6.If the root of a B+-tree is not a leaf, it has at least 2 children.</p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes </p> <p>B.No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> <li> <p>7.In databases, a node of a B+-tree is generally the same size as a disk block.</p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B.No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> <li> <p>8.The leaf nodes of a B+-tree file organization store records, instead of pointers to records.</p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B.No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> <li> <p>9.Benefits of LSM approach:</p> <p>\u591a\u9009\u9898 (1 \u5206)</p> <p>A.Inserts are done using only sequential I/O operations</p> <p>B.Leave nodes are full, avoiding space wastage</p> <p>C.Reduced number of I/O operations per record inserted as compared to normal B+-tree.</p> <p>D.Queries have to search multiple trees</p> <p>E.Entire content of each level copied multiple times</p> <p>\u6b63\u786e\u7b54\u6848: A B C</p> </li> <li> <p>10.Bitmap indices are useful for queries on multiple attributes,not particularly useful for single attribute queries.</p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B. No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> </ul>"},{"location":"class-DB/15/","title":"\u67e5\u8be2\u5904\u7406","text":""},{"location":"class-DB/15/#query-processing","title":"\u67e5\u8be2\u5904\u7406Query Processing","text":"<ul> <li> <p>Basic Steps in Query Processing</p> </li> <li> <p>Parsing and translation     translate the query into its internal form.  This is then translated into relational algebra.     Parser checks syntax, verifies relations</p> </li> <li>Optimization     Amongst all equivalent evaluation plans choose the one with lowest cost. </li> <li>Evaluation     The query-execution engine takes a query-evaluation plan, executes that plan, and returns the answers to the query.</li> <li></li> <li></li> <li> <p>\u9009\u62e9\u8fd0\u7b97\u5c3d\u91cf\u5148\u505a\uff08\u5f80\u4e0b\u63a8\uff09</p> </li> <li> <p>\u8861\u91cfQuery</p> </li> <li> <p>$ t_s $\uff1anumber of seek</p> </li> <li> <p>$ t_t $\uff1anumber of block transfer(read &amp; write)</p> </li> <li> <p>Cost for b block transfers plus S seeks</p> <p>b *  $ t_t $ + S * $ t_s $</p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p>\u5bf9select\u7684\u6761\u4ef6\u8fdb\u884c\u6392\u5e8f\uff1a\u5916\u90e8\u6392\u5e8f</p> </li> <li> <p></p> </li> <li></li> <li>\u6027\u80fd\uff1a</li> <li></li> <li>$ (b_r/M) $ \u4e3a\u5f52\u5e76\u6bb5\u6570\uff0c$ log_{M-1}(b_r/M) $ \u4e3a\u8f6e\u6b21\uff0c2br\u4e3a\u6bcf\u6b21\u7684\u4f20\u8f93\u6d88\u8017\uff0c\u6700\u540e\u4e00\u6b21+br\uff0c\u5982\u679c\u8981\u5199\u56de\u78c1\u76d8\u5c31+2br\u3002</li> <li></li> <li>\u5916\u90e8\u6392\u5e8f\uff08External Merge Sort\uff09 \u4e2d\uff0c\u7ed9\u4e00\u4e2a\u6bb5run\u5206\u914dbb \u5757\uff08\u800c\u4e0d\u662f1\u5757\uff09\u4f5c\u4e3a\u7f13\u51b2\uff0c\u53ef\u4ee5\u51cf\u5c11\u6bcf\u8f6e\u5408\u5e76\uff08merge\uff09\u7684seek\u6b21\u6570\uff0c\u4f46\u4e5f\u53ef\u80fd\u589e\u52a0merge\u7684\u8f6e\u6570\u3002\u5bf9\u4e8e\u786e\u5b9a\u7684\u5173\u7cfb\u5927\u5c0fbr \u548c\u786e\u5b9a\u7684\u5185\u5b58\u5757\u6570M\uff0c\u7406\u8bba\u4e0a\u5e94\u8be5\u6709\u4e00\u4e2a\u6700\u4f73\u7684bb\u53d6\u503c\uff0c\u4f7f\u5f97\u7b97\u6cd5\u4ee3\u4ef7\u6700\u5c0f\u3002</li> <li></li> <li> <p></p> </li> <li> <p>Join Operation</p> </li> <li> <p>Nested-loop join</p> <ul> <li>\u4e24\u91cd\u5faa\u73af</li> <li>\u4ee3\u4ef7\uff1a</li> <li>nr * bs + br   block transfers</li> <li>nr + br  seeks</li> <li>nr\u662f\u8bb0\u5f55\u6570\uff0cblock\u4e2d\u542b\u6709\u591a\u4e2a\u8bb0\u5f55</li> </ul> </li> <li> <p>Block nested-loop join</p> <ul> <li></li> <li>\u4ee3\u4ef7\uff1a</li> <li>Worst case estimate:  br * bs + br  block transfers + 2 * br  seeks     Each block in the inner relation s is read once for each block in the outer relation</li> <li>Best case: br + bs block transfers + 2 seeks.\uff08\u5185\u5b58\u8db3\u591f\u5927\uff0c\u6bcf\u4e2a\u8868\u53ea\u8981\u8fdb\u5165\u5185\u5b58\u4e00\u6b21\uff09</li> <li> <p>\u5c0f\u5173\u7cfb\u4f5c\u4e3a\u5916\u5173\u7cfb\u66f4\u597d</p> </li> <li> <p></p> </li> <li>\u5185\u5b58\u6709M\u5757\u7684\u60c5\u51b5\uff1a\u75591\u5757\u4f5c\u4e3aoutput\u7684\u7f13\u5b58\uff0c\u5916\u5173\u7cfb\u7ed9M-2\u5757\uff0c\u5185\u5173\u7cfb\u53cd\u6b63\u6bcf\u6b21\u8981seek\uff0c\u53ea\u7ed91\u5757\u3002</li> </ul> </li> <li> <p>Indexed nested-loop join</p> <ul> <li></li> <li>\u591a\u5757\u5c31\u662fbr/(M-2)</li> <li>\u5916\u5173\u7cfb\u5c0f(nr\u5c0f)\u7684\u65f6\u5019\u9009\u8fd9\u79cd\u65b9\u6cd5</li> </ul> </li> <li> <p>Merge-join</p> <ul> <li>\u4e24\u4e2a\u5173\u7cfb\u5df2\u7ecf\u6709\u5e8f</li> <li></li> </ul> </li> <li> <p>Hash-join</p> </li> <li></li> </ul>"},{"location":"class-DB/DB%E5%90%8E%E7%AF%87/","title":"DB\u540e\u7bc7","text":""},{"location":"class-DB/DB%E5%90%8E%E7%AF%87/#_1","title":"\u7269\u7406\u5b58\u50a8","text":"<ul> <li> <p>\u5206\u7c7b\uff1a</p> </li> <li> <p>\u6613\u5931\u5b58\u50a8 volatile storage </p> </li> <li>\u975e\u6613\u5931\u5b58\u50a8 non-volatile storage </li> <li></li> <li> <p>NVM\uff08non-volatile memory\uff09: \u6389\u7535\u4e0d\u4e22</p> </li> <li> <p>primary storage: Fastest media but volatile (cache, main memory).</p> </li> <li> <p>secondary storage: next level in hierarchy, non-volatile, moderately fast access time</p> <p>also called on-line storage </p> <p>E.g. flash memory, magnetic disks</p> </li> <li> <p>tertiary storage: lowest level in hierarchy, non-volatile, slow access time</p> <p>also called off-line storage </p> <p>E.g. magnetic tape, optical storage</p> </li> <li> <p>\u78c1\u76d8 magnetic disks</p> </li> <li> <p>tracks(\u78c1\u9053)  sectors(\u6247\u533a)</p> </li> <li> <p>Access Time \u8bbf\u95ee\u65f6\u95f4\uff0c\u6beb\u79d2\u7ea7</p> <ul> <li>Seek Time \u5bfb\u9053\u65f6\u95f4\uff1a\u627e\u5230\u5bf9\u5e94\u78c1\u9053</li> <li>Rotational latency \u65cb\u8f6c\u5ef6\u8fdf\uff1a\u8f6c\u5230\u5bf9\u5e94\u6247\u533a</li> </ul> </li> <li> <p>Data-transfer rate \u6570\u636e\u4f20\u8f93\u7387</p> </li> <li> <p>\u6570\u636e\u5e93\u4f20\u8f93\u4ee5block\u4e3a\u5355\u4f4d </p> </li> <li> <p>\u8bbf\u95ee\u6a21\u5f0f\uff1a</p> <ul> <li> <p>Sequential access pattern(\u987a\u5e8f\u8bbf\u95ee\u6a21\u5f0f)   Successive requests are for successive disk blocks   Disk seek required only for first block</p> </li> <li> <p>Random access pattern\uff08\u968f\u673a\u8bbf\u95ee\u6a21\u5f0f\uff09   Each access requires a seek   Transfer rates are low since a lot of time is wasted in seeks </p> </li> </ul> <p>\u5c3d\u91cf\u8f6c\u5316\u4e3a\u987a\u5e8f\u8bbf\u95ee\u6a21\u5f0f </p> <ul> <li> <p>I/O operations per second (IOPS \uff0c\u6bcf\u79d2I/O\u64cd\u4f5c\u6570)</p> </li> <li> <p>\u8861\u91cf\u78c1\u76d8\u8bbf\u95ee\u901f\u5ea6</p> </li> <li>Number of random block reads that a disk can support per second     50 to 200 IOPS on current generation magnetic disks</li> </ul> </li> <li> <p>Mean time to failure (MTTF\uff0c\u5e73\u5747\u6545\u969c\u65f6\u95f4)</p> <ul> <li>\u8861\u91cf\u78c1\u76d8\u53ef\u9760\u6027</li> <li>the average time the disk is expected to run continuously without any failure</li> </ul> </li> <li> <p>\u78c1\u76d8\u5757\u8bbf\u95ee\u7684\u4f18\u5316</p> </li> <li> <p>Buffering \u7f13\u5b58: in-memory buffer to cache disk blocks</p> </li> <li> <p>Read-ahead(Prefetch): Read extra blocks from a track in anticipation that they will be requested soon</p> </li> <li> <p>Disk-arm-scheduling algorithms re-order block requests so that disk arm movement is minimized </p> </li> <li> <p>File organization\uff1a\u5c06\u788e\u7247\u5316\u7684\u6587\u4ef6\u91cd\u65b0\u6574\u7406     Allocate blocks of a file in as contiguous a manner as possible     Allocation in units of extents(\u76d8\u533a\uff09</p> </li> <li> <p>Nonvolatile write buffers \uff08\u975e\u6613\u5931\u6027\u5199\u7f13\u5b58\uff09</p> <p>speed up disk writes by writing blocks to a non-volatile RAM buffer immediately</p> </li> <li> <p>Log disk\uff08\u65e5\u5fd7\u78c1\u76d8\uff09</p> <p>a disk devoted to writing a sequential log of block updates Used exactly like nonvolatile RAM</p> </li> <li> <p>Flash Storage</p> </li> <li> <p>NAND flash</p> <ul> <li>Page can only be written once   Must be erased to allow rewrite</li> </ul> </li> <li>SSD(Solid State Disks) <ul> <li></li> <li>SSD\u6bd4\u78c1\u76d8\u5feb\u767e\u500d\uff0c\u78c1\u76d8\u80fd\u8017\u9ad8\uff08\u673a\u68b0\u8fd0\u52a8\uff09\u66f4\u65b0\u4e3a\u5373\u5e2d\u5199\u5165</li> </ul> </li> <li>Flash storage \u4e2d\u7684\u5730\u5740\u6620\u5c04\u6f02\u79fb\uff0c\u5df2\u8fbe\u6210\u78e8\u635f\u5747\u8861\uff08wear leveling)</li> <li></li> <li> <p>\u5bf9\u4e8e\u5927\u6570\u636e\uff0c\u70ed\u6570\u636e\uff08\u5e38\u8bbf\u95ee\uff09\u653e\u5728SSD\uff0c\u51b7\u6570\u636e\u653e\u5728\u78c1\u76d8\u91cc</p> </li> <li> <p>NVM\uff0c\u53c8\u79f0Storage Class Memory</p> </li> <li> <p></p> </li> <li>Persistence\u53ef\u4ee5\u770b\u51fa\u662f\u5426\u6613\u5931</li> <li> <p>NVM\u548cSSD\u4e0e\u786c\u76d8\u4e0d\u540c\uff0c\u7528\u5b57\u8282\u5bfb\u5740</p> </li> <li> <p>\u968f\u5802\u6d4b\u8bd5\uff1a</p> </li> <li> <p>Which physical storage media is non-volatile?</p> <p>\u591a\u9009\u9898 (1 \u5206) </p> <p>A.cache</p> <p>B.main memory</p> <p>C.flash memory</p> <p>D.magnetic disk</p> <p>E.SSD(State Solid Disk)</p> <p>F.magnetic tapes</p> <p>G.optical disk</p> <p>\u6b63\u786e\u7b54\u6848: C D E F G</p> </li> <li> <p>Which physical storage medias belong to the secondary storage? </p> <p>\u591a\u9009\u9898 (1 \u5206)</p> <p>A.cache</p> <p>B.main memory </p> <p>C.flash memory</p> <p>D.SSD(Solid State Disk)</p> <p>E.magnetic disk</p> <p>F.magnetic tapes</p> <p>G.optical disk</p> <p>\u6b63\u786e\u7b54\u6848: C D E</p> </li> <li> <p>Which term represents the time that the disk controller takes to reposition the disk arm over the correct track.</p> <p>\u5355\u9009\u9898 (1 \u5206)</p> <p>A.access time</p> <p>B.seek time</p> <p>C.rotational latency</p> <p>D.data-transfer rate </p> <p>\u6b63\u786e\u7b54\u6848: B</p> </li> <li> <p>What is the right approach to  optimizing  data access of disks?</p> <p>\u591a\u9009\u9898 (1 \u5206)</p> <p>A.Buffering</p> <p>B.Read-ahead</p> <p>C.defragment the file system</p> <p>D.Non-volatile write buffers</p> <p>E.Log disk</p> <p>\u6b63\u786e\u7b54\u6848: A B C D E</p> </li> <li> <p>MTTF means    1   (\u6ce8\u610f\uff1a\u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199).</p> <p>\u586b\u7a7a\u9898 (1 \u5206) (\u8bf7\u6309\u9898\u76ee\u4e2d\u7684\u7a7a\u7f3a\u987a\u5e8f\u4f9d\u6b21\u586b\u5199\u7b54\u6848)</p> <p>\u6b63\u786e\u7b54\u6848: Mean Time To Failure</p> </li> <li> <p>IOPS  means     1   (\u6ce8\u610f\uff1a\u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199).</p> <p>\u586b\u7a7a\u9898 (1 \u5206) (\u8bf7\u6309\u9898\u76ee\u4e2d\u7684\u7a7a\u7f3a\u987a\u5e8f\u4f9d\u6b21\u586b\u5199\u7b54\u6848)</p> <p>\u6b63\u786e\u7b54\u6848: I/O Operations Per Second</p> </li> </ul>"},{"location":"class-DB/DB%E5%90%8E%E7%AF%87/#_2","title":"\u6570\u636e\u5b58\u50a8\u7ed3\u6784","text":"<ul> <li>\u6570\u636e\u5e93\u6587\u4ef6\u5b58\u5728\u78c1\u76d8\u91cc\uff0c\u6587\u4ef6\u7531\u8bb0\u5f55(record)\u7ec4\u6210\uff0crecord\u7531\u5404\u4e2a\u5b57\u6bb5(field)\u7ec4\u6210</li> <li>\u5b9a\u957f\u8bb0\u5f55(Fixed-Length Record)\uff0c\u53ef\u4ee5\u8ba1\u7b97\u6bcf\u4e2ablock\u53ef\u4ee5\u653e\u591a\u5c11\u8bb0\u5f55</li> <li>\u5b58record i\uff1a\u82e5\u957fn byte\uff0c\u4ecen*(i-1) byte\u5f00\u59cb</li> <li>\u5220\u9664\uff1a\u4e0d\u79fb\u52a8 record\uff0c\u8bb0\u4e3a\u7a7a\u8bb0\u5f55<ul> <li>\u7a7a\u8bb0\u5f55\u8bbe\u6307\u9488\u6307\u4e0b\u4e00\u4e2a\u7a7a\u7684record</li> <li>\u5934\u90e8\u52a0\u4e0aheader\u6307\u5411\u7b2c\u4e00\u6761\u7a7a\u8bb0\u5f55</li> </ul> </li> <li>\u4e0d\u5b9a\u957f\u8bb0\u5f55(Variable-Length Record)</li> <li>\u539f\u56e0\uff1a\u6709\u4e0d\u5b9a\u957f\u5b57\u7b26\u4e32\uff0c\u6709\u7a7a\u5b57\u6bb5</li> <li>\u65b9\u6cd5\uff1a\u4e0d\u5b9a\u957f\u7684\u5168\u653e\u540e\u9762\uff0c\u7528(offset,length)\u8bb0\u5f55\u4f4d\u7f6e\u548c\u957f\u5ea6</li> <li></li> <li>Null bitmap\uff1a\u6709\u51e0\u4e2a\u5c5e\u6027\u5c31\u6709\u51e0\u4f4d\uff0c0\u8868\u793a\u975e\u7a7a\uff0c1\u8868\u793a\u7a7a</li> <li></li> <li>\u63d2\u5165\uff1a\u6307\u9488+\u957f\u5ea6\u5b58\u8bb0\u5f55\u4f4d\u7f6e\uff0c\u5728free space\u4ece\u540e\u5f80\u524d\u63d2\u5165</li> <li> <p>\u5220\u9664\uff1a\u76f8\u5bf9\u5730\u5740\uff0cblock_num + index</p> </li> <li> <p>Record\u7ec4\u7ec7\u89c4\u5219\uff1a</p> </li> <li>\u5806\uff1a<ul> <li></li> <li>\u7ef4\u62a4\u7a7a\u95f2\u5757\u7684map\uff0c\u8bb0\u5f55\u7a7a\u95f2\u7a0b\u5ea6\uff1a7\u5373\u215e\u7684\u7a7a\u95f2</li> </ul> </li> <li>\u987a\u5e8f Sequential<ul> <li>\u63d2\u5165\uff1a\u63d2\u5230\u4e2d\u95f4\u4f1a\u5bfc\u81f4\u540e\u9762\u7684\u8bb0\u5f55\u5168\u4f53\u540e\u79fb\uff0c\u56e0\u6b64\u76f4\u63a5\u653e\u5728\u6700\u540e\uff0c\u901a\u8fc7\u6307\u9488\u4e32\u8054</li> <li>\u6bcf\u4e2a\u4e00\u6bb5\u65f6\u95f4\u6309\u987a\u5e8f\u91cd\u6574\uff08\u514b\u670d\u788e\u7247\u5316\uff09</li> </ul> </li> <li>B+\u6811</li> <li>\u54c8\u5e0c</li> <li>\u5b58\u653e\u65b9\u5f0f\uff1a</li> <li>\u6309\u884c\u5b58\u653e</li> <li>\u6309\u5217\u5b58\u653e\uff1acache\u547d\u4e2d\u7387\u9ad8</li> <li>\u7f13\u5b58\u7ba1\u7406 Buffer manager</li> <li>\u7f13\u5b58\u66ff\u6362\uff1a<ul> <li>LRU\u7b56\u7565\uff08Least Recently Used\uff09\u6700\u8fd1\u6700\u5c11\u7528\u5230</li> <li></li> <li>\u5728for\u5faa\u73af\u7b49\u573a\u666f\uff0cLRU\u53ef\u80fd\u662f\u4e00\u79cd\u574f\u7b56\u7565</li> </ul> </li> <li>\u82e5\u8bbf\u95ee\u7684block\u4e0d\u5728\u7f13\u5b58\uff0c\u8bfb\u51fa\u5230\u7f13\u51b2\u533a</li> <li> <p>\u8bbf\u95ee\u8bf7\u6c42\u65f6\uff0c\u9489\u5728(pin)\u7f13\u51b2\u533a\uff0c\u8bf7\u6c42\u4e3a\u8bfb\u65f6\u52a0\u5171\u4eab\u9501\uff0c\u5199\u65f6\u52a0exclusive lock</p> </li> <li> <p>\u968f\u5802\u6d4b\u8bd5\uff1a</p> </li> <li> <p>What is contained in the header of slotted page? </p> <p>\u591a\u9009\u9898 (1 \u5206)</p> <p>A.number of record entries</p> <p>B.end location of free space in the block</p> <p>C.location of each record</p> <p>D.size of each record</p> <p>E.primary key of each record</p> <p>\u6b63\u786e\u7b54\u6848: A B C D</p> </li> <li> <p>What kind file organization is suitable for applications that require sequential processing of the entire file? </p> <p>\u5355\u9009\u9898 (1 \u5206)</p> <p>A.heap file organization</p> <p>B.sequential file organization</p> <p>C.multitable clustering file organization</p> <p>D.hash file organization</p> <p>\u6b63\u786e\u7b54\u6848: B</p> </li> <li> <p>Which statement is incorrect?</p> <p>\u591a\u9009\u9898 (1 \u5206)</p> <p>A.For heap file organization, records can be placed anywhere in the file where there is free space.</p> <p>B.Database system seeks to minimize the number of block transfers between the disk and memory. </p> <p>C.If the needed block is not in the buffer, the buffer manager will replace some other block, if required, to make space for the new block.</p> <p>D.LRU is the most suitable replacement strategy for buffer manager in any cases.</p> <p>\u6b63\u786e\u7b54\u6848: D</p> </li> <li> <p>For the buffer manager, there are following assumptions:</p> <p>\u2022 There are 4 buffer pages.</p> <p>\u2022 Initially the buffer is empty occupied.</p> <p>\u2022 The data access sequence is 1,2,3,4,5,4,3,2,1,3,5</p> <p>According to the LRU replacement strategy, there are    1    times replacements occurred,  and the data item    2    is the least recently used after completing the above data access sequence.</p> <p>\u586b\u7a7a\u9898 (1 \u5206) (\u8bf7\u6309\u9898\u76ee\u4e2d\u7684\u7a7a\u7f3a\u987a\u5e8f\u4f9d\u6b21\u586b\u5199\u7b54\u6848)</p> <p>\u6b63\u786e\u7b54\u6848:</p> <p>1\uff1a3</p> <p>2\uff1a2</p> </li> </ul>"},{"location":"class-DB/DB%E5%90%8E%E7%AF%87/#indexing","title":"\u7d22\u5f15Indexing","text":"<ul> <li> <p>Form\uff1asearch key - pointer</p> </li> <li> <p>Query type</p> </li> <li> <p>Point query: records with a specified value in the attribute</p> </li> <li> <p>Range query: records with an attribute value falling in a specified range of values.</p> </li> <li> <p>Primary index \u4e3b\u7d22\u5f15</p> </li> <li> <p></p> </li> <li> <p>candidate key\u552f\u4e00\u60c5\u51b5\u4e0b\u7528\u8d77\u6765\u65b9\u4fbf</p> </li> <li> <p>Secondary Indices</p> </li> <li> <p></p> </li> <li>\u4e0d\u552f\u4e00\uff0c\u4e2d\u95f4\u7684\u6307\u9488\u6307\u5411\u591a\u4e2a\u76ee\u6807</li> <li></li> <li> <p>Dense index\uff1aIndex record appears for every search-key value in the file. </p> </li> <li> <p></p> </li> <li> <p>Sparse index\uff1acontains index records for only some search-key values.</p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p>Multilevel Index\uff08\u591a\u7ea7\u7d22\u5f15\uff09</p> </li> <li> <p>\u7d22\u5f15\u7684\u7d22\u5f15</p> </li> <li> <p></p> </li> <li> <p>B+ Tree Index</p> </li> <li> <p>\u6bcf\u4e2a\u8282\u70b9\u90fd\u548cblock\u5927\u5c0f\u4e00\u6837</p> </li> <li></li> <li>\u53f6\u5b50\u7ed3\u70b9\u5c31\u662f\u672b\u7ea7\u7d22\u5f15\uff0c\u4e4b\u95f4\u7528\u6307\u9488\u76f8\u8fde\uff0c\u4f7f\u8fde\u7eed</li> <li>\u9ad8\u5ea6\uff1a$ log_{n}(k)&lt;= height &lt;=log_{n/2}(k/2)+1 $\uff0c\u5411\u4e0a\u53d6\u6574\uff08\u6839\u8282\u70b9\u6700\u5c0f\u4e24\u53c9\uff09</li> <li>\u5927\u5c0f\uff1a\u6700\u5927\uff1a\u534a\u6ee1\uff0c\u6700\u5c0f\uff1a\u5168\u6ee1</li> <li>\u548cADS\u4e0d\u540c\uff1a\u6bcf\u4e2a\u8282\u70b9\u5bb9\u91cf\u76f8\u7b49\uff0c\u975e\u53f6\u5b50\u548c\u53f6\u5b50\u4e00\u6837\uff08ADS\u91cc\u975e\u53f6\u5b50\u6700\u591a\u9636\u6570-1\uff09<ul> <li>\u4e5f\u5c31\u662f\u8bf4\u4e2d\u95f4\u7ed3\u70b9\u7684\u5206\u53c9\u6570\u6bd4\u53f6\u5b50\u7ed3\u70b9\u503c\u6570\u591a1</li> </ul> </li> <li> <p>\u4f5c\u7528\uff1a\u53c9\u6570\u591a\uff0c\u5c42\u6570\u5c11\uff0c\u51cf\u5c11seek&amp;block transfer\u6b21\u6570</p> </li> <li> <p>\u4f30\u8ba1 height &amp; size</p> </li> <li> <p>person( pid char(18) primary key,  </p> <p>\u200b           name char(8), </p> <p>\u200b           age smallint, \u200b             address char(40)); </p> <p>Block size : 4K 1000000 persons</p> </li> <li> <p>Records per block =  4096/(18+8+2+40) =60.235=60</p> <ul> <li>record \u5927\u5c0f\u6839\u636e\u5404\u4e2a\u5c5e\u6027\u7c7b\u578b\u7b97</li> </ul> </li> <li> <p>blocks for storing 1M persons= 1000000/60 =16667</p> <ul> <li>\u8ba1\u7b97block\u6570</li> </ul> </li> <li> <p>B+ tree n(fan-out)  = (4096-4)/(18+4) +1 = 187</p> <ul> <li>B+\u6811\u4e00\u4e2a\u8282\u70b9\u5c31\u662f\u4e00\u4e2ablock\uff0c\u5b58\u653eM\u4e2a\u503c\u548cM+1\u4e2a\u6307\u9488</li> </ul> <p>\u5373\u4f7f\u662f\u53f6\u5b50\u7ed3\u70b9\uff0c\u4e5f\u591a\u51fa\u4e00\u4e2a\u6307\u5411\u4e0b\u4e00\u4e2a\u53f6\u5b50\u7684\u6307\u9488</p> <p>\u6307\u9488\u6bd4\u503c\u591a\u4e00\u4e2a\uff0c\u6240\u4ee5\u5148-4\uff0c\u540e+1</p> <ul> <li> <p>\u4e00\u4e2a\u7d22\u5f15\u9879=\u7d22\u5f15\u503c+\u6307\u9488(\u5047\u8bbe4byte)=18+4</p> </li> <li> <p>\u6700\u5927187\u53c9\uff0c\u6700\u5c11 n/2 = 94\u53c9</p> </li> <li> <p>\u80fd\u7d22\u5f15\u591a\u5c11\u503c</p> </li> <li> <p>2 levels:  min=2<code>*</code>93 = 186            max= 187'<code>*</code>186 = 34,782</p> </li> <li> <p>3 levels:  min=2<code>*</code>94<code>*</code>93 = 17484        max=187<code>*</code>187<code>*</code>186 = 6,504,234</p> </li> <li> <p>4 levels:  min=2<code>*</code>94<code>*</code>94<code>*</code>93 = 1,643,496</p> <p>\u200b              max=187<code>*</code>187<code>*</code>187<code>*</code>186 = 1,216,291,758</p> </li> <li> <p>\u6613\u5f97\u8fd9\u4e2aB+\u6811\u4e3a3\u5c42</p> </li> </ul> </li> <li> <p>size\uff1a</p> <ul> <li>\u6700\u5c0f\uff08\u5168\u6ee1\uff09100000/186+100000/186/187+1</li> <li>\u6700\u5927\uff08\u534a\u6ee1\uff09100000/93+100000/93/94+1</li> </ul> </li> <li> <p>Bottom-up B+ Tree Build</p> </li> <li> <p></p> </li> <li>fanout = 4\uff0c\u5219\u9636\u6570\u4e3a3</li> <li>\u5148\u6392\u5e8f\uff0c\u6309\u5e8f\u5206\u5757\uff0c\u7136\u540e\u5411\u4e0a\u6784\u5efa</li> <li>\u6784\u5efa\u4e0a\u56feB+\u6811 cost\uff1a1 seek + 9 block transfer</li> <li>\u63d2\u5165\u5927\u91cf\u503c/\u5408\u5e76\u6811\u53ef\u4ee5\u76f4\u63a5\u628a\u53f6\u5b50merge\u5e76\u6392\u5e8f\uff0c\u7136\u540e\u91cd\u5efa</li> <li></li> <li> <p>\u539f\u6811\u7684\u53f6\u5b50\u8bfb\u53d6\uff1a1 seek+6 block transfer</p> </li> <li> <p>Indexing in Main Memory</p> </li> <li> <p>Random access in memory </p> <ul> <li>Much cheaper than on disk/flash, but still expensive compared to cache read</li> <li>Binary search for a key value within a large B+-tree node results in many cache misses</li> <li>Data structures that make best use of cache preferable \u2013 cache conscious</li> </ul> </li> <li>Cache miss<ul> <li>HD\u4ee5block\u4e3a\u5355\u4f4d\u8bfb\u5230buffer\uff0cbuffer\u4ee564byte(\u4f8b)\u4e3a\u5355\u4f4d\u8bfb\u5230cache\uff0c\u5927\u8282\u70b9\u5c31\u4f1a\u8bfb\u4e0d\u5168\uff0c\u67e5\u627e\u7d22\u5f15\u503c\u8fc7\u7a0b\u4e2d\u8bfb\u53d6\u7684cache\u53ea\u6709\u5c0f\u90e8\u5206\u6709\u7528\uff0c\u6ca1\u627e\u5230-&gt;\u4ea7\u751fmiss</li> <li>\u964d\u4f4emiss\uff1a</li> <li>\u5c0f\u8282\u70b9\uff1aB+ trees with small nodes that fit in cache line are preferable to reduce cache misses</li> <li>\u6307\u9488\u548csearch key\u5206\u5f00\u6392</li> <li>\u5efa\u7acb\u4e00\u4e2a\u201c\u8def\u6807\u201d\uff08\u4e00\u68f5\u5c0f\u6811\uff09</li> </ul> </li> <li> <p>Key idea:  </p> <ul> <li>use large node size to optimize disk access, </li> <li>but structure data within a node using a tree with small node size, instead of using an array, to optimize cache access.</li> </ul> </li> <li> <p>LSM tree(Log Structured Merge) \u5199\u4f18\u5316\u7684\u6811\u7ed3\u6784</p> </li> <li> <p></p> </li> <li>Benefits of LSM approach     Inserts are done using only sequential I/O operations \u968f\u673a\u5199-&gt;\u987a\u5e8f\u5199     Leaves are full, avoiding space wastage     Reduced number of I/O operations per record inserted as compared to normal B+-tree (up to some size)</li> <li> <p>Drawback of LSM approach     Queries have to search multiple trees     Entire content of each level copied multiple times</p> </li> <li> <p>LSM-Stepped Merge Index</p> </li> <li> <p></p> </li> <li>\u5185\u5b58\u6ee1\u4e86\u76f4\u63a5\u5199\u5230\u4e0b\u4e00\u5c42\u6765\uff0cdisk\u4e2d\u8fd9\u4e00\u5c42\u6ee1\u4e86\u518dmerge\u5199\u5230\u4e0b\u4e00\u5c42</li> <li>\u5220\u9664\uff1a\u63d2\u5165\u5220\u9664\u6807\u8bb0</li> <li> <p>\u66f4\u65b0\uff1a\u5220\u9664+\u63d2\u5165</p> </li> <li> <p>Buffer Tree</p> </li> <li> <p></p> </li> <li> <p>\u968f\u5802\u6d4b\u8bd5</p> </li> <li> <p>1.Indexing mechanisms are used to speed up access  to desired data.</p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B.No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> <li> <p>2.Range query returns records with an attribute value falling in a specified range of values.</p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B.No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> <li> <p>3.Secondary index is an index whose search key specifies an order same as the sequential order of the file. </p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B.NO</p> <p>\u6b63\u786e\u7b54\u6848: B</p> </li> <li> <p>4.In an dense index, index record appears for every search-key value in the file. </p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B.No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> <li> <p>5.In a B+-tree , all paths from root to leaf are of the same length.</p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B.No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> <li> <p>6.If the root of a B+-tree is not a leaf, it has at least 2 children.</p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes </p> <p>B.No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> <li> <p>7.In databases, a node of a B+-tree is generally the same size as a disk block.</p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B.No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> <li> <p>8.The leaf nodes of a B+-tree file organization store records, instead of pointers to records.</p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B.No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> <li> <p>9.Benefits of LSM approach:</p> <p>\u591a\u9009\u9898 (1 \u5206)</p> <p>A.Inserts are done using only sequential I/O operations</p> <p>B.Leave nodes are full, avoiding space wastage</p> <p>C.Reduced number of I/O operations per record inserted as compared to normal B+-tree.</p> <p>D.Queries have to search multiple trees</p> <p>E.Entire content of each level copied multiple times</p> <p>\u6b63\u786e\u7b54\u6848: A B C</p> </li> <li> <p>10.Bitmap indices are useful for queries on multiple attributes,not particularly useful for single attribute queries.</p> <p>\u5224\u65ad\u9898 (1 \u5206)</p> <p>A.Yes</p> <p>B. No</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> </ul>"},{"location":"class-DB/DB%E5%90%8E%E7%AF%87/#query-processing","title":"\u67e5\u8be2\u5904\u7406Query Processing","text":"<ul> <li> <p>Basic Steps in Query Processing</p> </li> <li> <p>Parsing and translation     translate the query into its internal form.  This is then translated into relational algebra.     Parser checks syntax, verifies relations</p> </li> <li>Optimization     Amongst all equivalent evaluation plans choose the one with lowest cost. </li> <li>Evaluation     The query-execution engine takes a query-evaluation plan, executes that plan, and returns the answers to the query.</li> <li></li> <li></li> <li> <p>\u9009\u62e9\u8fd0\u7b97\u5c3d\u91cf\u5148\u505a\uff08\u5f80\u4e0b\u63a8\uff09</p> </li> <li> <p>\u8861\u91cfQuery</p> </li> <li> <p>$ t_s $\uff1anumber of seek</p> </li> <li> <p>$ t_t $\uff1anumber of block transfer(read &amp; write)</p> </li> <li> <p>Cost for b block transfers plus S seeks</p> <p>b *  $ t_t $ + S * $ t_s $</p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p>\u5bf9select\u7684\u6761\u4ef6\u8fdb\u884c\u6392\u5e8f\uff1a\u5916\u90e8\u6392\u5e8f</p> </li> <li> <p></p> </li> <li></li> <li>\u6027\u80fd\uff1a</li> <li></li> <li>$ (b_r/M) $ \u4e3a\u5f52\u5e76\u6bb5\u6570\uff0c$ log_{M-1}(b_r/M) $ \u4e3a\u8f6e\u6b21\uff0c2br\u4e3a\u6bcf\u6b21\u7684\u4f20\u8f93\u6d88\u8017\uff0c\u6700\u540e\u4e00\u6b21+br\uff0c\u5982\u679c\u8981\u5199\u56de\u78c1\u76d8\u5c31+2br\u3002</li> <li></li> <li>\u5916\u90e8\u6392\u5e8f\uff08External Merge Sort\uff09 \u4e2d\uff0c\u7ed9\u4e00\u4e2a\u6bb5run\u5206\u914dbb \u5757\uff08\u800c\u4e0d\u662f1\u5757\uff09\u4f5c\u4e3a\u7f13\u51b2\uff0c\u53ef\u4ee5\u51cf\u5c11\u6bcf\u8f6e\u5408\u5e76\uff08merge\uff09\u7684seek\u6b21\u6570\uff0c\u4f46\u4e5f\u53ef\u80fd\u589e\u52a0merge\u7684\u8f6e\u6570\u3002\u5bf9\u4e8e\u786e\u5b9a\u7684\u5173\u7cfb\u5927\u5c0fbr \u548c\u786e\u5b9a\u7684\u5185\u5b58\u5757\u6570M\uff0c\u7406\u8bba\u4e0a\u5e94\u8be5\u6709\u4e00\u4e2a\u6700\u4f73\u7684bb\u53d6\u503c\uff0c\u4f7f\u5f97\u7b97\u6cd5\u4ee3\u4ef7\u6700\u5c0f\u3002</li> <li></li> <li> <p></p> </li> <li> <p>Join Operation</p> </li> <li> <p>Nested-loop join</p> <ul> <li>\u4e24\u91cd\u5faa\u73af</li> <li>\u4ee3\u4ef7\uff1a</li> <li>nr * bs + br   block transfers</li> <li>nr + br  seeks</li> <li>nr\u662f\u8bb0\u5f55\u6570\uff0cblock\u4e2d\u542b\u6709\u591a\u4e2a\u8bb0\u5f55</li> </ul> </li> <li> <p>Block nested-loop join</p> <ul> <li></li> <li>\u4ee3\u4ef7\uff1a</li> <li>Worst case estimate:  br * bs + br  block transfers + 2 * br  seeks     Each block in the inner relation s is read once for each block in the outer relation</li> <li>Best case: br + bs block transfers + 2 seeks.\uff08\u5185\u5b58\u8db3\u591f\u5927\uff0c\u6bcf\u4e2a\u8868\u53ea\u8981\u8fdb\u5165\u5185\u5b58\u4e00\u6b21\uff09</li> <li> <p>\u5c0f\u5173\u7cfb\u4f5c\u4e3a\u5916\u5173\u7cfb\u66f4\u597d</p> </li> <li> <p></p> </li> <li>\u5185\u5b58\u6709M\u5757\u7684\u60c5\u51b5\uff1a\u75591\u5757\u4f5c\u4e3aoutput\u7684\u7f13\u5b58\uff0c\u5916\u5173\u7cfb\u7ed9M-2\u5757\uff0c\u5185\u5173\u7cfb\u53cd\u6b63\u6bcf\u6b21\u8981seek\uff0c\u53ea\u7ed91\u5757\u3002</li> </ul> </li> <li> <p>Indexed nested-loop join</p> <ul> <li></li> <li>\u591a\u5757\u5c31\u662fbr/(M-2)</li> <li>\u5916\u5173\u7cfb\u5c0f(nr\u5c0f)\u7684\u65f6\u5019\u9009\u8fd9\u79cd\u65b9\u6cd5</li> </ul> </li> <li> <p>Merge-join</p> <ul> <li>\u4e24\u4e2a\u5173\u7cfb\u5df2\u7ecf\u6709\u5e8f</li> <li></li> </ul> </li> <li> <p>Hash-join</p> </li> <li></li> </ul>"},{"location":"class-OOP/C%2B%2B%E5%B7%A5%E7%A8%8B%E8%A7%84%E8%8C%83/","title":"C++ Project Norm","text":""},{"location":"class-OOP/C%2B%2B%E5%B7%A5%E7%A8%8B%E8%A7%84%E8%8C%83/#file-design","title":"File design\uff1a","text":"<pre><code>\u251c\u2500\u2500 main.cpp\n\u251c\u2500\u2500 database.h // declaration\n\u251c\u2500\u2500 database.cpp // defination\n\u251c\u2500\u2500 tuple.h // type\n\u251c\u2500\u2500 tuple.cpp\n\u251c\u2500\u2500 writer.h // superclass\n\u251c\u2500\u2500 writer.cpp\n\u251c\u2500\u2500 adiwriter.h // subclass\n\u251c\u2500\u2500 adiwriter.cpp\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 test.bat // the batch file\n\u251c\u2500\u2500 READNE.md\n</code></pre>"},{"location":"class-OOP/C%2B%2B%E5%B7%A5%E7%A8%8B%E8%A7%84%E8%8C%83/#declaration-h","title":"Declaration (.h)","text":"<pre><code>#ifndef _DATABASE_H_\n#define _DATABASE_H_\n#include \"tuple.h\" // \u53ea\u9700\u8c03\u7528\u58f0\u660e\n#include \"adiwriter.h\" // \u53ea\u9700\u8c03\u7528\u5b9e\u9645\u7528\u5230\u7684\u5b50\u7c7b\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;set&gt;\nclass Database\n{\nprivate:\nstd::set&lt;tuple&gt; records;\n// ...\npublic:\nDatabase();\nDatabase(std::string filename);\n~Database();\n// ...\n}\n#endif\n</code></pre> <ul> <li>ifndef\uff1a\u9632\u6b62\u5d4c\u5957\u8c03\u7528\u65f6\u51fa\u73b0\u53cd\u590d\u8c03\u7528\u7684\u60c5\u51b5\u3002</li> </ul>"},{"location":"class-OOP/C%2B%2B%E5%B7%A5%E7%A8%8B%E8%A7%84%E8%8C%83/#_1","title":"\u7c7b\u578b\u5b9a\u4e49","text":"<pre><code>class tuple\n{\npublic:\nstd::string primaryKey;\nstd::map&lt;std::string, int&gt; keytypes;\nstd::map&lt;std::string, std::string&gt; values;\ntuple();\nvoid setPrimaryKey();\nfriend bool operator &lt;(const tuple &amp;a, const tuple &amp;b);\n};\n</code></pre> <ul> <li>\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff1a\u7528\u4e8e\u6392\u5e8f\u4e0e\u6bd4\u8f83\u3002</li> <li>\u7c7b\u578b\u5b9a\u4e49\u540e\u4f7f\u7528\u540cstruct\uff08\u4e0d\u5982\u8bf4\u5c31\u662f\u4e00\u4e2a\u4e1c\u897f\uff09</li> </ul>"},{"location":"class-OOP/C%2B%2B%E5%B7%A5%E7%A8%8B%E8%A7%84%E8%8C%83/#_2","title":"\u7ee7\u627f\u7c7b\u5e94\u7528","text":"<pre><code>class Writer\n{\nprotected:\n// ...\npublic:\nWriter();\nvirtual ~Writer();\n// ...\n};\n</code></pre> <pre><code>class adiWriter : public Writer\n{\n// ...\n};\n</code></pre>"},{"location":"class-OOP/C%2B%2B%E5%B7%A5%E7%A8%8B%E8%A7%84%E8%8C%83/#namespace","title":"namespace\u4f7f\u7528","text":"<ul> <li>namespace\u547d\u540d\u7a7a\u95f4\uff0c\u5305\u542b\u591a\u79cd\u5173\u952e\u5b57\uff0cstd\u4e3a\u5e38\u7528\u7684\u547d\u540d\u7a7a\u95f4\uff0ccin\uff0ccout\u5373\u4e3a\u5176\u4e2d\u7684\u5173\u952e\u5b57</li> <li>\u82e5\u53ea\u60f3\u4f7f\u7528\u5176\u4e2d\u4e00\u4e2a\uff1a<code>using std::sort;</code></li> <li>\u5728\u4e00\u4e2a\u4ee3\u7801\u5757\u5185\u5982\u679c\u6709\u548c\u547d\u540d\u7a7a\u95f4\u76f8\u540c\u7684\u53d8\u91cf\u540d\uff0c\u90a3\u4e48\u4f7f\u7528<code>using namespace</code>\u662f\u65e0\u6548\u7684\u3002</li> <li>\u81ea\u5b9a\u4e49namespace\uff1a</li> </ul> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nnamespace NM1\n{\nint zero = 0;\nint sum(int x, int y)\n{\nreturn x + y;\n}\n}\nusing namespace NM1;\nint main()\n{\ncout &lt;&lt; sum(3, 4) &lt;&lt; zero;\nreturn 0;\n}\n</code></pre> <ul> <li>\u8de8\u6587\u4ef6\u4f7f\u7528\uff1a\u540cclass\uff0c\u4e0d\u8fc7\u7528<code>using namespace</code>\u8c03\u7528</li> </ul>"},{"location":"class-OOP/C%2B%2B%E5%B7%A5%E7%A8%8B%E8%A7%84%E8%8C%83/#_3","title":"\u8bfb\u5199","text":"<ul> <li><code>argc</code> \u548c <code>argv</code>\uff1a\u547d\u4ee4\u884c\u53c2\u6570</li> <li>\u7b2c\u4e00\u4e2a\u53c2\u6570<code>argc</code>\uff0c\u7528\u4e8e\u53c2\u6570\u8ba1\u6570\uff0c\u5176\u503c\u7b49\u4e8e\u547d\u4ee4\u884c\u4e2d\u53c2\u6570\u7684\u4e2a\u6570\uff1b\u7b2c\u4e8c\u4e2a\u53c2\u6570<code>argv</code>\uff0c\u7528\u4e8e\u53c2\u6570\u5411\u91cf\uff0c\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u6570\u7ec4\u7684\u6307\u9488\u3002</li> </ul> <pre><code>\u8f93\u5165\uff1a./main.o 123 456\nargc = 3\nargv[0] = \"./main.o\"\nargv[1] = \"123\"\nargv[2] = \"456\"\n// \u76f4\u63a5\u8fd0\u884c\u7a0b\u5e8f\u5219argc = 1(\u8fd0\u884c\u7a0b\u5e8f\u800c\u4f20\u5165\u7684\u547d\u4ee4)\n</code></pre> <p>\u200b       \u4e0b\u9762\u7684\u4ee3\u7801\u7528\u4e8e\u8bfb\u5165\u8f93\u5165\u7684\u547d\u4ee4\uff08\u56e0\u4e3a\u8981\u7528batch\uff0c\u6240\u4ee5\u8fd9\u6837\u8bfb\uff09</p> <pre><code>int main(int argc, char* argv[]){\nstd::string command;\nif(argc == 1){ // \u5355\u6761\u5b8c\u6574\u547d\u4ee4\nwhile(getline(std::cin, command))\ndb.processCommand(command);\n}\nelse{ // \u547d\u4ee4\u88ab\u7a7a\u683c\u5206\u5f00\nfor(int i = 1; i &lt; argc; i++)\ncommand = command + argv[i] + ' ';\ndb.processCommand(command);\n}\ndb.exportDatabase();\nreturn 0;\n}\n</code></pre> <ul> <li> <p><code>iostream</code>\uff1a\u6807\u51c6\u8bfb\u5199\u6d41</p> </li> <li> <p><code>cin</code>\uff0c<code>cout</code>\u5206\u522b\u662f<code>istream</code>\uff0c<code>ostream</code>\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u521b\u9020\u5176\u4ed6<code>istream</code>\uff0c<code>ostream</code>\u7684\u5bf9\u8c61\u3002</p> </li> <li> <p><code>freopen(\"test.txt\",\"w\",stdout)</code>\u5c06\u6807\u51c6\u8f93\u51fa\u91cd\u5b9a\u5411\u5230<code>test.txt</code>\u3002</p> </li> <li> <p><code>fstream</code>\uff1a\u6587\u4ef6\u8bfb\u5199\u6d41</p> </li> </ul> <pre><code>std::ofstream fout;\nfout.open(\"test.txt\");\nfout &lt;&lt; \"Hello\" &lt;&lt; endl;\nfout.close();\n</code></pre>"},{"location":"class-OOP/C%2B%2B%E5%B7%A5%E7%A8%8B%E8%A7%84%E8%8C%83/#makefile","title":"Makefile\u4f7f\u7528","text":"<pre><code># Declare compiler variable\nCXX=g++\n# Declare compilation options\nCXXFLAGS=-Wall -g --std=c++11\n# Declare linking options\nLDFLAGS=\n# Declare source code files\nSRCS=main.cpp tuple.cpp writer.cpp adiwriter.cpp database.cpp\n# Convert source code files to a list of object files\nOBJS=$(SRCS:.cpp=.o)\n# Declare executable name\nTARGET=adif\n# Default target\nall: $(TARGET)\n# Dependencies\n$(TARGET): $(OBJS)\n$(CXX) $(LDFLAGS) -o $(TARGET) $(OBJS)\n# Automatically generate dependencies\n.depend: $(SRCS)\nrm -f ./.depend\n  $(CXX) $(CXXFLAGS) -MM $^ &gt; ./.depend\n# Include dependencies\n-include .depend\n# Clean\nclean:\nrm -f $(OBJS) $(TARGET) .depend\n</code></pre>"},{"location":"class-OOP/C%2B%2B%E5%B7%A5%E7%A8%8B%E8%A7%84%E8%8C%83/#batch","title":"batch\u6587\u4ef6","text":"<ul> <li> <p><code>make.bat</code></p> </li> <li> <p>\u7a97\u53e3\u4ea4\u4e92\u578b</p> </li> <li>\u6ca1\u6709Makefile\uff0c\u7528\u4e8e\u7f16\u8bd1\u4e0e\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6Main</li> </ul> <pre><code>g++ -c main.cpp -std=c++11 -o main.o\ng++ -c database.cpp -std=c++11 -o database.o\n...\ng++ -o Main main.o Maze.o Player.o\n</code></pre> <ul> <li> <p><code>test.bat</code></p> </li> <li> <p>\u6307\u4ee4\u6d4b\u8bd5\u578b</p> </li> <li>\u6709Makefile\uff0c\u7528\u4e8e\u8c03\u7528Makefile\u7f16\u8bd1\u4ee5\u53ca\u8f93\u5165\u547d\u4ee4\u6d4b\u8bd5\u3002</li> <li>echo\u4e3a\u56de\u663e\u5728\u5c4f\u5e55\u4e0a\u7684\u5185\u5bb9</li> <li>\u6ca1\u6709echo\u7684\u4e3a\u8f93\u5165\u7684\u6307\u4ee4\uff0c<code>mingw32-make</code>\u8c03\u7528Makefile</li> <li>pause\u540e\uff0c\u9700\u6309\u4efb\u610f\u952e\u624d\u4f1a\u8f93\u5165\u4e0b\u4e00\u6761\u6307\u4ee4</li> </ul> <pre><code>@echo off\necho The version of C++ is C++11\nmingw32-make\necho Compile successfully.\npause\n\necho ./adif -i a.adi\nadif -i a.adi\npause\n\necho ./adif -s BD8GK\nadif -s BD8GK\npause\n\necho ./adif -o test.adi\nadif -o test.adi\npause\n</code></pre>"},{"location":"class-OOP/OOP%E4%BD%9C%E4%B8%9A%E9%A2%98/","title":"OOP Homework","text":""},{"location":"class-OOP/OOP%E4%BD%9C%E4%B8%9A%E9%A2%98/#w1","title":"W1","text":"<p>\uff08 \uff09\u4e0d\u662f\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u4e3b\u8981\u7279\u5f81\u3002</p> <p>A.\u5c01\u88c5</p> <p>B.\u7ee7\u627f</p> <p>C.\u591a\u6001</p> <p>D.\u7ed3\u6784</p> <p>\u5173\u4e8eC++\u4e0eC \u8bed\u8a00\u5173\u7cfb\u7684\u63cf\u8ff0\u4e2d\uff0c\uff08 \uff09\u662f\u9519\u8bef\u7684\u3002</p> <p>A.C \u8bed\u8a00\u662fC++\u8bed\u8a00\u7684\u4e00\u4e2a\u5b50\u96c6</p> <p>B.C \u8bed\u8a00\u4e0eC++\u8bed\u8a00\u662f\u517c\u5bb9\u7684</p> <p>C.C++\u8bed\u8a00\u5bf9C \u8bed\u8a00\u8fdb\u884c\u4e86\u4e00\u4e9b\u6539\u8fdb</p> <p>D.C++\u8bed\u8a00\u548cC \u8bed\u8a00\u90fd\u662f\u9762\u5411\u5bf9\u8c61\u7684</p> <p>\u4e0b\u5217\u5173\u4e8ecin\u548ccout\u7684\u8bf4\u6cd5\u4e2d\uff0c\u9519\u8bef\u7684\u662f____\u3002</p> <p>A.cin\u7528\u4e8e\u8bfb\u5165\u7528\u6237\u8f93\u5165\u7684\u6570\u636e</p> <p>B.cout\u7528\u4e8e\u8f93\u51fa\u6570\u636e</p> <p>C.cin\u6bd4C\u8bed\u8a00\u4e2d\u7684scanf()\u51fd\u6570\u66f4\u6709\u4f18\u52bf\uff0c\u5b83\u53ef\u4ee5\u8bfb\u53d6\u7a7a\u683c</p> <p>D.cout\u901a\u5e38\u4e0e&lt;&lt;\u8fd0\u7b97\u7b26\u7ed3\u5408</p> <p>\u5173\u4e8edelete\u8fd0\u7b97\u7b26\u7684\u4e0b\u5217\u63cf\u8ff0\u4e2d\uff0c\uff08\uff09\u662f\u9519\u8bef\u7684\u3002</p> <p>A.\u5b83\u5fc5\u987b\u7528\u4e8enew\u8fd4\u56de\u7684\u6307\u9488\uff1b</p> <p>B.\u4f7f\u7528\u5b83\u5220\u9664\u5bf9\u8c61\u65f6\u8981\u8c03\u7528\u6790\u6784\u51fd\u6570\uff1b</p> <p>C.\u5bf9\u4e00\u4e2a\u6307\u9488\u53ef\u4ee5\u4f7f\u7528\u591a\u6b21\u8be5\u8fd0\u7b97\u7b26\uff1b</p> <p>D.\u6307\u9488\u540d\u524d\u53ea\u6709\u4e00\u5bf9\u65b9\u62ec\u53f7\u7b26\u53f7\uff0c\u4e0d\u7ba1\u6240\u5220\u9664\u6570\u7ec4\u7684\u7ef4\u6570\u3002</p> <p>\u4ee5\u4e0b\u7a0b\u5e8f\u4e2d\uff0cnew\u8bed\u53e5\u5e72\u4e86\u4ec0\u4e48\u3002</p> <p>int** num;</p> <p>num = new int* [20];</p> <p>A.\u5206\u914d\u4e86\u957f\u5ea6\u4e3a20\u7684\u6574\u6570\u6570\u7ec4\u7a7a\u95f4\uff0c\u5e76\u5c06\u9996\u5143\u7d20\u7684\u6307\u9488\u8fd4\u56de\u3002</p> <p>B.\u5206\u914d\u4e86\u4e00\u4e2a\u6574\u6570\u53d8\u91cf\u7684\u7a7a\u95f4\uff0c\u5e76\u5c06\u5176\u521d\u59cb\u5316\u4e3a20\u3002</p> <p>C.\u5206\u914d\u4e86\u957f\u5ea6\u4e3a20\u7684\u6574\u6570\u6307\u9488\u6570\u7ec4\u7a7a\u95f4\uff0c\u5e76\u5c06num[0]\u7684\u6307\u9488\u8fd4\u56de\u3002</p> <p>D.\u5b58\u5728\u9519\u8bef\uff0c\u7f16\u8bd1\u4e0d\u80fd\u901a\u8fc7\u3002</p> <p>\u4ee5\u4e0b\u7a0b\u5e8f\u5b58\u5728\u7684\u95ee\u9898\u662f\uff1a</p> <pre><code>void fun()\n{\nint *num1, *num2;\nnum1 = new int[10];\nnum2 = new int[20];\nnum1[0] = 100;\nnum2[0] = 300;\nnum1 = num2;\ndelete [] num1;\n}\n</code></pre> <p>A.num2\u4e0d\u80fd\u7ed9num1\u8d4b\u503c</p> <p>B.num2\u6700\u521d\u6307\u5411\u7684\u7a7a\u95f4\u6ca1\u6709\u91ca\u653e</p> <p>C.num1\u6700\u521d\u6307\u5411\u7684\u7a7a\u95f4\u6ca1\u6709\u91ca\u653e</p> <p>D.\u7a0b\u5e8f\u6ca1\u6709\u95ee\u9898</p> <p>\u5173\u4e8enew \u548c delete \u5173\u952e\u5b57\u529f\u80fd\u7684\u53d9\u8ff0\uff0c\u4e0d\u6b63\u786e\u7684\u662f\uff08 \uff09</p> <p>A.C++\u7a0b\u5e8f\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u53ef\u4ee5\u5206\u4e3a\u4ee3\u7801\u533a(text segment\uff09\u3001\u9759\u6001\u5b58\u50a8\u533a(Data Segment)\u3001\u6808\u533a(Stack)\u3001\u5806\u533a(Heap)\u3002new\u5173\u952e\u5b57\u7528\u4e8e\u4ece\u5806\u533a\u4e2d\u52a8\u6001\u7533\u8bf7\u521b\u5efa\u5bf9\u8c61\u6240\u9700\u7684\u5185\u5b58\u7a7a\u95f4\u3002</p> <p>B.new\u52a8\u6001\u7533\u8bf7\u5185\u5b58\u7a7a\u95f4\u6210\u529f\u540e\uff0c\u8fd4\u56de\u8be5\u5185\u5b58\u533a\u57df\u7684\u9996\u5730\u5740\uff1b\u540c\u65f6\uff0c\u4e5f\u4f1a\u81ea\u52a8\u8c03\u7528\u76f8\u5173\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002</p> <p>C.delete\u7528\u4e8e\u5220\u9664new\u5efa\u7acb\u7684\u5bf9\u8c61\uff0c\u5e76\u91ca\u653e\u6307\u9488\u6240\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u540c\u65f6\uff0c\u4e5f\u4f1a\u81ea\u52a8\u8c03\u7528\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\u3002</p> <p>D.B * ptr=new B(5)\uff1bdelete ptr; \u5047\u8bbe\u4e0a\u8ff0\u8bed\u53e5\u4e2d\uff0cnew\u7533\u8bf7\u7684\u5185\u5b58\u7a7a\u95f4\u9996\u5730\u5740\u4e3aAddr,\u5b58\u653eptr\u6307\u9488\u53d8\u91cf\u503c\u7684\u5185\u5b58\u7a7a\u95f4\u9996\u5730\u5740\u4e3a PAddr\uff0c\u5219\u6267\u884cdelete ptr \u8bed\u53e5\u540e\uff0cAddr\u3001PAddr\u6307\u5411\u7684\u5185\u5b58\u533a\u57df\u5747\u4f1a\u88ab\u7cfb\u7edf\u6536\u56de\u3002</p> <p>\u7528new\u5173\u952e\u5b57\u52a8\u6001\u7533\u8bf7\u4e00\u4e2a\u4e09\u7ef4\u6570\u7ec4\uff0c\u5219\u4e0b\u5217\u8bed\u53e5\u6b63\u786e\u7684\u662f\uff08 \uff09</p> <p>A.<code>float *fp; fp= new float[10][25][10];</code></p> <p>B.<code>float (* fp)[25][10]; fp=new float[10][25][10];</code></p> <p>C.<code>float (* fp)[10]; fp=new float[10][25][10];</code></p> <p>D.<code>float *fp [25][10]; fp= new float[10][25][10];</code></p> <p>\u4e0b\u5217\u8bed\u53e5\u4e2d\uff0c\u4e0d\u80fd\u8fde\u7eed\u8f93\u51fa3\u4e2a\u503c\u7684\u662f\u3002</p> <p>A.cout&lt;&lt;x&lt;&lt;y&lt;&lt;z;</p> <p>B.cout&lt;&lt;x,y,z;</p> <p>C.cout&lt;&lt;x; cout&lt;&lt;y; cout&lt;&lt;z;</p> <p>D.cout&lt;&lt;(x,y,z)&lt;&lt;(x,y,z)&lt;&lt;(x,y,z);</p> <p>\u5728C++\u4e2d\uff0ccin\u662f\uff08\uff09\u3002</p> <p>A.\u9884\u5b9a\u4e49\u7684\u7c7b</p> <p>B.\u9884\u5b9a\u4e49\u7684\u51fd\u6570</p> <p>C.\u4e00\u4e2a\u6807\u51c6\u7684\u8bed\u53e5</p> <p>D.\u9884\u5b9a\u4e49\u7684\u5bf9\u8c61</p>"},{"location":"class-OOP/OOP%E4%BD%9C%E4%B8%9A%E9%A2%98/#w2","title":"W2","text":"<p>\u5047\u5b9aAA\u4e3a\u4e00\u4e2a\u7c7b\uff0ca()\u4e3a\u8be5\u7c7b\u516c\u6709\u7684\u51fd\u6570\u6210\u5458\uff0cx\u4e3a\u8be5\u7c7b\u7684\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5219\u8bbf\u95eex\u5bf9\u8c61\u4e2d\u51fd\u6570\u6210\u5458a()\u7684\u683c\u5f0f\u4e3a\uff08\uff09</p> <p>A.x.a</p> <p>B.x.a()</p> <p>C.x-&gt;a()</p> <p>D.(*x).a()</p> <p>\u4e0b\u5217\u5173\u4e8e\u7c7b\u5b9a\u4e49\u7684\u8bf4\u6cd5\u4e2d\uff0c\u6b63\u786e\u7684\u662f</p> <p>A.\u7c7b\u5b9a\u4e49\u4e2d\u5305\u62ec\u6570\u636e\u6210\u5458\u548c\u51fd\u6570\u6210\u5458\u7684\u58f0\u660e</p> <p>B.\u7c7b\u6210\u5458\u7684\u7f3a\u7701\u8bbf\u95ee\u6743\u9650\u662f\u4fdd\u62a4\u7684</p> <p>C.\u6570\u636e\u6210\u5458\u5fc5\u987b\u88ab\u58f0\u660e\u4e3a\u79c1\u6709\u7684</p> <p>D.\u6210\u5458\u51fd\u6570\u53ea\u80fd\u5728\u7c7b\u4f53\u5916\u8fdb\u884c\u5b9a\u4e49</p> <p>\u4e0b\u5217\u5173\u4e8e\u7c7b\u548c\u5bf9\u8c61\u7684\u53d9\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f</p> <p>A.\u4e00\u4e2a\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u5bf9\u8c61</p> <p>B.\u5bf9\u8c61\u662f\u7c7b\u7684\u5177\u4f53\u5b9e\u4f8b</p> <p>C.\u7c7b\u662f\u5bf9\u67d0\u4e00\u7c7b\u5bf9\u8c61\u7684\u62bd\u8c61</p> <p>D.\u7c7b\u548c\u5bf9\u8c61\u7684\u5173\u7cfb\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\u4e0e\u53d8\u91cf\u7684\u5173\u7cfb</p> <p>Resolver <code>::</code> is used to:</p> <p>A.Define a member function outside class declaration</p> <p>B.Access a member of a namespace</p> <p>C.Access a static member of a class</p> <p>D.All of the others</p> <p>\u7c7b\u7684\u5b9e\u4f8b\u5316\u662f\u6307\uff08 \uff09\u3002</p> <p>A.\u5b9a\u4e49\u7c7b</p> <p>B.\u5b9a\u4e49\u5bf9\u8c61</p> <p>C.\u8c03\u7528\u7c7b\u7684\u6210\u5458\u51fd\u6570</p> <p>D.\u8bbf\u95ee\u5bf9\u8c61\u7684\u6570\u636e\u6210\u5458</p> <p>C\uff0b\uff0b\u51fd\u6570\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u53ef\u4ee5\u5206\u5f00\u3002\u51fd\u6570\u58f0\u660e\u4e0d\u9700\u8981( )\u3002</p> <p>A.\u8fd4\u56de\u7c7b\u578b</p> <p>B.\u51fd\u6570\u540d</p> <p>C.\u53c2\u6570\u8868</p> <p>D.\u51fd\u6570\u4f53</p> <p>\u9996\u5148\u9700\u8981\u5728\u95ee\u9898\u57df\u4e2d\u8bc6\u522b\u51fa\u82e5\u5e72\u4e2a\uff08 \uff09</p> <p>A.\u51fd\u6570</p> <p>B.\u7c7b</p> <p>C.\u6587\u4ef6</p> <p>D.\u8fc7\u7a0b</p>"},{"location":"class-OOP/OOP%E4%BD%9C%E4%B8%9A%E9%A2%98/#w3","title":"W3","text":""},{"location":"class-OOP/OOP%E4%BD%9C%E4%B8%9A%E9%A2%98/#w4","title":"W4","text":"<p>\u82e5\u6709\u4e0b\u9762\u7684\u8bed\u53e5\uff1a</p> <pre><code>vector&lt;int&gt; v;\nfor (int i = 0; i &lt; 4; i++)\nv.push_back(i + 1);\ncout &lt;&lt; v.size() &lt;&lt; endl;\n</code></pre> <p>\u5219\u6267\u884c\u540e\u7a0b\u5e8f\u7684\u8f93\u51fa\u7ed3\u679c\u662f</p> <p>A.1</p> <p>B.2</p> <p>C.3</p> <p>D.4</p> <p>\u8bbe\u6709\u5b9a\u4e49 <code>vector&lt;string&gt; v(10);</code> \u6267\u884c\u4e0b\u5217\u54ea\u6761\u8bed\u53e5\u65f6\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570?</p> <p>A.</p> <pre><code>v[0] += \"abc\";\n</code></pre> <p>B.</p> <pre><code>v[0] = \"2018\";\n</code></pre> <p>C.</p> <pre><code>v.push_back(\"ZUCC\");\n</code></pre> <p>D.</p> <pre><code>cout &lt;&lt; (v[1] == \"def\");\n</code></pre> <p>\u8bbe\u6709\u5982\u4e0b\u4ee3\u7801\u6bb5:</p> <pre><code>std::map&lt;char *, int&gt; m;\nconst int MAX_SIZE = 100;\nint main() {\n    char str[MAX_SIZE];\n    for (int i = 0; i &lt; 10; i++) {\n        std::cin &gt;&gt; str;\n        m[str] = i;\n    }\n    std::cout &lt;&lt; m.size() &lt;&lt; std::endl;\n}\n</code></pre> <p>\u8bfb\u516510\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u8f93\u51fa\u7684 <code>m.size()</code> \u4e3a</p> <p>A.0</p> <p>B.1</p> <p>C.10</p> <p>\u4e0b\u5217\u5173\u4e8eSTL\u7684\u63cf\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f\u3002</p> <p>A.STL\u7684\u5185\u5bb9\u4ece\u5e7f\u4e49\u4e0a\u8bb2\u5206\u4e3a\u5bb9\u5668\u3001\u8fed\u4ee3\u5668\u3001\u7b97\u6cd5\u4e09\u4e2a\u4e3b\u8981\u90e8\u5206</p> <p>B.STL\u7684\u4e00\u4e2a\u57fa\u672c\u7406\u5ff5\u5c31\u662f\u5c06\u6570\u636e\u548c\u64cd\u4f5c\u5206\u79bb</p> <p>C.STL\u4e2d\u7684\u6240\u6709\u7ec4\u4ef6\u90fd\u7531\u6a21\u677f\u6784\u6210\uff0c\u5176\u5143\u7d20\u53ef\u4ee5\u662f\u4efb\u610f\u7c7b\u578b</p> <p>D.STL\u7684\u5bb9\u5668\u3001\u8fed\u4ee3\u5668\u3001\u7b97\u6cd5\u662f\u4e09\u4e2a\u5b8c\u5168\u72ec\u7acb\u7684\u90e8\u5206\uff0c\u5f7c\u6b64\u4e5f\u65e0\u4efb\u4f55\u8054\u7cfb</p> <p>\u4e0b\u5217\u521b\u5efavector\u5bb9\u5668\u5bf9\u8c61\u7684\u65b9\u6cd5\u4e2d\uff0c\u9519\u8bef\u7684\u662f\u3002</p> <p>A.</p> <pre><code>vector&lt;int&gt; v(10);\n</code></pre> <p>B.</p> <pre><code>vector&lt;int&gt; v(10, 1);\n</code></pre> <p>C.</p> <pre><code>vector&lt;int&gt; v{10, 1};\n</code></pre> <p>D.</p> <pre><code>vector&lt;int&gt; v = (10, 1);\n</code></pre> <p>\u4e0b\u5217\u9009\u9879\u4e2d\uff0c\u54ea\u4e00\u9879\u4e0d\u662f\u8fed\u4ee3\u5668\u3002</p> <p>A.\u8f93\u5165\u8fed\u4ee3\u5668</p> <p>B.\u524d\u5411\u8fed\u4ee3\u5668</p> <p>C.\u53cc\u5411\u8fed\u4ee3\u5668</p> <p>D.\u5220\u9664\u8fed\u4ee3\u5668</p> <p>\u8bbevoid f1(int * m\uff0clong &amp; n)\uff1bint a\uff1blong b\uff1b\u5219\u4ee5\u4e0b\u8c03\u7528\u5408\u6cd5\u7684\u662f\uff08\uff09\u3002</p> <p>A.f1(a\uff0cb)\uff1b</p> <p>B.f1(&amp;a\uff0cb)\uff1b</p> <p>C.f1(a\uff0c&amp;b)\uff1b</p> <p>D.f1(&amp;a\uff0c&amp;b)\uff1b</p> <p>\u4e0b\u9762\u7a0b\u5e8f\u7247\u6bb5,\u54ea\u4e00\u4e2a\u662f\u6b63\u786e\u7684?</p> <p>A.int n=4; int &amp;r=n*3;</p> <p>B.int m=5; const int &amp;r=m; r=6;</p> <p>C.int n=8; const int &amp;p=n; int &amp;q=p ;</p> <p>D.int n=8; int &amp;p=n; const int q=p ;</p> <p>\u4e0b\u9762\u7a0b\u5e8f\u6bb5 int a=1,b=2; int &amp;r=a; r=b; r=7; cout&lt;&lt;a&lt;&lt;endl; \u7684\u8f93\u51fa\u7ed3\u679c\u662f?</p> <p>A.1</p> <p>B.2</p> <p>C.7</p> <p>D.\u65e0\u6cd5\u786e\u5b9a</p> <p>\u5df2\u77e5\uff1afloat b = 34.5\uff1b \uff0c\u5219\u4e0b\u5217\u8868\u793a\u5f15\u7528\u7684\u65b9\u6cd5\u4e2d\uff0c\u6b63\u786e\u7684\u662f\uff08 \uff09\u3002</p> <p>A.float &amp;x = b\uff1b</p> <p>B.float &amp;y = 34.5\uff1b</p> <p>C.float &amp;z\uff1b</p> <p>D.int &amp;t = &amp;b;</p>"},{"location":"class-OOP/OOP%E4%BD%9C%E4%B8%9A%E9%A2%98/#w5","title":"W5","text":"<p>\u5728C++\u8bed\u8a00\u4e2d\u5f15\u5165\u5185\u8054\u51fd\u6570\uff08inline function\uff09\u7684\u4e3b\u8981\u76ee\u7684\u662f\u964d\u4f4e\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u5373\u7f29\u77ed\u76ee\u6807\u4ee3\u7801\u957f\u5ea6\u3002</p> <p>T</p> <p>F</p> <p>\u4e3b\u7a0b\u5e8f\u8c03\u7528\u5185\u8054\u51fd\u6570\uff08inline\uff09\u65f6\uff0c\u4e0d\u53d1\u751f\u63a7\u5236\u8f6c\u79fb\uff0c\u65e0\u9700\u4fdd\u5b58\u548c\u6062\u590d\u73af\u5883\u53d8\u91cf\u7b49\uff0c\u56e0\u6b64\uff0c\u8282\u7701\u4e86\u7cfb\u7edf\u5f00\u9500\u3002\u5185\u8054\u51fd\u6570\u7684\u58f0\u660e\u4ee5\u53ca\u6700\u7ec8\u7684\u751f\u6548\uff0c\u662f\u7531\u7a0b\u5e8f\u5458\u51b3\u5b9a\u7684\u3002</p> <p>T</p> <p>F</p> <p>int Sum (int a,int b=5,int c); \u8fd9\u4e2a\u51fd\u6570\u539f\u578b\u7684\u58f0\u660e\u6ca1\u6709\u4ec0\u4e48\u4e0d\u5408\u9002\u7684\u5730\u65b9\u3002</p> <p>T</p> <p>F</p> <p>\u4e24\u4e2a\u4ee5\u4e0a\u7684\u51fd\u6570\uff0c\u5177\u6709\u76f8\u540c\u7684\u51fd\u6570\u540d\uff0c\u4e14\u5f62\u53c2\u7684\u4e2a\u6570\u6216\u5f62\u53c2\u7684\u7c7b\u578b\u4e0d\u540c\uff0c\u6216\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u540c\uff0c\u5219\u79f0\u4e4b\u4e3a\u51fd\u6570\u7684\u91cd\u8f7d\u3002</p> <p>T</p> <p>F</p> <p>\u5e26\u6709\u9ed8\u8ba4\u503c\u7684\u51fd\u6570F\u7684\u51fd\u6570\u539f\u578b\u4e3aF(int x=5, int x=9, int y, float m=10.0)\uff0c\u5219\u8be5\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u4f1a\u62a5\u9519\u3002</p> <p>T</p> <p>F</p> <p>\u5982\u679c\u9ed8\u8ba4\u53c2\u6570\u7684\u51fd\u6570\u58f0\u660e\u4e3a\u201c void fun(int a,int b=1,char c='a',float d=3.2);\u201d\uff0c \u5219\u4e0b\u9762\u8c03\u7528\u5199\u6cd5\u6b63\u786e\u7684\u662f\uff08 \uff09\u3002</p> <p>A.fun();</p> <p>B.fun(2,3);</p> <p>C.fun(2, ,'c',3.14)</p> <p>D.fun(int a=1);</p> <p>\u91cd\u8f7d\u51fd\u6570\u5728\u8c03\u7528\u65f6\u9009\u62e9\u7684\u4f9d\u636e\u4e2d\uff0c\u9519\u8bef\u7684\u662f\uff08\uff09\u3002</p> <p>A.\u51fd\u6570\u7684\u53c2\u6570</p> <p>B.\u53c2\u6570\u7684\u7c7b\u578b</p> <p>C.\u51fd\u6570\u7684\u540d\u5b57</p> <p>D.\u51fd\u6570\u7684\u7c7b\u578b</p> <p>\u5728\uff08 \uff09\u60c5\u51b5\u4e0b\u9002\u5b9c\u91c7\u7528inline\u5b9a\u4e49\u5185\u8054\u51fd\u6570\u3002</p> <p>A.\u51fd\u6570\u4f53\u542b\u6709\u5faa\u73af\u8bed\u53e5</p> <p>B.\u51fd\u6570\u4f53\u542b\u6709\u9012\u5f52\u8bed\u53e5</p> <p>C.\u51fd\u6570\u4ee3\u7801\u5c11\u3001\u9891\u7e41\u8c03\u7528</p> <p>D.\u51fd\u6570\u4ee3\u7801\u591a\u3001\u4e0d\u5e38\u8c03\u7528</p> <p>\u5728C++\u4e2d\uff0c\u5173\u4e8e\u4e0b\u5217\u8bbe\u7f6e\u7f3a\u7701\u53c2\u6570\u503c\u7684\u63cf\u8ff0\u4e2d\uff0c\uff08\uff09\u662f\u6b63\u786e\u7684\u3002</p> <p>A.\u4e0d\u5141\u8bb8\u8bbe\u7f6e\u7f3a\u7701\u53c2\u6570\u503c\uff1b</p> <p>B.\u5728\u6307\u5b9a\u4e86\u7f3a\u7701\u503c\u7684\u53c2\u6570\u53f3\u8fb9\uff0c\u4e0d\u80fd\u51fa\u73b0\u6ca1\u6709\u6307\u5b9a\u7f3a\u7701\u503c\u7684\u53c2\u6570\uff1b</p> <p>C.\u53ea\u80fd\u5728\u51fd\u6570\u7684\u5b9a\u4e49\u6027\u58f0\u660e\u4e2d\u6307\u5b9a\u53c2\u6570\u7684\u7f3a\u7701\u503c\uff1b</p> <p>D.\u8bbe\u7f6e\u7f3a\u7701\u53c2\u6570\u503c\u65f6\uff0c\u5fc5\u987b\u5168\u90e8\u90fd\u8bbe\u7f6e\uff1b</p> <p>\u4e0b\u9762\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09\u3002</p> <p>A.\u5185\u8054\u51fd\u6570\u5728\u8fd0\u884c\u65f6\u662f\u5c06\u8be5\u51fd\u6570\u7684\u76ee\u6807\u4ee3\u7801\u63d2\u5165\u6bcf\u4e2a\u8c03\u7528\u8be5\u51fd\u6570\u7684\u5730\u65b9</p> <p>B.\u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5c06\u8be5\u51fd\u6570\u7684\u76ee\u6807\u4ee3\u7801\u63d2\u5165\u6bcf\u4e2a\u8c03\u7528\u8be5\u51fd\u6570\u7684\u5730\u65b9</p> <p>C.\u7c7b\u7684\u5185\u8054\u51fd\u6570\u5fc5\u987b\u5728\u7c7b\u4f53\u5185\u5b9a\u4e49</p> <p>D.\u7c7b\u7684\u5185\u8054\u51fd\u6570\u5fc5\u987b\u5728\u7c7b\u4f53\u5916\u901a\u8fc7\u52a0\u5173\u952e\u5b57inline\u5b9a\u4e49</p> <p>\u5bf9\u5b9a\u4e49\u91cd\u8f7d\u51fd\u6570\u7684\u4e0b\u5217\u8981\u6c42\u4e2d\uff0c\uff08 \uff09\u662f\u9519\u8bef\u7684\u3002</p> <p>A.\u8981\u6c42\u53c2\u6570\u7684\u4e2a\u6570\u4e0d\u540c</p> <p>B.\u8981\u6c42\u53c2\u6570\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u7c7b\u578b\u4e0d\u540c</p> <p>C.\u8981\u6c42\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e0d\u540c</p> <p>D.\u8981\u6c42\u53c2\u6570\u4e2a\u6570\u76f8\u540c\u65f6\uff0c\u53c2\u6570\u7c7b\u578b\u4e0d\u540c</p> <p>\u5f53\u4e00\u4e2a\u51fd\u6570\u529f\u80fd\u4e0d\u592a\u590d\u6742\uff0c\u4f46\u8981\u6c42\u88ab\u9891\u7e41\u8c03\u7528\u65f6\uff0c\u9009\u7528____\u3002</p> <p>A.\u91cd\u8f7d\u51fd\u6570</p> <p>B.\u5185\u8054\u51fd\u6570</p> <p>C.\u9012\u5f52\u51fd\u6570</p> <p>D.\u5d4c\u5957\u51fd\u6570</p> <p>\u5982\u6709\u51fd\u6570\u5b9a\u4e49\uff1avoid func(int x = 0, int y = 0){ \u2026. }\uff0c\u5219\u4e0b\u5217\u51fd\u6570\u8c03\u7528\u4e2d\u4f1a\u51fa\u73b0\u95ee\u9898\u7684\u662f____\u3002</p> <p>A.func(1,2, 3);</p> <p>B.func(1,2);</p> <p>C.func(1);</p> <p>D.func();</p> <p>\u4ee5\u4e0b\u6709\u5173\u51fd\u6570\u7684\u53d9\u8ff0\u4e2d\u6b63\u786e\u7684\u662f\uff08 \uff09\u3002</p> <p>A.\u51fd\u6570\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2a\u503c</p> <p>B.\u51fd\u6570\u4f53\u4e2d\u5fc5\u987b\u6709return\u8bed\u53e5</p> <p>C.\u4e24\u4e2a\u540c\u540d\u51fd\u6570\uff0c\u53c2\u6570\u8868\u76f8\u540c\u800c\u8fd4\u56de\u503c\u4e0d\u540c\u4e0d\u7b97\u91cd\u8f7d</p> <p>D.\u51fd\u6570\u6267\u884c\u4e2d\u5f62\u53c2\u7684\u6539\u53d8\u4f1a\u6539\u53d8\u5b9e\u53c2</p> <p>\u4ee5\u4e0b\u9009\u9879\u4e2d\uff0c\u662f\u6b63\u786e\u7684\u51fd\u6570\u9ed8\u8ba4\u5f62\u53c2\u8bbe\u7f6e\u7684\u662f\u3002</p> <p>A.int fun(int a,int b,int c);</p> <p>B.int fun(int a,int b,int c=1);</p> <p>C.int fun(int a,int b=1,int c);</p> <p>D.int fun(int a=1,int b,int c);</p>"},{"location":"class-OOP/OOP%E4%BD%9C%E4%B8%9A%E9%A2%98/#w6","title":"W6","text":"<p>Order of initialization in the initial list is the order of their declaration in the list.</p> <p>T</p> <p>F</p> <p>\u7c7b\u7684\u7ec4\u5408\u5173\u7cfb\u53ef\u4ee5\u7528\u201cHas-A\u201d\u63cf\u8ff0\uff1b\u7c7b\u95f4\u7684\u7ee7\u627f\u4e0e\u6d3e\u751f\u5173\u7cfb\u53ef\u4ee5\u7528\u201cIs-A\u201d\u63cf\u8ff0\u3002</p> <p>T</p> <p>F</p> <p>\u4e00\u4e2a\u7c7b\u7684\u53cb\u5143\u51fd\u6570\u662f\u8fd9\u4e2a\u7c7b\u7684\u6210\u5458\u3002</p> <p>T</p> <p>F</p> <p>\u5728C++\u8bed\u8a00\u4e2d\u5f15\u5165\u5185\u8054\u51fd\u6570\uff08inline function\uff09\u7684\u4e3b\u8981\u76ee\u7684\u662f\u964d\u4f4e\u7a7a\u95f4\u590d\u6742\u5ea6\uff0c\u5373\u7f29\u77ed\u76ee\u6807\u4ee3\u7801\u957f\u5ea6\u3002</p> <p>T</p> <p>F</p> <p>\u4e3b\u7a0b\u5e8f\u8c03\u7528\u5185\u8054\u51fd\u6570\uff08inline\uff09\u65f6\uff0c\u4e0d\u53d1\u751f\u63a7\u5236\u8f6c\u79fb\uff0c\u65e0\u9700\u4fdd\u5b58\u548c\u6062\u590d\u73af\u5883\u53d8\u91cf\u7b49\uff0c\u56e0\u6b64\uff0c\u8282\u7701\u4e86\u7cfb\u7edf\u5f00\u9500\u3002\u5185\u8054\u51fd\u6570\u7684\u58f0\u660e\u4ee5\u53ca\u6700\u7ec8\u7684\u751f\u6548\uff0c\u662f\u7531\u7a0b\u5e8f\u5458\u51b3\u5b9a\u7684\u3002</p> <p>T</p> <p>F</p> <p>\u4e00\u4e2a\u51fd\u6570\u529f\u80fd\u4e0d\u592a\u590d\u6742\uff0c\u4f46\u8981\u6c42\u88ab\u9891\u7e41\u8c03\u7528\uff0c\u53ef\u9009\u7528\uff08 \uff09\u3002</p> <p>A.\u5185\u8054\u51fd\u6570</p> <p>B.\u91cd\u8f7d\u51fd\u6570</p> <p>C.\u9012\u5f52\u51fd\u6570</p> <p>D.\u5d4c\u5957\u51fd\u6570</p> <p>\u5728\uff08 \uff09\u60c5\u51b5\u4e0b\u9002\u5b9c\u91c7\u7528inline\u5b9a\u4e49\u5185\u8054\u51fd\u6570\u3002</p> <p>A.\u51fd\u6570\u4f53\u542b\u6709\u5faa\u73af\u8bed\u53e5</p> <p>B.\u51fd\u6570\u4f53\u542b\u6709\u9012\u5f52\u8bed\u53e5</p> <p>C.\u51fd\u6570\u4ee3\u7801\u5c11\u3001\u9891\u7e41\u8c03\u7528</p> <p>D.\u51fd\u6570\u4ee3\u7801\u591a\u3001\u4e0d\u5e38\u8c03\u7528</p> <p>\u4e0b\u9762\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08\uff09\u3002</p> <p>A.\u5185\u8054\u51fd\u6570\u5728\u8fd0\u884c\u65f6\u662f\u5c06\u8be5\u51fd\u6570\u7684\u76ee\u6807\u4ee3\u7801\u63d2\u5165\u6bcf\u4e2a\u8c03\u7528\u8be5\u51fd\u6570\u7684\u5730\u65b9</p> <p>B.\u5185\u8054\u51fd\u6570\u5728\u7f16\u8bd1\u65f6\u662f\u5c06\u8be5\u51fd\u6570\u7684\u76ee\u6807\u4ee3\u7801\u63d2\u5165\u6bcf\u4e2a\u8c03\u7528\u8be5\u51fd\u6570\u7684\u5730\u65b9</p> <p>C.\u7c7b\u7684\u5185\u8054\u51fd\u6570\u5fc5\u987b\u5728\u7c7b\u4f53\u5185\u5b9a\u4e49</p> <p>D.\u7c7b\u7684\u5185\u8054\u51fd\u6570\u5fc5\u987b\u5728\u7c7b\u4f53\u5916\u901a\u8fc7\u52a0\u5173\u952e\u5b57inline\u5b9a\u4e49</p> <p>\u5982\u679c\u9ed8\u8ba4\u53c2\u6570\u7684\u51fd\u6570\u58f0\u660e\u4e3a\u201c void fun(int a,int b=1,char c='a',float d=3.2);\u201d\uff0c \u5219\u4e0b\u9762\u8c03\u7528\u5199\u6cd5\u6b63\u786e\u7684\u662f\uff08 \uff09\u3002</p> <p>A.fun();</p> <p>B.fun(2,3);</p> <p>C.fun(2, ,'c',3.14)</p> <p>D.fun(int a=1);</p> <p>\u5728C++\u4e2d\uff0c\u5173\u4e8e\u4e0b\u5217\u8bbe\u7f6e\u7f3a\u7701\u53c2\u6570\u503c\u7684\u63cf\u8ff0\u4e2d\uff0c\uff08\uff09\u662f\u6b63\u786e\u7684\u3002</p> <p>A.\u4e0d\u5141\u8bb8\u8bbe\u7f6e\u7f3a\u7701\u53c2\u6570\u503c\uff1b</p> <p>B.\u5728\u6307\u5b9a\u4e86\u7f3a\u7701\u503c\u7684\u53c2\u6570\u53f3\u8fb9\uff0c\u4e0d\u80fd\u51fa\u73b0\u6ca1\u6709\u6307\u5b9a\u7f3a\u7701\u503c\u7684\u53c2\u6570\uff1b</p> <p>C.\u53ea\u80fd\u5728\u51fd\u6570\u7684\u5b9a\u4e49\u6027\u58f0\u660e\u4e2d\u6307\u5b9a\u53c2\u6570\u7684\u7f3a\u7701\u503c\uff1b</p> <p>D.\u8bbe\u7f6e\u7f3a\u7701\u53c2\u6570\u503c\u65f6\uff0c\u5fc5\u987b\u5168\u90e8\u90fd\u8bbe\u7f6e\uff1b</p> <p>\u51b3\u5b9aC++\u8bed\u8a00\u4e2d\u51fd\u6570\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u662f\uff08\uff09</p> <p>A.return\u8bed\u53e5\u4e2d\u7684\u8868\u8fbe\u5f0f\u7c7b\u578b</p> <p>B.\u8c03\u7528\u8be5\u51fd\u6570\u65f6\u7cfb\u7edf\u968f\u673a\u4ea7\u751f\u7684\u7c7b\u578b</p> <p>C.\u8c03\u7528\u8be5\u51fd\u6570\u65f6\u7684\u4e3b\u8c03\u7528\u51fd\u6570\u7c7b\u578b</p> <p>D.\u5728\u5b9a\u4e49\u8be5\u51fd\u6570\u65f6\u6240\u6307\u5b9a\u7684\u6570\u636e\u7c7b\u578b</p> <p>\u5982\u6709\u51fd\u6570\u5b9a\u4e49\uff1avoid func(int x = 0, int y = 0){ \u2026. }\uff0c\u5219\u4e0b\u5217\u51fd\u6570\u8c03\u7528\u4e2d\u4f1a\u51fa\u73b0\u95ee\u9898\u7684\u662f____\u3002</p> <p>A.func(1,2, 3);</p> <p>B.func(1,2);</p> <p>C.func(1);</p> <p>D.func();</p> <p>\u4ee5\u4e0b\u9009\u9879\u4e2d\uff0c\u662f\u6b63\u786e\u7684\u51fd\u6570\u9ed8\u8ba4\u5f62\u53c2\u8bbe\u7f6e\u7684\u662f\u3002</p> <p>A.int fun(int a,int b,int c);</p> <p>B.int fun(int a,int b,int c=1);</p> <p>C.int fun(int a,int b=1,int c);</p> <p>D.int fun(int a=1,int b,int c);</p> <p>\u5bf9\u4e8e\u4ee5\u4e0b\u5173\u4e8e\u53cb\u5143\u7684\u8bf4\u6cd5</p> <p>A.\u5982\u679c\u51fd\u6570fun\u88ab\u58f0\u660e\u4e3a\u7c7bA\u7684\u53cb\u5143\u51fd\u6570\uff0c\u5219\u8be5\u51fd\u6570\u6210\u4e3aA\u7684\u6210\u5458\u51fd\u6570</p> <p>B.\u5982\u679c\u51fd\u6570fun\u88ab\u58f0\u660e\u4e3a\u7c7bA\u7684\u53cb\u5143\u51fd\u6570\uff0c\u5219\u8be5\u51fd\u6570\u80fd\u8bbf\u95eeA\u7684\u4fdd\u62a4\u6210\u5458\uff0c\u4f46\u4e0d\u80fd\u8bbf\u95ee\u79c1\u6709\u6210\u5458</p> <p>C.\u5982\u679c\u51fd\u6570fun\u88ab\u58f0\u660e\u4e3a\u7c7bA\u7684\u53cb\u5143\u51fd\u6570\uff0c\u5219fun\u7684\u5f62\u53c2\u7c7b\u578b\u4e0d\u80fd\u662fA\u3002</p> <p>D.\u4ee5\u4e0a\u7b54\u6848\u90fd\u4e0d\u5bf9</p> <p>\u5bf9\u4e8e\u7c7b\u4e4b\u95f4\u7684\u53cb\u5143\u5173\u7cfb\uff1a</p> <p>A.\u5982\u679c\u7c7bA\u662f\u7c7bB\u7684\u53cb\u5143\uff0c\u5219B\u7684\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8bbf\u95eeA\u7684\u79c1\u6709\u6210\u5458</p> <p>B.\u5982\u679c\u7c7bA\u662f\u7c7bB\u7684\u53cb\u5143\uff0c\u5219B\u4e5f\u662fA\u7684\u53cb\u5143\u3002</p> <p>C.\u5982\u679c\u7c7bA\u662f\u7c7bB\u7684\u53cb\u5143\uff0c\u5e76\u4e14\u7c7bB\u662f\u7c7bC\u7684\u53cb\u5143\uff0c\u5219\u7c7bA\u4e5f\u662f\u7c7bC\u7684\u53cb\u5143\u3002</p> <p>D.\u4ee5\u4e0a\u7b54\u6848\u90fd\u4e0d\u5bf9\u3002</p> <p>\u53cb\u5143\u7684\u4f5c\u7528\u662f</p> <p>A.\u63d0\u9ad8\u7a0b\u5e8f\u7684\u8fd0\u7528\u6548\u7387</p> <p>B.\u52a0\u5f3a\u7c7b\u7684\u5c01\u88c5\u6027</p> <p>C.\u5b9e\u73b0\u6570\u636e\u7684\u9690\u85cf\u6027</p> <p>D.\u589e\u52a0\u6210\u5458\u51fd\u6570\u7684\u79cd\u7c7b</p> <p>\u4e0b\u9762\u5173\u4e8e\u53cb\u5143\u7684\u63cf\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f\uff1a</p> <p>A.\u53cb\u5143\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u8be5\u7c7b\u7684\u79c1\u6709\u6570\u636e\u6210\u5458</p> <p>B.\u4e00\u4e2a\u7c7b\u7684\u53cb\u5143\u7c7b\u4e2d\u7684\u6210\u5458\u51fd\u6570\u90fd\u662f\u8fd9\u4e2a\u7c7b\u7684\u53cb\u5143\u51fd\u6570</p> <p>C.\u53cb\u5143\u53ef\u4ee5\u63d0\u9ad8\u7a0b\u5e8f\u7684\u8fd0\u884c\u6548\u7387</p> <p>D.\u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7684\u53cb\u5143\u5173\u7cfb\u53ef\u4ee5\u7ee7\u627f</p> <p>\u5df2\u77e5\u7c7bA\u662f\u7c7bB\u7684\u53cb\u5143\uff0c\u7c7bB\u662f\u7c7bC\u7684\u53cb\u5143\uff0c\u5219\uff1a</p> <p>A.\u7c7bA\u4e00\u5b9a\u662f\u7c7bC\u7684\u53cb\u5143</p> <p>B.\u7c7bC\u4e00\u5b9a\u662f\u7c7bA\u7684\u53cb\u5143</p> <p>C.\u7c7bC\u7684\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u7c7bB\u7684\u5bf9\u8c61\u7684\u4efb\u4f55\u6210\u5458</p> <p>D.\u7c7bA\u7684\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u7c7bB\u7684\u5bf9\u8c61\u7684\u4efb\u4f55\u6210\u5458</p> <p>\u4e0d\u5c5e\u4e8e\u7c7b\u7684\u6210\u5458\u51fd\u6570\u7684\u662f\uff08 \uff09 \u3002</p> <p>A.\u6784\u9020\u51fd\u6570</p> <p>B.\u6790\u6784\u51fd\u6570</p> <p>C.\u53cb\u5143\u51fd\u6570</p> <p>D.\u590d\u5236\u6784\u9020\u51fd\u6570</p> <p>\u82e5\u7c7bA\u88ab\u8bf4\u660e\u6210\u7c7bB\u7684\u53cb\u5143\uff0c\u5219\uff08 \uff09 \u3002</p> <p>A.\u7c7bA\u7684\u6210\u5458\u5373\u7c7bB\u7684\u6210\u5458</p> <p>B.\u7c7bB\u7684\u6210\u5458\u5373\u7c7bA\u7684\u6210\u5458</p> <p>C.\u7c7bA\u7684\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u7c7bB\u7684\u6210\u5458</p> <p>D.\u7c7bB\u4e0d\u4e00\u5b9a\u662f\u7c7bA\u7684\u53cb\u5143</p> <p>\u5728\u4e0b\u5217\u5173\u952e\u5b57\u4e2d,\u7528\u4ee5\u8bf4\u660e\u7c7b\u4e2d\u516c\u6709\u6210\u5458\u7684\u662f\uff08 \uff09\u3002</p> <p>A.public</p> <p>B.private</p> <p>C.protected</p> <p>D.friend</p> <p>Suppose a class is defined without any keywords such as public, private and protected\uff0call members default to</p> <p>A.public</p> <p>B.protected</p> <p>C.private</p> <p>D.static</p> <p>Who can access a private member of a class?</p> <p>A.Only member functions of that class.</p> <p>B.Only member functions of that class and friend functions or member functions of friend classes</p> <p>C.Only member functions of that class and derived classes</p> <p>D.None of the others</p> <p>\u9759\u6001\u6210\u5458\u51fd\u6570\u6ca1\u6709\uff1a</p> <p>A.\u8fd4\u56de\u503c</p> <p>B.this\u6307\u9488</p> <p>C.\u6307\u9488\u53c2\u6570</p> <p>D.\u8fd4\u56de\u7c7b\u578b</p> <p>For the code below:</p> <pre><code>class A {\n  static int i;\n  //...\n};\n</code></pre> <p>Which statement is NOT true?</p> <p>A.All objects of class A reserve a space for i</p> <p>B.All objects of class A share the space of i</p> <p>C.i is a member variable of class A</p> <p>D.i is allocated in global data space</p>"},{"location":"class-OOP/OOP%E4%BD%9C%E4%B8%9A%E9%A2%98/#w7","title":"W7","text":"<p>In C++, inheritance allows a derived class to directly access all of the functions and data of its base class.</p> <p>T</p> <p>F</p> <p>One class can have more than one super classes.</p> <p>T</p> <p>F</p> <p>write the output of the code below.</p> <p>1.the output at //1 is <code>1</code></p> <p>2.the output at //2 is <code>2</code></p> <p>3.the output at //3 is <code>7</code></p> <p>4.the output at //4 is <code>0</code></p> <p>5.the output at //5 is <code>0</code></p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std ;\nclass Testing\n{\nprivate:\nstring words; int number ;\npublic:\nTesting(const string &amp; s = \"Testing\")\n{\nwords = s ;\nnumber = words.length();\nif (words.compare(\"Testing\")==0)\ncout &lt;&lt; 1;\nelse if (words.compare(\"Heap1\")==0)\ncout &lt;&lt; 2;\nelse\ncout &lt;&lt; 3;\n}\n~Testing()\n{\ncout &lt;&lt; 0;\n}\nvoid show() const\n{\ncout &lt;&lt; number;\n}\n};\nint main()\n{\nTesting *pc1 , *pc2;\npc1 = new Testing ;          //1\npc2 = new Testing(\"Heap1\");  //2\npc1-&gt;show();   //3\ndelete pc1 ;   //4\ndelete pc2 ;   //5\nreturn 0;\n}\n</code></pre> <p>For the code segment below, in the main(),</p> <ol> <li>the output at //1 is <code>114</code></li> <li>the output at //2 is <code>303062</code></li> <li>the output at //3 is <code>115</code></li> <li>the output at //4 is <code>303062</code></li> </ol> <pre><code>class A{\nint i;\npublic:\nA(int ii=0):i(ii) { cout &lt;&lt; 1; }\nA(const A&amp; a) {\ni = a.i;\ncout &lt;&lt; 2;     }\nvoid print() const { cout &lt;&lt; 3 &lt;&lt; i; }\n};\nclass B : public A {\nint i;\nA a;\npublic:\nB(int ii = 0) : i(ii) { cout &lt;&lt; 4; }\nB(const B&amp; b) {\ni = b.i;\ncout &lt;&lt; 5;\n}\nvoid print() const {\nA::print();\na.print();\ncout &lt;&lt; 6 &lt;&lt; i;    }\n};\nint main()\n{\nB b(2);        //1\nb.print();    //2\nB c(b);        //3\nc.print();    //4\n}\n</code></pre>"},{"location":"class-OOP/OOP%E4%BD%9C%E4%B8%9A%E9%A2%98/#w8","title":"W8","text":"<p>\u865a\u51fd\u6570\u662f\u7528virtual \u5173\u952e\u5b57\u8bf4\u660e\u7684\u6210\u5458\u51fd\u6570\u3002</p> <p>T</p> <p>F</p> <p>\u5c06\u6784\u9020\u51fd\u6570\u8bf4\u660e\u4e3a\u7eaf\u865a\u51fd\u6570\u662f\u6ca1\u6709\u610f\u4e49\u7684\u3002</p> <p>T</p> <p>F</p> <p>\u62bd\u8c61\u7c7b\u662f\u6307\u4e00\u4e9b\u6ca1\u6709\u8bf4\u660e\u5bf9\u8c61\u7684\u7c7b\u3002</p> <p>T</p> <p>F</p> <p>\u52a8\u6001\u7ed1\u5b9a\u662f\u5728\u8fd0\u884c\u65f6\u9009\u5b9a\u8c03\u7528\u7684\u6210\u5458\u51fd\u6570\u7684\u3002</p> <p>T</p> <p>F</p> <p>\u56e0\u4e3a\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570\uff0c\u6240\u4ee5\u5b83\u4eec\u4e0d\u80fd\u5b9e\u73b0\u591a\u6001\u3002</p> <p>T</p> <p>F</p> <p>\u5728\u591a\u7ee7\u627f\u4e2d\uff0c\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u9700\u8981\u4f9d\u6b21\u8c03\u7528\u5176\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u8c03\u7528\u987a\u5e8f\u53d6\u51b3\u4e8e\u5b9a\u4e49\u6d3e\u751f\u7c7b\u65f6\u6240\u6307\u5b9a\u7684\u5404\u57fa\u7c7b\u7684\u987a\u5e8f\u3002</p> <p>T</p> <p>F</p> <p>\u7c7b\u7684\u7ec4\u5408\u5173\u7cfb\u53ef\u4ee5\u7528\u201cHas-A\u201d\u63cf\u8ff0\uff1b\u7c7b\u95f4\u7684\u7ee7\u627f\u4e0e\u6d3e\u751f\u5173\u7cfb\u53ef\u4ee5\u7528\u201cIs-A\u201d\u63cf\u8ff0\u3002</p> <p>T</p> <p>F</p> <p>\u865a\u51fd\u6570\u5177\u6709\u7ee7\u627f\u6027\u3002</p> <p>T</p> <p>F</p> <p>\u9759\u6001\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002</p> <p>T</p> <p>F</p> <p>\u5982\u679c\u4e00\u4e2a\u7c7b\u7684\u51fd\u6570\u5168\u90e8\u90fd\u662f\u7eaf\u865a\u51fd\u6570\uff0c\u5219\u8fd9\u4e2a\u7c7b\u4e0d\u80fd\u6709\u81ea\u5df1\u7c7b\u7684\u5b9e\u73b0\uff08\u5305\u62ec\u5f15\u7528\u548c\u6307\u9488\uff09\uff0c\u53ea\u80fd\u901a\u8fc7\u6d3e\u751f\u7c7b\u7ee7\u627f\u5b9e\u73b0\u3002</p> <p>T</p> <p>F</p> <p>Which one is the characteristic of abstract class?</p> <p>A.May have virtual functions</p> <p>B.May have constructors overloaded</p> <p>C.May have friend function</p> <p>D.Can not make instance of this class</p> <p>Given:</p> <pre><code>class A {\n    A() {};\n    virtual f() {};\n    int i;\n};\n</code></pre> <p>which statement is NOT true:</p> <p>A.i is private</p> <p>B.f() is an inline function</p> <p>C.i is a member of class A</p> <p>D.sizeof(A) == sizeof(int)</p> <p>Given:</p> <pre><code>class A {\n    A() {}\n    virtual f() = 0;\n    int i;\n};\n</code></pre> <p>which statement below is NOT true:</p> <p>A.i is private</p> <p>B.Objects of class A can not be created</p> <p>C.i is a member of class A</p> <p>D.sizeof(A) == sizeof(int)</p> <p>Given:</p> <pre><code>class X {\n    int i;\n    virtual void f() {};\n};\n</code></pre> <p>If sizeof(int *) == sizeof(int) == 4, then sizeof(X)==?</p> <p>A.4</p> <p>B.6</p> <p>C.8</p> <p>D.Undetermined</p> <p>\u5982\u679c\u4e00\u4e2a\u7c7b\u81f3\u5c11\u6709\u4e00\u4e2a\u7eaf\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u79f0\u8be5\u7c7b\u4e3a\uff08\uff09\u3002</p> <p>A.\u62bd\u8c61\u7c7b</p> <p>B.\u865a\u51fd\u6570</p> <p>C.\u6d3e\u751f\u7c7b</p> <p>D.\u5177\u4f53\u7c7b</p> <p>\u5047\u8bbeA\u4e3a\u62bd\u8c61\u7c7b\uff0c\u4e0b\u5217\u58f0\u660e\uff08\uff09\u662f\u6b63\u786e\u7684\u3002</p> <p>A.A\u2002fun(int);</p> <p>B.A\u2002*p;</p> <p>C.int\u2002fun(A);</p> <p>D.A\u2002Obj;</p> <p>\u5728\u521b\u5efa\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u662f( )\u3002</p> <p>A.\u5bf9\u8c61\u6210\u5458\u6784\u9020\u51fd\u6570\u3001\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u3001\u6d3e\u751f\u7c7b\u672c\u8eab\u7684\u6784\u9020\u51fd\u6570</p> <p>B.\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u3001\u5bf9\u8c61\u6210\u5458\u6784\u9020\u51fd\u6570\u3001\u6d3e\u751f\u7c7b\u672c\u8eab\u7684\u6784\u9020\u51fd\u6570</p> <p>C.\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u3001\u6d3e\u751f\u7c7b\u672c\u8eab\u7684\u6784\u9020\u51fd\u6570\u3001\u5bf9\u8c61\u6210\u5458\u6784\u9020\u51fd\u6570</p> <p>D.\u6d3e\u751f\u7c7b\u672c\u8eab\u7684\u6784\u9020\u51fd\u6570\u3001\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u3001\u5bf9\u8c61\u6210\u5458\u6784\u9020\u51fd\u6570</p> <p>\u6d3e\u751f\u7c7b\u4e2d\u7684\u79c1\u6709\u6210\u5458</p> <p>\u82e5\u91c7\u7528\u79c1\u6709\u7ee7\u627f\u65b9\u5f0f\uff0c\u5219\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e2d\u7684\u79c1\u6709\u6210\u5458\u4e0d\u53ef\u80fd\u4e3a \u2581\u2581\u2581\u2581\u2581\u3002</p> <p>A.\u57fa\u7c7b\u4e2d\u5b9a\u4e49\u7684\u79c1\u6709\u6210\u5458</p> <p>B.\u57fa\u7c7b\u4e2d\u5b9a\u4e49\u7684\u4fdd\u62a4\u6210\u5458</p> <p>C.\u57fa\u7c7b\u4e2d\u5b9a\u4e49\u7684\u516c\u6709\u6210\u5458</p> <p>D.\u6d3e\u751f\u7c7b\u4e2d\u65b0\u589e\u7684\u79c1\u6709\u6210\u5458</p> <p>\u4ee5\u4e0b\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff1f</p> <p>A.\u5728\u865a\u51fd\u6570\u4e2d\u4e0d\u80fd\u4f7f\u7528this\u6307\u9488</p> <p>B.\u5728\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u865a\u51fd\u6570\uff0c\u4e0d\u662f\u52a8\u6001\u8054\u7f16</p> <p>C.\u62bd\u8c61\u7c7b\u7684\u6210\u5458\u51fd\u6570\u90fd\u662f\u7eaf\u865a\u51fd\u6570</p> <p>D.\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u90fd\u4e0d\u80fd\u662f\u865a\u51fd\u6570</p>"},{"location":"class-OOP/OOP%E4%BD%9C%E4%B8%9A%E9%A2%98/#w9","title":"W9","text":"<p>\u5f53\u7528\u4e00\u4e2a\u5bf9\u8c61\u53bb\u521d\u59cb\u5316\u540c\u7c7b\u7684\u53e6\u4e00\u4e2a\u5bf9\u8c61\u65f6,\u8981\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002</p> <p>T</p> <p>F</p> <p>\u5bf9\u8c61\u95f4\u8d4b\u503c\u5c06\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002</p> <p>T</p> <p>F</p> <p>\u4e0b\u5217\u5404\u7c7b\u51fd\u6570\u4e2d\uff0c\u4e0d\u662f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u7684\u662f</p> <p>A.\u6784\u9020\u51fd\u6570</p> <p>B.\u6790\u6784\u51fd\u6570</p> <p>C.\u53cb\u5143\u51fd\u6570</p> <p>D.\u62f7\u8d1d\u6784\u9020\u51fd\u6570</p> <p>\u8bbe\u7c7bAA\u5df2\u5b9a\u4e49\uff0c\u5047\u8bbe\u4ee5\u4e0b\u8bed\u53e5\u5168\u90e8\u5408\u6cd5\uff0c\u54ea\u4e9b\u8bed\u53e5\u4f1a\u89e6\u53d1\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff08 \uff09\u3002</p> <pre><code>AA a, b; //1\nAA c(10, 20); //2\nAA d(c); //3\nAA e = d; //4\n</code></pre> <p>A.2</p> <p>B.3</p> <p>C.4</p> <p>D.3 \u548c 4</p> <p>\u5047\u8bbeMyClass\u662f\u4e00\u4e2a\u7c7b\uff0c\u5219\u8be5\u7c7b\u7684\u62f7\u8d1d\u521d\u59cb\u5316\u6784\u9020\u51fd\u6570\u7684\u58f0\u660e\u8bed\u53e5\u4e3a\uff08 \uff09</p> <p>A.MyClass&amp;(MyClass x);</p> <p>B.MyClass(MyClass x);</p> <p>C.MyClass(MyClass &amp;x);</p> <p>D.MyClass(MyClass *x);</p> <p>\u4e0b\u5217\u5173\u4e8e\u5f02\u5e38\u7c7b\u7684\u8bf4\u6cd5\u4e2d\uff0c\u9519\u8bef\u7684\u662f\u3002</p> <p>A.\u5f02\u5e38\u7c7b\u7531\u6807\u51c6\u5e93\u63d0\u4f9b\uff0c\u4e0d\u53ef\u4ee5\u81ea\u5b9a\u4e49</p> <p>B.C++\u7684\u5f02\u5e38\u5904\u7406\u673a\u5236\u5177\u6709\u4e3a\u629b\u51fa\u5f02\u5e38\u524d\u6784\u9020\u7684\u6240\u6709\u5c40\u90e8\u5bf9\u8c61\u81ea\u52a8\u8c03\u7528\u6790\u6784\u51fd\u6570\u7684\u80fd\u529b</p> <p>C.\u82e5catch\u5757\u91c7\u7528\u5f02\u5e38\u7c7b\u5bf9\u8c61\u63a5\u6536\u5f02\u5e38\u4fe1\u606f\uff0c\u5219\u5728\u629b\u51fa\u5f02\u5e38\u65f6\u5c06\u901a\u8fc7\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u8fdb\u884c\u5bf9\u8c61\u590d\u5236\uff0c\u5f02\u5e38\u5904\u7406\u5b8c\u540e\u624d\u5c06\u4e24\u4e2a\u5f02\u5e38\u5bf9\u8c61\u8fdb\u884c\u6790\u6784\uff0c\u91ca\u653e\u8d44\u6e90</p> <p>D.\u5f02\u5e38\u7c7b\u5bf9\u8c61\u629b\u51fa\u540e\uff0ccatch\u5757\u4f1a\u7528\u7c7b\u5bf9\u8c61\u5f15\u7528\u63a5\u6536\u5b83\u4ee5\u4fbf\u6267\u884c\u76f8\u5e94\u7684\u5904\u7406\u52a8\u4f5c</p> <p>\u4e0b\u5217\u54ea\u4e00\u4e2a\u8bf4\u6cd5\u662f\u9519\u8bef\u7684?</p> <p>A.\u5f53\u7528\u4e00\u4e2a\u5bf9\u8c61\u53bb\u521d\u59cb\u5316\u540c\u7c7b\u7684\u53e6\u4e00\u4e2a\u5bf9\u8c61\u65f6,\u8981\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570</p> <p>B.\u5982\u679c\u67d0\u51fd\u6570\u6709\u4e00\u4e2a\u53c2\u6570\u662f\u7c7bA\u7684\u5bf9\u8c61,\u90a3\u4e48\u8be5\u51fd\u6570\u88ab\u8c03\u7528\u65f6,\u7c7bA\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5c06\u88ab\u8c03\u7528</p> <p>C.\u5982\u679c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u7c7bA\u7684\u5bf9\u8c61\u65f6\uff0c\u5219\u51fd\u6570\u8fd4\u56de\u65f6\uff0c\u7c7bA\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5c06\u88ab\u8c03\u7528</p> <p>D.\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5fc5\u987b\u81ea\u5df1\u7f16\u5199</p> <p>\u5047\u8bbeA\u662f\u4e00\u4e2a\u7c7b\u7684\u540d\u5b57,\u4e0b\u9762\u54ea\u6bb5\u7a0b\u5e8f\u4e0d\u4f1a\u7528\u5230A\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff1f</p> <p>A.A a1,a2; a1=a2;</p> <p>B.void func( A a) { cout&lt;&lt;\"good\"&lt;&lt; endl; }</p> <p>C.A func() { A tmp; return tmp;}</p> <p>D.A a1; A a2(a1);</p> <p>\u5982\u679c\u67d0\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e2a\u5bf9\u8c61 \uff0c\u5219\u8be5\u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c\u8fd4\u56de\u7684\u5bf9\u8c61\uff1f</p> <p>A.\u662f\u901a\u8fc7\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u7684</p> <p>B.\u662f\u901a\u8fc7\u65e0\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u7684</p> <p>C.\u7528\u54ea\u4e2a\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\uff0c\u53d6\u51b3\u4e8e\u51fd\u6570\u4e2dreturn \u8bed\u53e5\u662f\u600e\u4e48\u5199\u7684</p> <p>D.\u4e0d\u9700\u8981\u521d\u59cb\u5316</p>"},{"location":"class-OOP/OOP%E4%BD%9C%E4%B8%9A%E9%A2%98/#w11","title":"W11","text":"<p>\u591a\u6570\u8fd0\u7b97\u7b26\u53ef\u4ee5\u91cd\u8f7d\uff0c\u4e2a\u522b\u8fd0\u7b97\u7b26\u4e0d\u80fd\u91cd\u8f7d\uff0c\u8fd0\u7b97\u7b26\u91cd\u8f7d\u662f\u901a\u8fc7\u51fd\u6570\u5b9a\u4e49\u5b9e\u73b0\u7684\u3002</p> <p>T</p> <p>F</p> <p>\u5bf9\u6bcf\u4e2a\u53ef\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\u6765\u8bb2\uff0c\u5b83\u65e2\u53ef\u4ee5\u91cd\u8f7d\u4e3a\u53cb\u5143\u51fd\u6570\uff0c\u53c8\u53ef\u4ee5\u91cd\u8f7d\u4e3a\u6210\u5458\u51fd\u6570\uff0c\u8fd8\u53ef\u4ee5\u91cd\u8f7d\u4e3a\u975e\u6210\u5458\u51fd\u6570\u3002</p> <p>T</p> <p>F</p> <p>\u5bf9\u5355\u76ee\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4e3a\u53cb\u5143\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u8bf4\u660e\u4e00\u4e2a\u5f62\u53c2\u3002\u800c\u91cd\u8f7d\u4e3a\u6210\u5458\u51fd\u6570\u65f6\uff0c\u4e0d\u80fd\u663e\u5f0f\u8bf4\u660e\u5f62\u53c2\u3002</p> <p>T</p> <p>F</p> <p>\u91cd\u8f7d\u8fd0\u7b97\u7b26\u53ef\u4ee5\u4fdd\u6301\u539f\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7\u548c\u7ed3\u5408\u6027\u4e0d\u53d8\u3002</p> <p>T</p> <p>F</p> <p>\u9884\u5b9a\u4e49\u7684\u63d0\u53d6\u7b26\u548c\u63d2\u5165\u7b26\u662f\u53ef\u4ee5\u91cd\u8f7d\u7684\u3002</p> <p>T</p> <p>F</p> <p>\u91cd\u8f7doperator+\u65f6\uff0c\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u5e94\u5f53\u4e0e\u5f62\u53c2\u7c7b\u578b\u4e00\u81f4\u3002 \u6bd4\u5982\u4ee5\u4e0b\u7a0b\u5e8f\u4e2d\uff0coperator+\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u6709\u9519\uff1a</p> <p>class A {</p> <pre><code>int x;\n</code></pre> <p>public:</p> <pre><code> A(int t=0):x(t){     }\n\n    int operator+(const A&amp; a1){ return x+a1.x;  }\n</code></pre> <p>};</p> <p>T</p> <p>F</p> <p>\u91cd\u8f7d\u5173\u7cfb\u8fd0\u7b97\u7b26\u4e00\u822c\u90fd\u8fd4\u56detrue\u6216false\u503c\u3002</p> <p>T</p> <p>F</p> <p>The operator <code>::</code> can not be overloaded.</p> <p>T</p> <p>F</p> <p>\u82e5\u91cd\u8f7d\u4e3a\u53cb\u5143\u51fd\u6570\uff0c\u51fd\u6570\u5b9a\u4e49\u683c\u5f0f\u5982\u4e0b\uff1a</p> <p>&lt;\u7c7b\u578b&gt;operator&lt;\u8fd0\u7b97\u7b26&gt;\uff08&lt;\u53c2\u6570\u5217\u8868&gt;\uff09</p> <p>{</p> <p>&lt;\u51fd\u6570\u4f53&gt;</p> <p>}</p> <p>T</p> <p>F</p> <p>\u4e0b\u5217\u8fd0\u7b97\u7b26\u4e2d\uff0c\uff08 \uff09\u8fd0\u7b97\u7b26\u4e0d\u80fd\u91cd\u8f7d\u3002</p> <p>A.\uff06\uff06</p> <p>B.[ ]</p> <p>C.::</p> <p>D.&lt;&lt;</p> <p>\u4e0b\u5217\u5173\u4e8e\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u63cf\u8ff0\u4e2d\uff0c\uff08 \uff09\u662f\u6b63\u786e\u7684\u3002</p> <p>A.\u8fd0\u7b97\u7b26\u91cd\u8f7d\u53ef\u4ee5\u6539\u53d8\u64cd\u4f5c\u6570\u7684\u4e2a\u6570</p> <p>B.\u8fd0\u7b97\u7b26\u91cd\u8f7d\u53ef\u4ee5\u6539\u53d8\u4f18\u5148\u7ea7</p> <p>C.\u8fd0\u7b97\u7b26\u91cd\u8f7d\u53ef\u4ee5\u6539\u53d8\u7ed3\u5408\u6027</p> <p>D.\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4e0d\u53ef\u4ee5\u6539\u53d8\u8bed\u6cd5\u7ed3\u6784</p> <p>\u4e3a\u4e86\u80fd\u51fa\u73b0\u5728\u8d4b\u503c\u8868\u8fbe\u5f0f\u7684\u5de6\u53f3\u4e24\u8fb9\uff0c\u91cd\u8f7d\u7684\"[]\"\u8fd0\u7b97\u7b26\u5e94\u5b9a\u4e49\u4e3a\uff1a</p> <p>A.A operator [ ] (int);</p> <p>B.A&amp; operator [ ] (int);</p> <p>C.const A operator [ ] (int);</p> <p>D.\u4ee5\u4e0a\u7b54\u6848\u90fd\u4e0d\u5bf9</p> <p>\u5728C++\u4e2d\u4e0d\u80fd\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\u662f</p> <p>A.?:</p> <p>B.+</p> <p>C.-</p> <p>D.&lt;=</p> <p>\u4e0b\u5217\u5173\u4e8e\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u8868\u8ff0\u4e2d\uff0c\u6b63\u786e\u7684\u662f\uff08\uff09\u3002</p> <p>A.C++\u5df2\u6709\u7684\u4efb\u4f55\u8fd0\u7b97\u7b26\u90fd\u53ef\u4ee5\u91cd\u8f7d</p> <p>B.\u8fd0\u7b97\u7b26\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u4e0d\u80fd\u58f0\u660e\u4e3a\u57fa\u672c\u6570\u636e\u7c7b\u578b</p> <p>C.\u5728\u7c7b\u578b\u8f6c\u6362\u7b26\u51fd\u6570\u7684\u5b9a\u4e49\u4e2d\u4e0d\u9700\u8981\u58f0\u660e\u8fd4\u56de\u7c7b\u578b</p> <p>D.\u53ef\u4ee5\u901a\u8fc7\u8fd0\u7b97\u7b26\u91cd\u8f7d\u6765\u521b\u5efaC++\u4e2d\u539f\u6765\u6ca1\u6709\u7684\u8fd0\u7b97\u7b26</p> <p>\u80fd\u7528\u53cb\u5143\u51fd\u6570\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\u662f\uff08\uff09\u3002</p> <p>A.+</p> <p>B.=</p> <p>C.[]</p> <p>D.-&gt;</p> <p>\u4e0b\u5217\u54ea\u4e00\u9879\u8bf4\u6cd5\u662f\u4e0d\u6b63\u786e\u7684?</p> <p>A.\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u5b9e\u8d28\u662f\u51fd\u6570\u91cd\u8f7d</p> <p>B.\u8fd0\u7b97\u7b26\u91cd\u8f7d\u53ef\u4ee5\u91cd\u8f7d\u4e3a\u666e\u901a\u51fd\u6570,\u4e5f\u6210\u5458\u53ef\u4ee5\u91cd\u8f7d\u4e3a\u6210\u5458\u51fd\u6570</p> <p>C.\u8fd0\u7b97\u7b26\u88ab\u591a\u6b21\u91cd\u8f7d\u65f6,\u6839\u636e\u5b9e\u53c2\u7684\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u8fd0\u7b97\u7b26\u91cd\u8f7d\u51fd\u6570</p> <p>D.\u8fd0\u7b97\u7b26\u88ab\u591a\u6b21\u91cd\u8f7d\u65f6,\u6839\u636e\u51fd\u6570\u7c7b\u578b\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u91cd\u8f7d\u51fd\u6570</p> <p>\u5982\u4f55\u533a\u5206\u81ea\u589e\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u524d\u7f6e\u5f62\u5f0f\u548c\u540e\u7f6e\u5f62\u5f0f\uff1f</p> <p>A.\u91cd\u8f7d\u65f6\uff0c\u524d\u7f6e\u5f62\u5f0f\u7684\u51fd\u6570\u540d\u662f++operator\uff0c\u540e\u7f6e\u5f62\u5f0f\u7684\u51fd\u6570\u540d\u662foperator ++</p> <p>B.\u540e\u7f6e\u5f62\u5f0f\u6bd4\u524d\u7f6e\u5f62\u5f0f\u591a\u4e00\u4e2a int \u7c7b\u578b\u7684\u53c2\u6570</p> <p>C.\u65e0\u6cd5\u533a\u5206\uff0c\u4f7f\u7528\u65f6\u4e0d\u7ba1\u524d\u7f6e\u5f62\u5f0f\u8fd8\u662f\u540e\u7f6e\u5f62\u5f0f\uff0c\u90fd\u8c03\u7528\u76f8\u540c\u7684\u91cd\u8f7d\u51fd\u6570</p> <p>D.\u524d\u7f6e\u5f62\u5f0f\u6bd4\u540e\u7f6e\u5f62\u5f0f\u591a\u4e00\u4e2a int \u7c7b\u578b\u7684\u53c2\u6570</p> <p>\u4e0b\u5217\u5173\u4e8e\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u63cf\u8ff0\u6b63\u786e\u7684\u662f\uff08 \uff09\u3002</p> <p>A.\u8fd0\u7b97\u7b26\u91cd\u8f7d\u53ef\u4ee5\u6539\u53d8\u64cd\u4f5c\u6570\u7684\u4e2a\u6570</p> <p>B.\u53ef\u4ee5\u521b\u9020\u65b0\u7684\u8fd0\u7b97\u7b26</p> <p>C.\u8fd0\u7b97\u7b26\u53ef\u4ee5\u91cd\u8f7d\u4e3a\u53cb\u5143\u51fd\u6570</p> <p>D.\u4efb\u610f\u8fd0\u7b97\u7b26\u90fd\u53ef\u4ee5\u91cd\u8f7d</p> <p>\u5728\u91cd\u8f7d\u4e00\u4e2a\u8fd0\u7b97\u7b26\u65f6\uff0c\u5982\u679c\u5176\u53c2\u6570\u8868\u4e2d\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5219\u8bf4\u660e\u8be5\u8fd0\u7b97\u7b26\u662f( )\u3002</p> <p>A.\u4e00\u5143\u6210\u5458\u8fd0\u7b97\u7b26</p> <p>B.\u4e8c\u5143\u6210\u5458\u8fd0\u7b97\u7b26</p> <p>C.\u4e00\u5143\u53cb\u5143\u8fd0\u7b97\u7b26</p> <p>D.\u4e8c\u5143\u6210\u5458\u8fd0\u7b97\u7b26\u6216\u4e00\u5143\u53cb\u5143\u8fd0\u7b97\u7b26</p> <p>\u4e0b\u5217\u5173\u4e8e\u8fd0\u7b97\u7b26\u91cd\u8f7d\u7684\u63cf\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f\uff08\uff09\u3002</p> <p>A.\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4e0d\u6539\u53d8\u4f18\u5148\u7ea7</p> <p>B.\u8fd0\u7b97\u7b26\u91cd\u8f7d\u540e\uff0c\u539f\u6765\u8fd0\u7b97\u7b26\u64cd\u4f5c\u4e0d\u53ef\u518d\u7528</p> <p>C.\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4e0d\u6539\u53d8\u7ed3\u5408\u6027</p> <p>D.\u8fd0\u7b97\u7b26\u91cd\u8f7d\u51fd\u6570\u7684\u53c2\u6570\u4e2a\u6570\u4e0e\u91cd\u8f7d\u65b9\u5f0f\u6709\u5173</p> <p>\u82e5\u9700\u8981\u4e3axv\u7c7b\u91cd\u8f7d\u4e58\u6cd5\u8fd0\u7b97\u7b26,\u8fd0\u7b97\u7ed3\u679c\u4e3axv\u7c7b\u578b,\u5728\u5c06\u5176\u58f0\u660e\u4e3a\u7c7b\u7684\u6210\u5458\u51fd\u6570\u65f6,\u4e0b\u5217\u539f\u578b\u58f0\u660e\u6b63\u786e\u7684\u662f___\u3002</p> <p>A.xv*(xv);</p> <p>B.operator*(xv);</p> <p>C.xv operator*(xv);</p> <p>D.xv operator*(xv,xv);</p> <p>\u4e0b\u5217\u8fd0\u7b97\u7b26\u4e2d\uff0c\u4e0d\u53ef\u4ee5\u91cd\u8f7d\u7684\u662f\uff08 \uff09\u3002</p> <p>A.new</p> <p>B.++</p> <p>C..*</p> <p>D.[]</p>"},{"location":"class-OOP/OOP%E4%BD%9C%E4%B8%9A%E9%A2%98/#w13","title":"W13","text":"<p>pair\u7c7b\u6a21\u677f\u7684\u4f5c\u7528\u662f\u5c06\u4e24\u4e2a\u6570\u636e\u7ec4\u6210\u4e00\u4e2a\u6570\u636e\uff0c\u7528\u6765\u8868\u793a\u4e00\u4e2a\u4e8c\u5143\u7ec4\u6216\u4e00\u4e2a\u5143\u7d20\u5bf9\uff0c\u4e24\u4e2a\u6570\u636e\u53ef\u4ee5\u662f\u540c\u4e00\u4e2a\u7c7b\u578b\u4e5f\u53ef\u4ee5\u662f\u4e0d\u540c\u7684\u7c7b\u578b\u3002</p> <p>T</p> <p>F</p> <p>\u73b0\u6709\u58f0\u660e\uff1a</p> <p>template</p> <p>class Test{...};</p> <p>\u5219\u4ee5\u4e0b\u54ea\u4e00\u4e2a\u58f0\u660e\u4e0d\u53ef\u80fd\u6b63\u786e\u3002</p> <p>A.Test a;</p> <p>B.Test &lt; int&gt; a;</p> <p>C.Test &lt; float&gt; a;</p> <p>D.Test&lt; Test &lt; int&gt; &gt; a;</p> <p>Given:</p> <pre><code>template &lt; class T &gt;\nvoid swap( T&amp; x, T&amp; y ) {\n   T temp = x;\n   x = y;\n   y = temp;\n}\nint i,j;\nfloat f,m;\n</code></pre> <p>Which statement is incorrect?</p> <p>A.swap(i,j);</p> <p>B.swap(j,i);</p> <p>C.swap(f,m)</p> <p>D.swap(i,f);</p> <p>Given:</p> <pre><code>void f(int i) { cout &lt;&lt; \"Func1\" &lt;&lt; endl; }\ntemplate&lt;class T&gt;\nvoid f(T t) { cout &lt;&lt; \"Func2\" &lt;&lt; endl; }\nmain() {\n    f(2);\n}\n</code></pre> <p>The result is :</p> <p>A.Func1</p> <p>B.Func2</p> <p>C.<code>*nothing*</code></p> <p>D.undetermined</p> <p>\u4e0b\u5217\u7684\u6a21\u677f\u8bf4\u660e\u4e2d\uff0c\u6b63\u786e\u7684\u662f\u3002</p> <p>A.template &lt; typename T1, T2 &gt;</p> <p>B.template &lt; class T1, T2 &gt;</p> <p>C.template &lt; typename T1, typename T2 &gt;</p> <p>D.template ( typedef T1, typedef T2 )</p> <p>\u5173\u4e8e\u7c7b\u6a21\u677f\uff0c\u63cf\u8ff0\u9519\u8bef\u7684\u662f\u3002</p> <p>A.\u4e00\u4e2a\u666e\u901a\u57fa\u7c7b\u4e0d\u80fd\u6d3e\u751f\u7c7b\u6a21\u677f</p> <p>B.\u7c7b\u6a21\u677f\u53ef\u4ee5\u4ece\u666e\u901a\u7c7b\u6d3e\u751f\uff0c\u4e5f\u53ef\u4ee5\u4ece\u7c7b\u6a21\u677f\u6d3e\u751f</p> <p>C.\u6839\u636e\u5efa\u7acb\u5bf9\u8c61\u65f6\u7684\u5b9e\u9645\u6570\u636e\u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u628a\u7c7b\u6a21\u677f\u5b9e\u4f8b\u5316\u4e3a\u6a21\u677f\u7c7b</p> <p>D.\u51fd\u6570\u7684\u7c7b\u6a21\u677f\u53c2\u6570\u9700\u751f\u6210\u6a21\u677f\u7c7b\u5e76\u901a\u8fc7\u6784\u9020\u51fd\u6570\u5b9e\u4f8b\u5316</p> <p>\u5efa\u7acb\u7c7b\u6a21\u677f\u5bf9\u8c61\u7684\u5b9e\u4f8b\u5316\u8fc7\u7a0b\u4e3a\u3002</p> <p>A.\u57fa\u7c7b-\u6d3e\u751f\u7c7b</p> <p>B.\u6784\u9020\u51fd\u6570-\u5bf9\u8c61</p> <p>C.\u6a21\u677f\u7c7b-\u5bf9\u8c61</p> <p>D.\u6a21\u677f\u7c7b-\u6a21\u677f\u51fd\u6570</p> <p>\u4e0b\u5217\u6709\u5173\u6a21\u677f\u7684\u63cf\u8ff0\uff0c\u9519\u8bef\u7684\u662f____\u3002</p> <p>A.\u6a21\u677f\u628a\u6570\u636e\u7c7b\u578b\u4f5c\u4e3a\u4e00\u4e2a\u8bbe\u8ba1\u53c2\u6570\uff0c\u79f0\u4e3a\u53c2\u6570\u5316\u7a0b\u5e8f\u8bbe\u8ba1</p> <p>B.\u4f7f\u7528\u65f6\uff0c\u6a21\u677f\u53c2\u6570\u4e0e\u51fd\u6570\u53c2\u6570\u76f8\u540c\uff0c\u662f\u6309\u4f4d\u7f6e\u800c\u4e0d\u662f\u540d\u79f0\u5bf9\u5e94\u7684</p> <p>C.\u6a21\u677f\u53c2\u6570\u8868\u4e2d\u53ef\u4ee5\u6709\u7c7b\u578b\u53c2\u6570\u548c\u975e\u7c7b\u578b\u53c2\u6570</p> <p>D.\u7c7b\u6a21\u677f\u4e0e\u6a21\u677f\u7c7b\u662f\u540c\u4e00\u4e2a\u6982\u5ff5</p> <p>\u6a21\u677f\u51fd\u6570\u7684\u771f\u6b63\u4ee3\u7801\u662f\u5728\u54ea\u4e2a\u65f6\u671f\u4ea7\u751f\u7684____\u3002</p> <p>A.\u6e90\u7a0b\u5e8f\u4e2d\u58f0\u660e\u51fd\u6570\u65f6</p> <p>B.\u6e90\u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u51fd\u6570\u65f6</p> <p>C.\u6e90\u7a0b\u5e8f\u4e2d\u8c03\u7528\u51fd\u6570\u65f6</p> <p>D.\u8fd0\u884c\u6267\u884c\u51fd\u6570\u65f6</p> <p>\u7c7b\u6a21\u677f\u7684\u4f7f\u7528\u5b9e\u9645\u4e0a\u662f\u5c06\u7c7b\u6a21\u677f\u5b9e\u4f8b\u5316\u6210\u4e00\u4e2a____\u3002</p> <p>A.\u51fd\u6570</p> <p>B.\u5bf9\u8c61</p> <p>C.\u7c7b</p> <p>D.\u62bd\u8c61\u7c7b</p> <p>\u58f0\u660e\u6a21\u677f\u7684\u5173\u952e\u5b57\u4e3a____\u3002</p> <p>A.static</p> <p>B.template</p> <p>C.typename</p> <p>D.class</p> <p>\u4e0b\u5217\u5bf9\u6a21\u677f\u7684\u58f0\u660e\uff0c\u6b63\u786e\u7684\u662f____\u3002</p> <p>A.template <p>B.template <p>C.template <p>D.template <p>\u4e0b\u5217\u9009\u9879\u4e2d\uff0c\u54ea\u4e00\u9879\u662f\u7c7b\u6a21\u677f\u5b9e\u4f8b\u5316\u7684\u65f6\u671f____\u3002</p> <p>A.\u5728\u7f16\u7ece\u65f6\u671f\u8fdb\u884c</p> <p>B.\u5c5e\u4e8e\u52a8\u6001\u8054\u7f16</p> <p>C.\u5728\u8fd0\u884c\u65f6\u8fdb\u884c</p> <p>D.\u5728\u8fde\u63a5\u65f6\u8fdb\u884c</p> <p>\u4e0b\u5217\u9009\u9879\u4e2d\uff0c\u54ea\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u5bf9\u8bb8\u591a\u6570\u636e\u7c7b\u578b\u5b8c\u6210\u540c\u4e00\u4efb\u52a1____\u3002</p> <p>A.\u51fd\u6570\u6a21\u677f</p> <p>B.\u9012\u5f52\u51fd\u6570</p> <p>C.\u6a21\u677f\u51fd\u6570</p> <p>D.\u91cd\u8f7d\u51fd\u6570</p> <p>\u4e00\u4e2a____\u5141\u8bb8\u7528\u6237\u4e3a\u7c7b\u5b9a\u4e49\u4e00\u79cd\u6a21\u5f0f\uff0c\u4f7f\u5f97\u7c7b\u4e2d\u7684\u67d0\u4e9b\u6570\u636e\u6210\u5458\u53ca\u67d0\u4e9b\u6210\u5458\u51fd\u6570\u7684\u8fd4\u56de\u503c\u80fd\u53d6\u4efb\u610f\u7c7b\u578b\u3002</p> <p>A.\u51fd\u6570\u6a21\u677f</p> <p>B.\u6a21\u677f\u51fd\u6570</p> <p>C.\u7c7b\u6a21\u677f</p> <p>D.\u6a21\u677f\u7c7b</p> <p>\u4e0b\u5217\u5173\u4e8epair&lt;&gt;\u7c7b\u6a21\u677f\u7684\u63cf\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f\u3002</p> <p>A.pair&lt;&gt;\u7c7b\u6a21\u677f\u5b9a\u4e49\u5934\u6587\u4ef6utility\u4e2d</p> <p>B.pair&lt;&gt;\u7c7b\u6a21\u677f\u4f5c\u7528\u662f\u5c06\u4e24\u4e2a\u6570\u636e\u7ec4\u6210\u4e00\u4e2a\u6570\u636e\uff0c\u4e24\u4e2a\u6570\u636e\u53ef\u4ee5\u662f\u540c\u4e00\u4e2a\u7c7b\u578b\u4e5f\u53ef\u4ee5\u662f\u4e0d\u540c\u7684\u7c7b\u578b</p> <p>C.\u521b\u5efapair&lt;&gt;\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528\u5176\u6784\u9020\u51fd\u6570</p> <p>D.pair&lt;&gt;\u7c7b\u6a21\u62df\u63d0\u4f9b\u4e86\u4e24\u4e2a\u6210\u5458\u51fd\u6570first\u4e0esecond\u6765\u8bbf\u95ee\u8fd9\u7684\u4e24\u4e2a\u6570\u636e</p> <p>\u6a21\u677f\u7684\u4f7f\u7528\u662f\u4e3a\u4e86\uff08\uff09\u3002</p> <p>A.\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u91cd\u7528\u6027</p> <p>B.\u63d0\u9ad8\u4ee3\u7801\u7684\u8fd0\u884c\u6548\u7387</p> <p>C.\u52a0\u5f3a\u7c7b\u7684\u5c01\u88c5\u6027</p> <p>D.\u5b9e\u73b0\u591a\u6001\u6027</p> <p>\u5047\u8bbe\u58f0\u660e\u4e86\u4e00\u4e0b\u7684\u51fd\u6570\u6a21\u677f\uff1a</p> <pre><code>template&lt;class T&gt;\nT max(T x, T y)\n{\n    return  (x&gt;y)?x:y;\n}\n</code></pre> <p>\u5e76\u5b9a\u4e49\u4e86int i; char c; \u9519\u8bef\u7684\u8c03\u7528\u8bed\u53e5\u662f\uff08\uff09\u3002</p> <p>A.max(i,i);</p> <p>B.max(c,c);</p> <p>C.max((int)c,i);</p> <p>D.max(i,c);</p>"},{"location":"class-OOP/OOP%E4%BD%9C%E4%B8%9A%E9%A2%98/#w14","title":"W14","text":"<p>If you are not interested in the contents of an exception object, the catch block parameter may be omitted.\u3002</p> <p>T</p> <p>F</p> <p>catch (type p) acts very much like a parameter in a function. Once the exception is caught, you can access the thrown value from this parameter in the body of a catch block.\u3002</p> <p>T</p> <p>F</p> <p>\u5f02\u5e38\u5904\u7406\u7684catch{ }\u8bed\u53e5\u5757\u5fc5\u987b\u7d27\u8ddftry{ }\u8bed\u53e5\u5757\u4e4b\u540e\uff0c\u8fd9\u4e24\u4e2a\u8bed\u53e5\u4e4b\u95f4\u4e0d\u80fd\u63d2\u5165\u53e6\u5916\u8bed\u53e5\u3002</p> <p>T</p> <p>F</p> <p>\u6709\u5982\u4e0b\u8bed\u53e5\u5e8f\u5217</p> <pre><code>\u7b2c1\u884c\uff1a    int a=1;\n\u7b2c2\u884c\uff1a    try{\n\u7b2c3\u884c\uff1a       if(a==1) throw(a);\n\u7b2c4\u884c\uff1a       a++;\n\u7b2c5\u884c\uff1a    }\n\u7b2c6\u884c\uff1a    catch(int b){\n\u7b2c7\u884c\uff1a       cout &lt;&lt; \u201cerror! a = \u201d &lt;&lt; b &lt;&lt; endl;\n\u7b2c8\u884c\uff1a    }\n</code></pre> <p>\u4ee5\u4e0a\u8bed\u53e5\u7684\u7b2c6\u884c\u6709\u7f16\u8bd1\u9519\u8bef\uff0c\u53ea\u80fd\u5199\u6210catch(int)\u3002</p> <p>T</p> <p>F</p> <p>One of the major features in C++ is \uff08 \uff09 handling,which is a better way of handling errors.</p> <p>A.data</p> <p>B.pointer</p> <p>C.test</p> <p>D.exception</p> <p>What is wrong in the following code?</p> <pre><code>  vector&lt;int&gt; v;\n  v[0] = 2.5;\n</code></pre> <p>A.The program has a compile error because there are no elements in the vector.</p> <p>B.The program has a compile error because you cannot assign a double value to v[0].</p> <p>C.The program has a runtime error because there are no elements in the vector.</p> <p>D.The program has a runtime error because you cannot assign a double value to v[0].</p> <p>If you enter 1 0, what is the output of the following code?</p> <pre><code>#include \"iostream\"\nusing namespace std;\nint main()\n{\n// Read two integers\ncout &lt;&lt; \"Enter two integers: \";\nint number1, number2;\ncin &gt;&gt; number1 &gt;&gt; number2;\ntry\n{\nif (number2 == 0)\nthrow number1;\ncout &lt;&lt; number1 &lt;&lt; \" / \" &lt;&lt; number2 &lt;&lt; \" is \"\n&lt;&lt; (number1 / number2) &lt;&lt; endl;\ncout &lt;&lt; \"C\" &lt;&lt; endl;\n}\ncatch (int e)\n{\ncout &lt;&lt; \"A\" ;\n}\ncout &lt;&lt; \"B\" &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> <p>A.A</p> <p>B.B</p> <p>C.C</p> <p>D.AB</p> <p>The function what() is defined in __.</p> <p>A.exception</p> <p>B.runtime_error</p> <p>C.overflow_error</p> <p>D.bad_exception</p> <p>Which of the following statements are true?</p> <p>A.A custom exception class is just like a regular class.</p> <p>B.A custom exception class must always be derived from class exception.</p> <p>C.A custom exception class must always be derived from a derived class of class exception.</p> <p>D.A custom exception class must always be derived from class runtime_error.</p> <p>Suppose Exception2 is derived from Exception1. Analyze the following code.</p> <pre><code>try {\nstatement1;\nstatement2;\nstatement3;\n}\ncatch (Exception1 ex1)\n{\n}\ncatch (Exception2 ex2)\n{\n}\n</code></pre> <p>A.If an exception of the Exeception2 type occurs, this exception is caught by the first catch block.</p> <p>B.If an exception of the Exeception2 type occurs, this exception is caught by the second catch block.</p> <p>C.The program has a compile error because these two catch blocks are in wrong order.</p> <p>D.The program has a runtime error because these two catch blocks are in wrong order.</p> <p>Suppose that statement2 throws an exception of type Exception2 in the following statement:</p> <pre><code>try {\nstatement1;\nstatement2;\nstatement3;\n}\ncatch (Exception1 ex1)\n{\n}\ncatch (Exception2 ex2)\n{\n}\ncatch (Exception3 ex3)\n{\nstatement4;\nthrow;\n}\nstatement5;\n</code></pre> <p>A.statement2</p> <p>B.statement3</p> <p>C.statement4</p> <p>D.statement5</p> <p>Suppose that statement3 throws an exception of type Exception3 in the following statement:</p> <pre><code>try {\nstatement1;\nstatement2;\nstatement3;\n}\ncatch (Exception1 ex1)\n{\n}\ncatch (Exception2 ex2)\n{\n}\ncatch (Exception3 ex3)\n{\nstatement4;\nthrow;\n}\nstatement5;\n</code></pre> <p>Which statements are executed after statement3 is executed?</p> <p>A.statement2</p> <p>B.statement3</p> <p>C.statement4</p> <p>D.statement5</p> <p>\u4e0b\u5217\u5173\u4e8e\u5f02\u5e38\u5904\u7406\u7684\u8bf4\u6cd5\u4e0d\u6b63\u786e\u7684\u662f\uff08 \uff09\u3002</p> <p>A.\u5f02\u5e38\u5904\u7406\u7684throw\u4e0ecatch\u901a\u5e38\u4e0d\u5728\u540c\u4e00\u4e2a\u51fd\u6570\u4e2d\uff0c\u5b9e\u73b0\u5f02\u5e38\u68c0\u6d4b\u4e0e\u5f02\u5e38\u5904\u7406\u7684\u5206\u79bb\u3002</p> <p>B.catch\u8bed\u53e5\u5757\u5fc5\u987b\u8ddf\u5728try\u8bed\u53e5\u5757\u7684\u540e\u9762\uff0c\u4e00\u4e2atry\u8bed\u53e5\u5757\u540e\u53ef\u4ee5\u6709\u591a\u4e2acatch\u8bed\u53e5\u5757\u3002</p> <p>C.\u5728\u5bf9\u51fd\u6570\u8fdb\u884c\u5f02\u5e38\u89c4\u8303\u58f0\u660e\u65f6\uff0c\u82e5\u5f62\u53c2\u8868\u540e\u6ca1\u6709\u4efb\u4f55\u8868\u793a\u629b\u51fa\u5f02\u5e38\u7c7b\u578b\u7684\u8bf4\u660e\uff0c\u5b83\u8868\u793a\u8be5\u51fd\u6570\u4e0d\u80fd\u629b\u51fa\u4efb\u4f55\u5f02\u5e38\u3002</p> <p>D.catch\u8bed\u53e5\u5757\u4e2d\uff0ccatch(\u2026)\u8868\u793a\u8be5catch\u53ef\u4ee5\u6355\u6349\u4efb\u610f\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u5fc5\u987b\u5c06catch(\u2026)\u653e\u5728catch\u7ed3\u6784\u7684\u6700\u540e\u3002</p> <p>\u4ee5\u4e0b\u5173\u4e8e\u5f02\u5e38\u5904\u7406\u7684\u63cf\u8ff0\u9519\u8bef\u7684\u662f\uff08\uff09\u3002</p> <p>A.C++\u7a0b\u5e8f\u4e2d\u51fa\u73b0\u5f02\u5e38\u65f6\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u8fdb\u884c\u63d0\u793a</p> <p>B.\u5c06\u53ef\u80fd\u4ea7\u751f\u5f02\u5e38\u7684\u4ee3\u7801\u653e\u5728try\u8bed\u53e5\u5757\u5185</p> <p>C.\u4f7f\u7528catch\u5173\u952e\u5b57\u63a5\u6536\u5e76\u5904\u7406\u5f02\u5e38</p> <p>D.\u91cd\u629b\u5f02\u5e38\u53ef\u4ee5\u5728try\u8bed\u53e5\u5757\u6216\u8005catch\u8bed\u53e5\u5757\u4e2d\u8c03\u7528throw\u5b9e\u73b0</p> <p>\u4e0b\u5217\u5173\u4e8e\u5f02\u5e38\u7684\u63cf\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f\uff08\uff09\u3002</p> <p>A.\u7f16\u8bd1\u9519\u5c5e\u4e8e\u5f02\u5e38\uff0c\u53ef\u4ee5\u629b\u51fa</p> <p>B.\u8fd0\u884c\u9519\u5c5e\u4e8e\u5f02\u5e38</p> <p>C.\u786c\u4ef6\u6545\u969c\u4e5f\u53ef\u5f53\u5f02\u5e38\u629b\u51fa</p> <p>D.\u53ea\u8981\u662f\u7f16\u7a0b\u8005\u8ba4\u4e3a\u662f\u5f02\u5e38\u7684\u90fd\u53ef\u5f53\u5f02\u5e38\u629b\u51fa</p> <p>\u4e0b\u5217\u5173\u4e8e\u5f02\u5e38\u7c7b\u7684\u8bf4\u6cd5\u4e2d\uff0c\u9519\u8bef\u7684\u662f\u3002</p> <p>A.\u5f02\u5e38\u7c7b\u7531\u6807\u51c6\u5e93\u63d0\u4f9b\uff0c\u4e0d\u53ef\u4ee5\u81ea\u5b9a\u4e49</p> <p>B.C++\u7684\u5f02\u5e38\u5904\u7406\u673a\u5236\u5177\u6709\u4e3a\u629b\u51fa\u5f02\u5e38\u524d\u6784\u9020\u7684\u6240\u6709\u5c40\u90e8\u5bf9\u8c61\u81ea\u52a8\u8c03\u7528\u6790\u6784\u51fd\u6570\u7684\u80fd\u529b</p> <p>C.\u82e5catch\u5757\u91c7\u7528\u5f02\u5e38\u7c7b\u5bf9\u8c61\u63a5\u6536\u5f02\u5e38\u4fe1\u606f\uff0c\u5219\u5728\u629b\u51fa\u5f02\u5e38\u65f6\u5c06\u901a\u8fc7\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u8fdb\u884c\u5bf9\u8c61\u590d\u5236\uff0c\u5f02\u5e38\u5904\u7406\u5b8c\u540e\u624d\u5c06\u4e24\u4e2a\u5f02\u5e38\u5bf9\u8c61\u8fdb\u884c\u6790\u6784\uff0c\u91ca\u653e\u8d44\u6e90</p> <p>D.\u5f02\u5e38\u7c7b\u5bf9\u8c61\u629b\u51fa\u540e\uff0ccatch\u5757\u4f1a\u7528\u7c7b\u5bf9\u8c61\u5f15\u7528\u63a5\u6536\u5b83\u4ee5\u4fbf\u6267\u884c\u76f8\u5e94\u7684\u5904\u7406\u52a8\u4f5c</p> <p>\u4e0b\u5217\u5173\u4e8e\u91cd\u629b\u5f02\u5e38\u7684\u63cf\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f\u3002</p> <p>A.\u5904\u7406\u4e0d\u4e86\u7684\u5f02\u5e38\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728catch\u7ed3\u6784\u4e2d\u8c03\u7528throw\u91cd\u65b0\u629b\u51fa\u5f02\u5e38\uff0c\u5c06\u5f53\u524d\u5f02\u5e38\u4f20\u9012\u5230\u5916\u90e8\u7684try-catch\u7ed3\u6784\u4e2d</p> <p>B.\u91cd\u629b\u5f02\u5e38\u65f6\u53ea\u80fd\u4ececatch\u8bed\u53e5\u5757\u6216\u4ececatch\u5757\u4e2d\u7684\u8c03\u7528\u51fd\u6570\u4e2d\u5b8c\u6210</p> <p>C.\u91cd\u629b\u7684\u5f02\u5e38\u53ef\u4ee5\u88ab\u540c\u4e00\u4e2acatch\u8bed\u53e5\u6355\u6349</p> <p>D.\u53ef\u4ee5\u5355\u72ec\u4f7f\u7528throw\u5173\u952e\u5b57\u5b8c\u6210\u5f02\u5e38\u91cd\u629b</p> <p>\u4e0b\u5217\u5173\u4e8e\u65ad\u8a00\u7684\u63cf\u8ff0\u4e2d\uff0c\u9519\u8bef\u7684\u662f\u3002</p> <p>A.\u65ad\u8a00\u662f\u8c03\u8bd5\u7a0b\u5e8f\u7684\u4e00\u79cd\u624b\u6bb5</p> <p>B.\u82e5\u65ad\u8a00\u60c5\u51b5\u53d1\u751f\uff0c\u4e00\u822c\u4f1a\u7ec8\u6b62\u7a0b\u5e8f</p> <p>C.\u5728C++\u4e2d\uff0c\u5b8fassert()\u7528\u6765\u5728\u8c03\u8bd5\u9636\u6bb5\u5b9e\u73b0\u65ad\u8a00</p> <p>D.\u65ad\u8a00\u5728\u7a0b\u5e8f\u8c03\u8bd5\u4e0e\u53d1\u5e03\u7248\u672c\u4e2d\u90fd\u53ef\u4ee5\u4f7f\u7528\u65ad\u8a00</p> <p>C++\u5904\u7406\u5f02\u5e38\u7684\u673a\u5236\u662f\u7531\uff08\uff093\u90e8\u5206\u7ec4\u6210\u3002</p> <p>A.\u7f16\u8f91\u3001\u7f16\u8bd1\u548c\u8fd0\u884c</p> <p>B.\u68c0\u67e5\u3001\u629b\u51fa\u548c\u6355\u83b7</p> <p>C.\u7f16\u8f91\u3001\u7f16\u8bd1\u548c\u6355\u83b7</p> <p>D.\u68c0\u67e5\u3001\u629b\u51fa\u548c\u8fd0\u884c</p>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/","title":"oop\u540e\u7bc7","text":"<p>[toc]</p>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#c","title":"C++ \u6587\u4ef6\u548c\u6d41","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86 iostream \u6807\u51c6\u5e93\uff0c\u5b83\u63d0\u4f9b\u4e86 cin \u548c cout \u65b9\u6cd5\u5206\u522b\u7528\u4e8e\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u6d41\u548c\u5411\u6807\u51c6\u8f93\u51fa\u5199\u5165\u6d41\u3002</p> <p>\u672c\u6559\u7a0b\u4ecb\u7ecd\u5982\u4f55\u4ece\u6587\u4ef6\u8bfb\u53d6\u6d41\u548c\u5411\u6587\u4ef6\u5199\u5165\u6d41\u3002\u8fd9\u5c31\u9700\u8981\u7528\u5230 C++ \u4e2d\u53e6\u4e00\u4e2a\u6807\u51c6\u5e93 fstream\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e09\u4e2a\u65b0\u7684\u6570\u636e\u7c7b\u578b\uff1a</p> \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 ofstream \u8be5\u6570\u636e\u7c7b\u578b\u8868\u793a\u8f93\u51fa\u6587\u4ef6\u6d41\uff0c\u7528\u4e8e\u521b\u5efa\u6587\u4ef6\u5e76\u5411\u6587\u4ef6\u5199\u5165\u4fe1\u606f\u3002 ifstream \u8be5\u6570\u636e\u7c7b\u578b\u8868\u793a\u8f93\u5165\u6587\u4ef6\u6d41\uff0c\u7528\u4e8e\u4ece\u6587\u4ef6\u8bfb\u53d6\u4fe1\u606f\u3002 fstream \u8be5\u6570\u636e\u7c7b\u578b\u901a\u5e38\u8868\u793a\u6587\u4ef6\u6d41\uff0c\u4e14\u540c\u65f6\u5177\u6709 ofstream \u548c ifstream \u4e24\u79cd\u529f\u80fd\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u521b\u5efa\u6587\u4ef6\uff0c\u5411\u6587\u4ef6\u5199\u5165\u4fe1\u606f\uff0c\u4ece\u6587\u4ef6\u8bfb\u53d6\u4fe1\u606f\u3002 <p>\u8981\u5728 C++ \u4e2d\u8fdb\u884c\u6587\u4ef6\u5904\u7406\uff0c\u5fc5\u987b\u5728 C++ \u6e90\u4ee3\u7801\u6587\u4ef6\u4e2d\u5305\u542b\u5934\u6587\u4ef6  \u548c \u3002"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_1","title":"\u6253\u5f00\u6587\u4ef6","text":"<p>\u5728\u4ece\u6587\u4ef6\u8bfb\u53d6\u4fe1\u606f\u6216\u8005\u5411\u6587\u4ef6\u5199\u5165\u4fe1\u606f\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u6253\u5f00\u6587\u4ef6\u3002ofstream \u548c fstream \u5bf9\u8c61\u90fd\u53ef\u4ee5\u7528\u6765\u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u5982\u679c\u53ea\u9700\u8981\u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u8bfb\u64cd\u4f5c\uff0c\u5219\u4f7f\u7528 ifstream \u5bf9\u8c61\u3002</p> <p>\u4e0b\u9762\u662f open() \u51fd\u6570\u7684\u6807\u51c6\u8bed\u6cd5\uff0copen() \u51fd\u6570\u662f fstream\u3001ifstream \u548c ofstream \u5bf9\u8c61\u7684\u4e00\u4e2a\u6210\u5458\u3002</p> <pre><code>void open(const char *filename, ios::openmode mode);\n</code></pre> <p>\u5728\u8fd9\u91cc\uff0copen() \u6210\u5458\u51fd\u6570\u7684\u7b2c\u4e00\u53c2\u6570\u6307\u5b9a\u8981\u6253\u5f00\u7684\u6587\u4ef6\u7684\u540d\u79f0\u548c\u4f4d\u7f6e\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5b9a\u4e49\u6587\u4ef6\u88ab\u6253\u5f00\u7684\u6a21\u5f0f\u3002</p> \u6a21\u5f0f\u6807\u5fd7 \u63cf\u8ff0 ios::app \u8ffd\u52a0\u6a21\u5f0f\u3002\u6240\u6709\u5199\u5165\u90fd\u8ffd\u52a0\u5230\u6587\u4ef6\u672b\u5c3e\u3002 ios::ate \u6587\u4ef6\u6253\u5f00\u540e\u5b9a\u4f4d\u5230\u6587\u4ef6\u672b\u5c3e\u3002 ios::in \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u3002 ios::out \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u5199\u5165\u3002 ios::trunc \u5982\u679c\u8be5\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\uff0c\u5176\u5185\u5bb9\u5c06\u5728\u6253\u5f00\u6587\u4ef6\u4e4b\u524d\u88ab\u622a\u65ad\uff0c\u5373\u628a\u6587\u4ef6\u957f\u5ea6\u8bbe\u4e3a 0\u3002 <p>\u60a8\u53ef\u4ee5\u628a\u4ee5\u4e0a\u4e24\u79cd\u6216\u4e24\u79cd\u4ee5\u4e0a\u7684\u6a21\u5f0f\u7ed3\u5408\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u60f3\u8981\u4ee5\u5199\u5165\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5e0c\u671b\u622a\u65ad\u6587\u4ef6\uff0c\u4ee5\u9632\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8bed\u6cd5\uff1a</p> <pre><code>ofstream outfile;\noutfile.open(\"file.dat\", ios::out | ios::trunc );\n</code></pre> <p>\u7c7b\u4f3c\u5730\uff0c\u60a8\u5982\u679c\u60f3\u8981\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u7528\u4e8e\u8bfb\u5199\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8bed\u6cd5\uff1a</p> <pre><code>ifstream  afile;\nafile.open(\"file.dat\", ios::out | ios::in );\n</code></pre>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_2","title":"\u5173\u95ed\u6587\u4ef6","text":"<p>\u5f53 C++ \u7a0b\u5e8f\u7ec8\u6b62\u65f6\uff0c\u5b83\u4f1a\u81ea\u52a8\u5173\u95ed\u5237\u65b0\u6240\u6709\u6d41\uff0c\u91ca\u653e\u6240\u6709\u5206\u914d\u7684\u5185\u5b58\uff0c\u5e76\u5173\u95ed\u6240\u6709\u6253\u5f00\u7684\u6587\u4ef6\u3002\u4f46\u7a0b\u5e8f\u5458\u5e94\u8be5\u517b\u6210\u4e00\u4e2a\u597d\u4e60\u60ef\uff0c\u5728\u7a0b\u5e8f\u7ec8\u6b62\u524d\u5173\u95ed\u6240\u6709\u6253\u5f00\u7684\u6587\u4ef6\u3002</p> <p>\u4e0b\u9762\u662f close() \u51fd\u6570\u7684\u6807\u51c6\u8bed\u6cd5\uff0cclose() \u51fd\u6570\u662f fstream\u3001ifstream \u548c ofstream \u5bf9\u8c61\u7684\u4e00\u4e2a\u6210\u5458\u3002</p> <pre><code>void close();\n</code></pre>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_3","title":"\u5199\u5165\u6587\u4ef6","text":"<p>\u5728 C++ \u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6d41\u63d2\u5165\u8fd0\u7b97\u7b26\uff08 &lt;&lt; \uff09\u5411\u6587\u4ef6\u5199\u5165\u4fe1\u606f\uff0c\u5c31\u50cf\u4f7f\u7528\u8be5\u8fd0\u7b97\u7b26\u8f93\u51fa\u4fe1\u606f\u5230\u5c4f\u5e55\u4e0a\u4e00\u6837\u3002\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff0c\u5728\u8fd9\u91cc\u60a8\u4f7f\u7528\u7684\u662f ofstream \u6216 fstream \u5bf9\u8c61\uff0c\u800c\u4e0d\u662f cout \u5bf9\u8c61\u3002</p>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_4","title":"\u8bfb\u53d6\u6587\u4ef6","text":"<p>\u5728 C++ \u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6d41\u63d0\u53d6\u8fd0\u7b97\u7b26\uff08 &gt;&gt; \uff09\u4ece\u6587\u4ef6\u8bfb\u53d6\u4fe1\u606f\uff0c\u5c31\u50cf\u4f7f\u7528\u8be5\u8fd0\u7b97\u7b26\u4ece\u952e\u76d8\u8f93\u5165\u4fe1\u606f\u4e00\u6837\u3002\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff0c\u5728\u8fd9\u91cc\u60a8\u4f7f\u7528\u7684\u662f ifstream \u6216 fstream \u5bf9\u8c61\uff0c\u800c\u4e0d\u662f cin \u5bf9\u8c61\u3002</p>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_5","title":"\u8bfb\u53d6 &amp; \u5199\u5165\u5b9e\u4f8b","text":"<p>\u4e0b\u9762\u7684 C++ \u7a0b\u5e8f\u4ee5\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u3002\u5728\u5411\u6587\u4ef6 afile.dat \u5199\u5165\u7528\u6237\u8f93\u5165\u7684\u4fe1\u606f\u4e4b\u540e\uff0c\u7a0b\u5e8f\u4ece\u6587\u4ef6\u8bfb\u53d6\u4fe1\u606f\uff0c\u5e76\u5c06\u5176\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\uff1a</p>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_6","title":"\u5b9e\u4f8b","text":"<pre><code>#include &lt;fstream&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nint main ()\n{\nchar data[100];\n// \u4ee5\u5199\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\nofstream outfile;\noutfile.open(\"afile.dat\");\ncout &lt;&lt; \"Writing to the file\" &lt;&lt; endl;\ncout &lt;&lt; \"Enter your name: \"; cin.getline(data, 100);\n// \u5411\u6587\u4ef6\u5199\u5165\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\noutfile &lt;&lt; data &lt;&lt; endl;\ncout &lt;&lt; \"Enter your age: \"; cin &gt;&gt; data;\ncin.ignore();\n// \u518d\u6b21\u5411\u6587\u4ef6\u5199\u5165\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\noutfile &lt;&lt; data &lt;&lt; endl;\n// \u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6\noutfile.close();\n// \u4ee5\u8bfb\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\nifstream infile; infile.open(\"afile.dat\"); cout &lt;&lt; \"Reading from the file\" &lt;&lt; endl; infile &gt;&gt; data; // \u5728\u5c4f\u5e55\u4e0a\u5199\u5165\u6570\u636e\ncout &lt;&lt; data &lt;&lt; endl;\n// \u518d\u6b21\u4ece\u6587\u4ef6\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u663e\u793a\u5b83\ninfile &gt;&gt; data; cout &lt;&lt; data &lt;&lt; endl; // \u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6\ninfile.close();\nreturn 0;\n}\n</code></pre> <p>\u5f53\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u7f16\u8bd1\u548c\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4e0b\u5217\u8f93\u5165\u548c\u8f93\u51fa\uff1a</p> <pre><code>$./a.out\nWriting to the file\nEnter your name: Zara\nEnter your age: 9\nReading from the file\nZara\n9\n</code></pre> <p>\u4e0a\u9762\u7684\u5b9e\u4f8b\u4e2d\u4f7f\u7528\u4e86 cin \u5bf9\u8c61\u7684\u9644\u52a0\u51fd\u6570\uff0c\u6bd4\u5982 getline()\u51fd\u6570\u4ece\u5916\u90e8\u8bfb\u53d6\u4e00\u884c\uff0cignore() \u51fd\u6570\u4f1a\u5ffd\u7565\u6389\u4e4b\u524d\u8bfb\u8bed\u53e5\u7559\u4e0b\u7684\u591a\u4f59\u5b57\u7b26\u3002</p>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_7","title":"\u6587\u4ef6\u4f4d\u7f6e\u6307\u9488","text":"<p>istream \u548c ostream \u90fd\u63d0\u4f9b\u4e86\u7528\u4e8e\u91cd\u65b0\u5b9a\u4f4d\u6587\u4ef6\u4f4d\u7f6e\u6307\u9488\u7684\u6210\u5458\u51fd\u6570\u3002\u8fd9\u4e9b\u6210\u5458\u51fd\u6570\u5305\u62ec\u5173\u4e8e istream \u7684 seekg\uff08\"seek get\"\uff09\u548c\u5173\u4e8e ostream \u7684 seekp\uff08\"seek put\"\uff09\u3002</p> <p>seekg \u548c seekp \u7684\u53c2\u6570\u901a\u5e38\u662f\u4e00\u4e2a\u957f\u6574\u578b\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u53ef\u4ee5\u7528\u4e8e\u6307\u5b9a\u67e5\u627e\u65b9\u5411\u3002\u67e5\u627e\u65b9\u5411\u53ef\u4ee5\u662f ios::beg\uff08\u9ed8\u8ba4\u7684\uff0c\u4ece\u6d41\u7684\u5f00\u5934\u5f00\u59cb\u5b9a\u4f4d\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f ios::cur\uff08\u4ece\u6d41\u7684\u5f53\u524d\u4f4d\u7f6e\u5f00\u59cb\u5b9a\u4f4d\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f ios::end\uff08\u4ece\u6d41\u7684\u672b\u5c3e\u5f00\u59cb\u5b9a\u4f4d\uff09\u3002</p> <p>\u6587\u4ef6\u4f4d\u7f6e\u6307\u9488\u662f\u4e00\u4e2a\u6574\u6570\u503c\uff0c\u6307\u5b9a\u4e86\u4ece\u6587\u4ef6\u7684\u8d77\u59cb\u4f4d\u7f6e\u5230\u6307\u9488\u6240\u5728\u4f4d\u7f6e\u7684\u5b57\u8282\u6570\u3002\u4e0b\u9762\u662f\u5173\u4e8e\u5b9a\u4f4d \"get\" \u6587\u4ef6\u4f4d\u7f6e\u6307\u9488\u7684\u5b9e\u4f8b\uff1a</p> <pre><code>// \u5b9a\u4f4d\u5230 fileObject \u7684\u7b2c n \u4e2a\u5b57\u8282\uff08\u5047\u8bbe\u662f ios::beg\uff09\nfileObject.seekg( n );\n// \u628a\u6587\u4ef6\u7684\u8bfb\u6307\u9488\u4ece fileObject \u5f53\u524d\u4f4d\u7f6e\u5411\u540e\u79fb n \u4e2a\u5b57\u8282\nfileObject.seekg( n, ios::cur );\n// \u628a\u6587\u4ef6\u7684\u8bfb\u6307\u9488\u4ece fileObject \u672b\u5c3e\u5f80\u56de\u79fb n \u4e2a\u5b57\u8282\nfileObject.seekg( n, ios::end );\n// \u5b9a\u4f4d\u5230 fileObject \u7684\u672b\u5c3e\nfileObject.seekg( 0, ios::end );\n</code></pre>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#c_1","title":"C++ \u5f02\u5e38\u5904\u7406","text":"<p>\u5f02\u5e38\u662f\u7a0b\u5e8f\u5728\u6267\u884c\u671f\u95f4\u4ea7\u751f\u7684\u95ee\u9898\u3002C++ \u5f02\u5e38\u662f\u6307\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53d1\u751f\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u6bd4\u5982\u5c1d\u8bd5\u9664\u4ee5\u96f6\u7684\u64cd\u4f5c\u3002</p> <p>\u5f02\u5e38\u63d0\u4f9b\u4e86\u4e00\u79cd\u8f6c\u79fb\u7a0b\u5e8f\u63a7\u5236\u6743\u7684\u65b9\u5f0f\u3002C++ \u5f02\u5e38\u5904\u7406\u6d89\u53ca\u5230\u4e09\u4e2a\u5173\u952e\u5b57\uff1atry\u3001catch\u3001throw\u3002</p> <ul> <li>throw: \u5f53\u95ee\u9898\u51fa\u73b0\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002\u8fd9\u662f\u901a\u8fc7\u4f7f\u7528 throw \u5173\u952e\u5b57\u6765\u5b8c\u6210\u7684\u3002</li> <li>catch: \u5728\u60a8\u60f3\u8981\u5904\u7406\u95ee\u9898\u7684\u5730\u65b9\uff0c\u901a\u8fc7\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u6355\u83b7\u5f02\u5e38\u3002catch \u5173\u952e\u5b57\u7528\u4e8e\u6355\u83b7\u5f02\u5e38\u3002</li> <li>try: try \u5757\u4e2d\u7684\u4ee3\u7801\u6807\u8bc6\u5c06\u88ab\u6fc0\u6d3b\u7684\u7279\u5b9a\u5f02\u5e38\u3002\u5b83\u540e\u9762\u901a\u5e38\u8ddf\u7740\u4e00\u4e2a\u6216\u591a\u4e2a catch \u5757\u3002</li> </ul> <p>\u5982\u679c\u6709\u4e00\u4e2a\u5757\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u6355\u83b7\u5f02\u5e38\u7684\u65b9\u6cd5\u4f1a\u4f7f\u7528 try \u548c catch \u5173\u952e\u5b57\u3002try \u5757\u4e2d\u653e\u7f6e\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u4ee3\u7801\uff0ctry \u5757\u4e2d\u7684\u4ee3\u7801\u88ab\u79f0\u4e3a\u4fdd\u62a4\u4ee3\u7801\u3002\u4f7f\u7528 try/catch \u8bed\u53e5\u7684\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>try\n{\n// \u4fdd\u62a4\u4ee3\u7801\n}catch( ExceptionName e1 )\n{\n// catch \u5757\n}catch( ExceptionName e2 )\n{\n// catch \u5757\n}catch( ExceptionName eN )\n{\n// catch \u5757\n}\n</code></pre> <p>\u5982\u679c try \u5757\u5728\u4e0d\u540c\u7684\u60c5\u5883\u4e0b\u4f1a\u629b\u51fa\u4e0d\u540c\u7684\u5f02\u5e38\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u5c1d\u8bd5\u7f57\u5217\u591a\u4e2a catch \u8bed\u53e5\uff0c\u7528\u4e8e\u6355\u83b7\u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u5e38\u3002</p>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_8","title":"\u629b\u51fa\u5f02\u5e38","text":"<p>\u60a8\u53ef\u4ee5\u4f7f\u7528 throw \u8bed\u53e5\u5728\u4ee3\u7801\u5757\u4e2d\u7684\u4efb\u4f55\u5730\u65b9\u629b\u51fa\u5f02\u5e38\u3002throw \u8bed\u53e5\u7684\u64cd\u4f5c\u6570\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u7684\u7c7b\u578b\u51b3\u5b9a\u4e86\u629b\u51fa\u7684\u5f02\u5e38\u7684\u7c7b\u578b\u3002</p> <p>\u4ee5\u4e0b\u662f\u5c1d\u8bd5\u9664\u4ee5\u96f6\u65f6\u629b\u51fa\u5f02\u5e38\u7684\u5b9e\u4f8b\uff1a</p> <pre><code>double division(int a, int b)\n{\nif( b == 0 )\n{\nthrow \"Division by zero condition!\";\n}\nreturn (a/b);\n}\n</code></pre>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_9","title":"\u6355\u83b7\u5f02\u5e38","text":"<p>catch \u5757\u8ddf\u5728 try \u5757\u540e\u9762\uff0c\u7528\u4e8e\u6355\u83b7\u5f02\u5e38\u3002\u60a8\u53ef\u4ee5\u6307\u5b9a\u60f3\u8981\u6355\u6349\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u8fd9\u662f\u7531 catch \u5173\u952e\u5b57\u540e\u7684\u62ec\u53f7\u5185\u7684\u5f02\u5e38\u58f0\u660e\u51b3\u5b9a\u7684\u3002</p> <pre><code>try\n{\n// \u4fdd\u62a4\u4ee3\u7801\n}catch( ExceptionName e )\n{\n// \u5904\u7406 ExceptionName \u5f02\u5e38\u7684\u4ee3\u7801\n}\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u6355\u83b7\u4e00\u4e2a\u7c7b\u578b\u4e3a ExceptionName \u7684\u5f02\u5e38\u3002\u5982\u679c\u60a8\u60f3\u8ba9 catch \u5757\u80fd\u591f\u5904\u7406 try \u5757\u629b\u51fa\u7684\u4efb\u4f55\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u5219\u5fc5\u987b\u5728\u5f02\u5e38\u58f0\u660e\u7684\u62ec\u53f7\u5185\u4f7f\u7528\u7701\u7565\u53f7 ...\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>try\n{\n// \u4fdd\u62a4\u4ee3\u7801\n}catch(...)\n{\n// \u80fd\u5904\u7406\u4efb\u4f55\u5f02\u5e38\u7684\u4ee3\u7801\n}\n</code></pre> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u629b\u51fa\u4e00\u4e2a\u9664\u4ee5\u96f6\u7684\u5f02\u5e38\uff0c\u5e76\u5728 catch \u5757\u4e2d\u6355\u83b7\u8be5\u5f02\u5e38\u3002</p>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_10","title":"\u5b9e\u4f8b","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\ndouble division(int a, int b)\n{\nif( b == 0 )\n{\nthrow \"Division by zero condition!\";\n}\nreturn (a/b);\n}\nint main ()\n{\nint x = 50;\nint y = 0;\ndouble z = 0;\ntry {\nz = division(x, y);\ncout &lt;&lt; z &lt;&lt; endl;\n}catch (const char* msg) {\ncerr &lt;&lt; msg &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre> <p>\u7531\u4e8e\u6211\u4eec\u629b\u51fa\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3a const char* \u7684\u5f02\u5e38\uff0c\u56e0\u6b64\uff0c\u5f53\u6355\u83b7\u8be5\u5f02\u5e38\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u5728 catch \u5757\u4e2d\u4f7f\u7528 const char*\u3002\u5f53\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u7f16\u8bd1\u548c\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4e0b\u5217\u7ed3\u679c\uff1a</p> <pre><code>Division by zero condition!\n</code></pre>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#c_2","title":"C++ \u6807\u51c6\u7684\u5f02\u5e38","text":"<p>C++ \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u6807\u51c6\u7684\u5f02\u5e38\uff0c\u5b9a\u4e49\u5728  \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u6807\u51c6\u7684\u5f02\u5e38\u3002\u5b83\u4eec\u662f\u4ee5\u7236\u5b50\u7c7b\u5c42\u6b21\u7ed3\u6784\u7ec4\u7ec7\u8d77\u6765\u7684\uff0c\u5982\u4e0b\u6240\u793a\uff1a <p></p> <p>\u4e0b\u8868\u662f\u5bf9\u4e0a\u9762\u5c42\u6b21\u7ed3\u6784\u4e2d\u51fa\u73b0\u7684\u6bcf\u4e2a\u5f02\u5e38\u7684\u8bf4\u660e\uff1a</p> \u5f02\u5e38 \u63cf\u8ff0 std::exception \u8be5\u5f02\u5e38\u662f\u6240\u6709\u6807\u51c6 C++ \u5f02\u5e38\u7684\u7236\u7c7b\u3002 std::bad_alloc \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7 new \u629b\u51fa\u3002 std::bad_cast \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7 dynamic_cast \u629b\u51fa\u3002 std::bad_typeid \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7 typeid \u629b\u51fa\u3002 std::bad_exception \u8fd9\u5728\u5904\u7406 C++ \u7a0b\u5e8f\u4e2d\u65e0\u6cd5\u9884\u671f\u7684\u5f02\u5e38\u65f6\u975e\u5e38\u6709\u7528\u3002 std::logic_error \u7406\u8bba\u4e0a\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u4ee3\u7801\u6765\u68c0\u6d4b\u5230\u7684\u5f02\u5e38\u3002 std::domain_error \u5f53\u4f7f\u7528\u4e86\u4e00\u4e2a\u65e0\u6548\u7684\u6570\u5b66\u57df\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002 std::invalid_argument \u5f53\u4f7f\u7528\u4e86\u65e0\u6548\u7684\u53c2\u6570\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002 std::length_error \u5f53\u521b\u5efa\u4e86\u592a\u957f\u7684 std::string \u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002 std::out_of_range \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u629b\u51fa\uff0c\u4f8b\u5982 std::vector \u548c std::bitset&lt;&gt;::operator\u3002 std::runtime_error \u7406\u8bba\u4e0a\u4e0d\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u4ee3\u7801\u6765\u68c0\u6d4b\u5230\u7684\u5f02\u5e38\u3002 std::overflow_error \u5f53\u53d1\u751f\u6570\u5b66\u4e0a\u6ea2\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002 std::range_error \u5f53\u5c1d\u8bd5\u5b58\u50a8\u8d85\u51fa\u8303\u56f4\u7684\u503c\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002 std::underflow_error \u5f53\u53d1\u751f\u6570\u5b66\u4e0b\u6ea2\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_11","title":"\u5b9a\u4e49\u65b0\u7684\u5f02\u5e38","text":"<p>\u60a8\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f\u548c\u91cd\u8f7d exception \u7c7b\u6765\u5b9a\u4e49\u65b0\u7684\u5f02\u5e38\u3002\u4e0b\u9762\u7684\u5b9e\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 std::exception \u7c7b\u6765\u5b9e\u73b0\u81ea\u5df1\u7684\u5f02\u5e38\uff1a</p>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_12","title":"\u5b9e\u4f8b","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;exception&gt;\nusing namespace std;\nstruct MyException : public exception\n{\nconst char * what () const throw ()\n{\nreturn \"C++ Exception\";\n}\n};\nint main()\n{\ntry\n{\nthrow MyException();\n}\ncatch(MyException&amp; e)\n{\nstd::cout &lt;&lt; \"MyException caught\" &lt;&lt; std::endl;\nstd::cout &lt;&lt; e.what() &lt;&lt; std::endl;\n}\ncatch(std::exception&amp; e)\n{\n//\u5176\u4ed6\u7684\u9519\u8bef\n}\n}\n</code></pre> <p>\u8fd9\u5c06\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a</p> <pre><code>MyException caught\nC++ Exception\n</code></pre> <p>\u5728\u8fd9\u91cc\uff0cwhat() \u662f\u5f02\u5e38\u7c7b\u63d0\u4f9b\u7684\u4e00\u4e2a\u516c\u5171\u65b9\u6cd5\uff0c\u5b83\u5df2\u88ab\u6240\u6709\u5b50\u5f02\u5e38\u7c7b\u91cd\u8f7d\u3002\u8fd9\u5c06\u8fd4\u56de\u5f02\u5e38\u4ea7\u751f\u7684\u539f\u56e0\u3002</p> <p>\u5f02\u5e38\u89c4\u8303\u58f0\u660e\uff1a</p> <pre><code>enum ERROR{UnderFlow,OverFlow};\n</code></pre>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#c_3","title":"C++ \u6a21\u677f","text":"<p>\u6a21\u677f\u662f\u6cdb\u578b\u7f16\u7a0b\u7684\u57fa\u7840\uff0c\u6cdb\u578b\u7f16\u7a0b\u5373\u4ee5\u4e00\u79cd\u72ec\u7acb\u4e8e\u4efb\u4f55\u7279\u5b9a\u7c7b\u578b\u7684\u65b9\u5f0f\u7f16\u5199\u4ee3\u7801\u3002</p> <p>\u6a21\u677f\u662f\u521b\u5efa\u6cdb\u578b\u7c7b\u6216\u51fd\u6570\u7684\u84dd\u56fe\u6216\u516c\u5f0f\u3002\u5e93\u5bb9\u5668\uff0c\u6bd4\u5982\u8fed\u4ee3\u5668\u548c\u7b97\u6cd5\uff0c\u90fd\u662f\u6cdb\u578b\u7f16\u7a0b\u7684\u4f8b\u5b50\uff0c\u5b83\u4eec\u90fd\u4f7f\u7528\u4e86\u6a21\u677f\u7684\u6982\u5ff5\u3002</p> <p>\u6bcf\u4e2a\u5bb9\u5668\u90fd\u6709\u4e00\u4e2a\u5355\u4e00\u7684\u5b9a\u4e49\uff0c\u6bd4\u5982 \u5411\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u5411\u91cf\uff0c\u6bd4\u5982 vector  \u6216 vector \u3002 <p>\u60a8\u53ef\u4ee5\u4f7f\u7528\u6a21\u677f\u6765\u5b9a\u4e49\u51fd\u6570\u548c\u7c7b\uff0c\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u4e00\u8d77\u6765\u770b\u770b\u5982\u4f55\u4f7f\u7528\u3002</p>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_13","title":"\u51fd\u6570\u6a21\u677f","text":"<p>\u6a21\u677f\u51fd\u6570\u5b9a\u4e49\u7684\u4e00\u822c\u5f62\u5f0f\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>template &lt;typename type&gt; ret-type func-name(parameter list) {   // \u51fd\u6570\u7684\u4e3b\u4f53 \n}\n</code></pre> <p>\u5728\u8fd9\u91cc\uff0ctype \u662f\u51fd\u6570\u6240\u4f7f\u7528\u7684\u6570\u636e\u7c7b\u578b\u7684\u5360\u4f4d\u7b26\u540d\u79f0\u3002\u8fd9\u4e2a\u540d\u79f0\u53ef\u4ee5\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u4f7f\u7528\u3002</p> <p>\u4e0b\u9762\u662f\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u503c\uff1a</p>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_14","title":"\u5b9e\u4f8b","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\ntemplate &lt;typename T&gt;\ninline T const&amp; Max (T const&amp; a, T const&amp; b) { return a &lt; b ? b:a; } int main ()\n{\nint i = 39;\nint j = 20;\ncout &lt;&lt; \"Max(i, j): \" &lt;&lt; Max(i, j) &lt;&lt; endl; double f1 = 13.5; double f2 = 20.7; cout &lt;&lt; \"Max(f1, f2): \" &lt;&lt; Max(f1, f2) &lt;&lt; endl; string s1 = \"Hello\"; string s2 = \"World\"; cout &lt;&lt; \"Max(s1, s2): \" &lt;&lt; Max(s1, s2) &lt;&lt; endl; return 0;\n}\n</code></pre> <p>\u5f53\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u7f16\u8bd1\u548c\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4e0b\u5217\u7ed3\u679c\uff1a</p> <pre><code>Max(i, j): 39\nMax(f1, f2): 20.7\nMax(s1, s2): World\n</code></pre>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_15","title":"\u7c7b\u6a21\u677f","text":"<p>\u6b63\u5982\u6211\u4eec\u5b9a\u4e49\u51fd\u6570\u6a21\u677f\u4e00\u6837\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u7c7b\u6a21\u677f\u3002\u6cdb\u578b\u7c7b\u58f0\u660e\u7684\u4e00\u822c\u5f62\u5f0f\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>template &lt;class type&gt; class class-name {\n.\n.\n.\n}\n</code></pre> <p>\u5728\u8fd9\u91cc\uff0ctype \u662f\u5360\u4f4d\u7b26\u7c7b\u578b\u540d\u79f0\uff0c\u53ef\u4ee5\u5728\u7c7b\u88ab\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u8fdb\u884c\u6307\u5b9a\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u9017\u53f7\u5206\u9694\u7684\u5217\u8868\u6765\u5b9a\u4e49\u591a\u4e2a\u6cdb\u578b\u6570\u636e\u7c7b\u578b\u3002</p> <p>\u4e0b\u9762\u7684\u5b9e\u4f8b\u5b9a\u4e49\u4e86\u7c7b Stack&lt;&gt;\uff0c\u5e76\u5b9e\u73b0\u4e86\u6cdb\u578b\u65b9\u6cd5\u6765\u5bf9\u5143\u7d20\u8fdb\u884c\u5165\u6808\u51fa\u6808\u64cd\u4f5c\uff1a</p>"},{"location":"class-OOP/OOP%E5%90%8E%E7%AF%87/#_16","title":"\u5b9e\u4f8b","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;cstdlib&gt;\n#include &lt;string&gt;\n#include &lt;stdexcept&gt;\nusing namespace std;\ntemplate &lt;class T&gt;\nclass Stack { private: vector&lt;T&gt; elems;     // \u5143\u7d20 \npublic: void push(T const&amp;);  // \u5165\u6808\nvoid pop();               // \u51fa\u6808\nT top() const;            // \u8fd4\u56de\u6808\u9876\u5143\u7d20\nbool empty() const{       // \u5982\u679c\u4e3a\u7a7a\u5219\u8fd4\u56de\u771f\u3002\nreturn elems.empty(); } }; template &lt;class T&gt;\nvoid Stack&lt;T&gt;::push (T const&amp; elem) { // \u8ffd\u52a0\u4f20\u5165\u5143\u7d20\u7684\u526f\u672c\nelems.push_back(elem);    } template &lt;class T&gt;\nvoid Stack&lt;T&gt;::pop () { if (elems.empty()) { throw out_of_range(\"Stack&lt;&gt;::pop(): empty stack\"); }\n// \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\nelems.pop_back();         } template &lt;class T&gt;\nT Stack&lt;T&gt;::top () const { if (elems.empty()) { throw out_of_range(\"Stack&lt;&gt;::top(): empty stack\"); }\n// \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u526f\u672c \nreturn elems.back();      } int main() { try { Stack&lt;int&gt;         intStack;  // int \u7c7b\u578b\u7684\u6808 \nStack&lt;string&gt; stringStack;    // string \u7c7b\u578b\u7684\u6808 \n// \u64cd\u4f5c int \u7c7b\u578b\u7684\u6808 \nintStack.push(7); cout &lt;&lt; intStack.top() &lt;&lt;endl; // \u64cd\u4f5c string \u7c7b\u578b\u7684\u6808 \nstringStack.push(\"hello\"); cout &lt;&lt; stringStack.top() &lt;&lt; std::endl; stringStack.pop(); stringStack.pop(); } catch (exception const&amp; ex) { cerr &lt;&lt; \"Exception: \" &lt;&lt; ex.what() &lt;&lt;endl; return -1;\n} }\n</code></pre> <p>\u5f53\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u7f16\u8bd1\u548c\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4e0b\u5217\u7ed3\u679c\uff1a</p> <pre><code>7\nhello\nException: Stack&lt;&gt;::pop(): empty stack\n</code></pre>"},{"location":"class-OOP/%E5%BC%82%E5%B8%B8/","title":"C++ \u5f02\u5e38\u5904\u7406","text":"<p>\u5f02\u5e38\u662f\u7a0b\u5e8f\u5728\u6267\u884c\u671f\u95f4\u4ea7\u751f\u7684\u95ee\u9898\u3002C++ \u5f02\u5e38\u662f\u6307\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53d1\u751f\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u6bd4\u5982\u5c1d\u8bd5\u9664\u4ee5\u96f6\u7684\u64cd\u4f5c\u3002</p> <p>\u5f02\u5e38\u63d0\u4f9b\u4e86\u4e00\u79cd\u8f6c\u79fb\u7a0b\u5e8f\u63a7\u5236\u6743\u7684\u65b9\u5f0f\u3002C++ \u5f02\u5e38\u5904\u7406\u6d89\u53ca\u5230\u4e09\u4e2a\u5173\u952e\u5b57\uff1atry\u3001catch\u3001throw\u3002</p> <ul> <li>throw: \u5f53\u95ee\u9898\u51fa\u73b0\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002\u8fd9\u662f\u901a\u8fc7\u4f7f\u7528 throw \u5173\u952e\u5b57\u6765\u5b8c\u6210\u7684\u3002</li> <li>catch: \u5728\u60a8\u60f3\u8981\u5904\u7406\u95ee\u9898\u7684\u5730\u65b9\uff0c\u901a\u8fc7\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u6355\u83b7\u5f02\u5e38\u3002catch \u5173\u952e\u5b57\u7528\u4e8e\u6355\u83b7\u5f02\u5e38\u3002</li> <li>try: try \u5757\u4e2d\u7684\u4ee3\u7801\u6807\u8bc6\u5c06\u88ab\u6fc0\u6d3b\u7684\u7279\u5b9a\u5f02\u5e38\u3002\u5b83\u540e\u9762\u901a\u5e38\u8ddf\u7740\u4e00\u4e2a\u6216\u591a\u4e2a catch \u5757\u3002</li> </ul> <p>\u5982\u679c\u6709\u4e00\u4e2a\u5757\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u6355\u83b7\u5f02\u5e38\u7684\u65b9\u6cd5\u4f1a\u4f7f\u7528 try \u548c catch \u5173\u952e\u5b57\u3002try \u5757\u4e2d\u653e\u7f6e\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u4ee3\u7801\uff0ctry \u5757\u4e2d\u7684\u4ee3\u7801\u88ab\u79f0\u4e3a\u4fdd\u62a4\u4ee3\u7801\u3002\u4f7f\u7528 try/catch \u8bed\u53e5\u7684\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>try\n{\n// \u4fdd\u62a4\u4ee3\u7801\n}catch( ExceptionName e1 )\n{\n// catch \u5757\n}catch( ExceptionName e2 )\n{\n// catch \u5757\n}catch( ExceptionName eN )\n{\n// catch \u5757\n}\n</code></pre> <p>\u5982\u679c try \u5757\u5728\u4e0d\u540c\u7684\u60c5\u5883\u4e0b\u4f1a\u629b\u51fa\u4e0d\u540c\u7684\u5f02\u5e38\uff0c\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u5c1d\u8bd5\u7f57\u5217\u591a\u4e2a catch \u8bed\u53e5\uff0c\u7528\u4e8e\u6355\u83b7\u4e0d\u540c\u7c7b\u578b\u7684\u5f02\u5e38\u3002</p>"},{"location":"class-OOP/%E5%BC%82%E5%B8%B8/#_1","title":"\u629b\u51fa\u5f02\u5e38","text":"<p>\u60a8\u53ef\u4ee5\u4f7f\u7528 throw \u8bed\u53e5\u5728\u4ee3\u7801\u5757\u4e2d\u7684\u4efb\u4f55\u5730\u65b9\u629b\u51fa\u5f02\u5e38\u3002throw \u8bed\u53e5\u7684\u64cd\u4f5c\u6570\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u7684\u7c7b\u578b\u51b3\u5b9a\u4e86\u629b\u51fa\u7684\u5f02\u5e38\u7684\u7c7b\u578b\u3002</p> <p>\u4ee5\u4e0b\u662f\u5c1d\u8bd5\u9664\u4ee5\u96f6\u65f6\u629b\u51fa\u5f02\u5e38\u7684\u5b9e\u4f8b\uff1a</p> <pre><code>double division(int a, int b)\n{\nif( b == 0 )\n{\nthrow \"Division by zero condition!\";\n}\nreturn (a/b);\n}\n</code></pre>"},{"location":"class-OOP/%E5%BC%82%E5%B8%B8/#_2","title":"\u6355\u83b7\u5f02\u5e38","text":"<p>catch \u5757\u8ddf\u5728 try \u5757\u540e\u9762\uff0c\u7528\u4e8e\u6355\u83b7\u5f02\u5e38\u3002\u60a8\u53ef\u4ee5\u6307\u5b9a\u60f3\u8981\u6355\u6349\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u8fd9\u662f\u7531 catch \u5173\u952e\u5b57\u540e\u7684\u62ec\u53f7\u5185\u7684\u5f02\u5e38\u58f0\u660e\u51b3\u5b9a\u7684\u3002</p> <pre><code>try\n{\n// \u4fdd\u62a4\u4ee3\u7801\n}catch( ExceptionName e )\n{\n// \u5904\u7406 ExceptionName \u5f02\u5e38\u7684\u4ee3\u7801\n}\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u6355\u83b7\u4e00\u4e2a\u7c7b\u578b\u4e3a ExceptionName \u7684\u5f02\u5e38\u3002\u5982\u679c\u60a8\u60f3\u8ba9 catch \u5757\u80fd\u591f\u5904\u7406 try \u5757\u629b\u51fa\u7684\u4efb\u4f55\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u5219\u5fc5\u987b\u5728\u5f02\u5e38\u58f0\u660e\u7684\u62ec\u53f7\u5185\u4f7f\u7528\u7701\u7565\u53f7 ...\uff0c\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>try\n{\n// \u4fdd\u62a4\u4ee3\u7801\n}catch(...)\n{\n// \u80fd\u5904\u7406\u4efb\u4f55\u5f02\u5e38\u7684\u4ee3\u7801\n}\n</code></pre> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u629b\u51fa\u4e00\u4e2a\u9664\u4ee5\u96f6\u7684\u5f02\u5e38\uff0c\u5e76\u5728 catch \u5757\u4e2d\u6355\u83b7\u8be5\u5f02\u5e38\u3002</p>"},{"location":"class-OOP/%E5%BC%82%E5%B8%B8/#_3","title":"\u5b9e\u4f8b","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\ndouble division(int a, int b)\n{\nif( b == 0 )\n{\nthrow \"Division by zero condition!\";\n}\nreturn (a/b);\n}\nint main ()\n{\nint x = 50;\nint y = 0;\ndouble z = 0;\ntry {\nz = division(x, y);\ncout &lt;&lt; z &lt;&lt; endl;\n}catch (const char* msg) {\ncerr &lt;&lt; msg &lt;&lt; endl;\n}\nreturn 0;\n}\n</code></pre> <p>\u7531\u4e8e\u6211\u4eec\u629b\u51fa\u4e86\u4e00\u4e2a\u7c7b\u578b\u4e3a const char* \u7684\u5f02\u5e38\uff0c\u56e0\u6b64\uff0c\u5f53\u6355\u83b7\u8be5\u5f02\u5e38\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u5728 catch \u5757\u4e2d\u4f7f\u7528 const char*\u3002\u5f53\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u7f16\u8bd1\u548c\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4e0b\u5217\u7ed3\u679c\uff1a</p> <pre><code>Division by zero condition!\n</code></pre>"},{"location":"class-OOP/%E5%BC%82%E5%B8%B8/#c_1","title":"C++ \u6807\u51c6\u7684\u5f02\u5e38","text":"<p>C++ \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u6807\u51c6\u7684\u5f02\u5e38\uff0c\u5b9a\u4e49\u5728  \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u6807\u51c6\u7684\u5f02\u5e38\u3002\u5b83\u4eec\u662f\u4ee5\u7236\u5b50\u7c7b\u5c42\u6b21\u7ed3\u6784\u7ec4\u7ec7\u8d77\u6765\u7684\uff0c\u5982\u4e0b\u6240\u793a\uff1a <p></p> <p>\u4e0b\u8868\u662f\u5bf9\u4e0a\u9762\u5c42\u6b21\u7ed3\u6784\u4e2d\u51fa\u73b0\u7684\u6bcf\u4e2a\u5f02\u5e38\u7684\u8bf4\u660e\uff1a</p> \u5f02\u5e38 \u63cf\u8ff0 std::exception \u8be5\u5f02\u5e38\u662f\u6240\u6709\u6807\u51c6 C++ \u5f02\u5e38\u7684\u7236\u7c7b\u3002 std::bad_alloc \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7 new \u629b\u51fa\u3002 std::bad_cast \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7 dynamic_cast \u629b\u51fa\u3002 std::bad_typeid \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7 typeid \u629b\u51fa\u3002 std::bad_exception \u8fd9\u5728\u5904\u7406 C++ \u7a0b\u5e8f\u4e2d\u65e0\u6cd5\u9884\u671f\u7684\u5f02\u5e38\u65f6\u975e\u5e38\u6709\u7528\u3002 std::logic_error \u7406\u8bba\u4e0a\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u4ee3\u7801\u6765\u68c0\u6d4b\u5230\u7684\u5f02\u5e38\u3002 std::domain_error \u5f53\u4f7f\u7528\u4e86\u4e00\u4e2a\u65e0\u6548\u7684\u6570\u5b66\u57df\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002 std::invalid_argument \u5f53\u4f7f\u7528\u4e86\u65e0\u6548\u7684\u53c2\u6570\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002 std::length_error \u5f53\u521b\u5efa\u4e86\u592a\u957f\u7684 std::string \u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002 std::out_of_range \u8be5\u5f02\u5e38\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u629b\u51fa\uff0c\u4f8b\u5982 std::vector \u548c std::bitset&lt;&gt;::operator\u3002 std::runtime_error \u7406\u8bba\u4e0a\u4e0d\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u4ee3\u7801\u6765\u68c0\u6d4b\u5230\u7684\u5f02\u5e38\u3002 std::overflow_error \u5f53\u53d1\u751f\u6570\u5b66\u4e0a\u6ea2\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002 std::range_error \u5f53\u5c1d\u8bd5\u5b58\u50a8\u8d85\u51fa\u8303\u56f4\u7684\u503c\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002 std::underflow_error \u5f53\u53d1\u751f\u6570\u5b66\u4e0b\u6ea2\u65f6\uff0c\u4f1a\u629b\u51fa\u8be5\u5f02\u5e38\u3002"},{"location":"class-OOP/%E5%BC%82%E5%B8%B8/#_4","title":"\u5b9a\u4e49\u65b0\u7684\u5f02\u5e38","text":"<p>\u60a8\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f\u548c\u91cd\u8f7d exception \u7c7b\u6765\u5b9a\u4e49\u65b0\u7684\u5f02\u5e38\u3002\u4e0b\u9762\u7684\u5b9e\u4f8b\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528 std::exception \u7c7b\u6765\u5b9e\u73b0\u81ea\u5df1\u7684\u5f02\u5e38\uff1a</p>"},{"location":"class-OOP/%E5%BC%82%E5%B8%B8/#_5","title":"\u5b9e\u4f8b","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;exception&gt;\nusing namespace std;\nstruct MyException : public exception\n{\nconst char * what () const throw ()\n{\nreturn \"C++ Exception\";\n}\n};\nint main()\n{\ntry\n{\nthrow MyException();\n}\ncatch(MyException&amp; e)\n{\nstd::cout &lt;&lt; \"MyException caught\" &lt;&lt; std::endl;\nstd::cout &lt;&lt; e.what() &lt;&lt; std::endl;\n}\ncatch(std::exception&amp; e)\n{\n//\u5176\u4ed6\u7684\u9519\u8bef\n}\n}\n</code></pre> <p>\u8fd9\u5c06\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a</p> <pre><code>MyException caught\nC++ Exception\n</code></pre> <p>\u5728\u8fd9\u91cc\uff0cwhat() \u662f\u5f02\u5e38\u7c7b\u63d0\u4f9b\u7684\u4e00\u4e2a\u516c\u5171\u65b9\u6cd5\uff0c\u5b83\u5df2\u88ab\u6240\u6709\u5b50\u5f02\u5e38\u7c7b\u91cd\u8f7d\u3002\u8fd9\u5c06\u8fd4\u56de\u5f02\u5e38\u4ea7\u751f\u7684\u539f\u56e0\u3002</p> <p>\u5f02\u5e38\u89c4\u8303\u58f0\u660e\uff1a</p> <pre><code>enum ERROR{UnderFlow,OverFlow};\n</code></pre>"},{"location":"class-OOP/%E6%A8%A1%E6%9D%BF/","title":"C++ \u6a21\u677f","text":"<p>\u6a21\u677f\u662f\u6cdb\u578b\u7f16\u7a0b\u7684\u57fa\u7840\uff0c\u6cdb\u578b\u7f16\u7a0b\u5373\u4ee5\u4e00\u79cd\u72ec\u7acb\u4e8e\u4efb\u4f55\u7279\u5b9a\u7c7b\u578b\u7684\u65b9\u5f0f\u7f16\u5199\u4ee3\u7801\u3002</p> <p>\u6a21\u677f\u662f\u521b\u5efa\u6cdb\u578b\u7c7b\u6216\u51fd\u6570\u7684\u84dd\u56fe\u6216\u516c\u5f0f\u3002\u5e93\u5bb9\u5668\uff0c\u6bd4\u5982\u8fed\u4ee3\u5668\u548c\u7b97\u6cd5\uff0c\u90fd\u662f\u6cdb\u578b\u7f16\u7a0b\u7684\u4f8b\u5b50\uff0c\u5b83\u4eec\u90fd\u4f7f\u7528\u4e86\u6a21\u677f\u7684\u6982\u5ff5\u3002</p> <p>\u6bcf\u4e2a\u5bb9\u5668\u90fd\u6709\u4e00\u4e2a\u5355\u4e00\u7684\u5b9a\u4e49\uff0c\u6bd4\u5982 \u5411\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u8bb8\u591a\u4e0d\u540c\u7c7b\u578b\u7684\u5411\u91cf\uff0c\u6bd4\u5982 vector  \u6216 vector \u3002 <p>\u60a8\u53ef\u4ee5\u4f7f\u7528\u6a21\u677f\u6765\u5b9a\u4e49\u51fd\u6570\u548c\u7c7b\uff0c\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u4e00\u8d77\u6765\u770b\u770b\u5982\u4f55\u4f7f\u7528\u3002</p>"},{"location":"class-OOP/%E6%A8%A1%E6%9D%BF/#_1","title":"\u51fd\u6570\u6a21\u677f","text":"<p>\u6a21\u677f\u51fd\u6570\u5b9a\u4e49\u7684\u4e00\u822c\u5f62\u5f0f\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>template &lt;typename type&gt; ret-type func-name(parameter list) {   // \u51fd\u6570\u7684\u4e3b\u4f53 \n}\n</code></pre> <p>\u5728\u8fd9\u91cc\uff0ctype \u662f\u51fd\u6570\u6240\u4f7f\u7528\u7684\u6570\u636e\u7c7b\u578b\u7684\u5360\u4f4d\u7b26\u540d\u79f0\u3002\u8fd9\u4e2a\u540d\u79f0\u53ef\u4ee5\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u4f7f\u7528\u3002</p> <p>\u4e0b\u9762\u662f\u51fd\u6570\u6a21\u677f\u7684\u5b9e\u4f8b\uff0c\u8fd4\u56de\u4e24\u4e2a\u6570\u4e2d\u7684\u6700\u5927\u503c\uff1a</p>"},{"location":"class-OOP/%E6%A8%A1%E6%9D%BF/#_2","title":"\u5b9e\u4f8b","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\ntemplate &lt;typename T&gt;\ninline T const&amp; Max (T const&amp; a, T const&amp; b) { return a &lt; b ? b:a; } int main ()\n{\nint i = 39;\nint j = 20;\ncout &lt;&lt; \"Max(i, j): \" &lt;&lt; Max(i, j) &lt;&lt; endl; double f1 = 13.5; double f2 = 20.7; cout &lt;&lt; \"Max(f1, f2): \" &lt;&lt; Max(f1, f2) &lt;&lt; endl; string s1 = \"Hello\"; string s2 = \"World\"; cout &lt;&lt; \"Max(s1, s2): \" &lt;&lt; Max(s1, s2) &lt;&lt; endl; return 0;\n}\n</code></pre> <p>\u5f53\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u7f16\u8bd1\u548c\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4e0b\u5217\u7ed3\u679c\uff1a</p> <pre><code>Max(i, j): 39\nMax(f1, f2): 20.7\nMax(s1, s2): World\n</code></pre>"},{"location":"class-OOP/%E6%A8%A1%E6%9D%BF/#_3","title":"\u7c7b\u6a21\u677f","text":"<p>\u6b63\u5982\u6211\u4eec\u5b9a\u4e49\u51fd\u6570\u6a21\u677f\u4e00\u6837\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u7c7b\u6a21\u677f\u3002\u6cdb\u578b\u7c7b\u58f0\u660e\u7684\u4e00\u822c\u5f62\u5f0f\u5982\u4e0b\u6240\u793a\uff1a</p> <pre><code>template &lt;class type&gt; class class-name {\n.\n.\n.\n}\n</code></pre> <p>\u5728\u8fd9\u91cc\uff0ctype \u662f\u5360\u4f4d\u7b26\u7c7b\u578b\u540d\u79f0\uff0c\u53ef\u4ee5\u5728\u7c7b\u88ab\u5b9e\u4f8b\u5316\u7684\u65f6\u5019\u8fdb\u884c\u6307\u5b9a\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u9017\u53f7\u5206\u9694\u7684\u5217\u8868\u6765\u5b9a\u4e49\u591a\u4e2a\u6cdb\u578b\u6570\u636e\u7c7b\u578b\u3002</p> <p>\u4e0b\u9762\u7684\u5b9e\u4f8b\u5b9a\u4e49\u4e86\u7c7b Stack&lt;&gt;\uff0c\u5e76\u5b9e\u73b0\u4e86\u6cdb\u578b\u65b9\u6cd5\u6765\u5bf9\u5143\u7d20\u8fdb\u884c\u5165\u6808\u51fa\u6808\u64cd\u4f5c\uff1a</p>"},{"location":"class-OOP/%E6%A8%A1%E6%9D%BF/#_4","title":"\u5b9e\u4f8b","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;cstdlib&gt;\n#include &lt;string&gt;\n#include &lt;stdexcept&gt;\nusing namespace std;\ntemplate &lt;class T&gt;\nclass Stack { private: vector&lt;T&gt; elems;     // \u5143\u7d20 \npublic: void push(T const&amp;);  // \u5165\u6808\nvoid pop();               // \u51fa\u6808\nT top() const;            // \u8fd4\u56de\u6808\u9876\u5143\u7d20\nbool empty() const{       // \u5982\u679c\u4e3a\u7a7a\u5219\u8fd4\u56de\u771f\u3002\nreturn elems.empty(); } }; template &lt;class T&gt;\nvoid Stack&lt;T&gt;::push (T const&amp; elem) { // \u8ffd\u52a0\u4f20\u5165\u5143\u7d20\u7684\u526f\u672c\nelems.push_back(elem);    } template &lt;class T&gt;\nvoid Stack&lt;T&gt;::pop () { if (elems.empty()) { throw out_of_range(\"Stack&lt;&gt;::pop(): empty stack\"); }\n// \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\nelems.pop_back();         } template &lt;class T&gt;\nT Stack&lt;T&gt;::top () const { if (elems.empty()) { throw out_of_range(\"Stack&lt;&gt;::top(): empty stack\"); }\n// \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u526f\u672c \nreturn elems.back();      } int main() { try { Stack&lt;int&gt;         intStack;  // int \u7c7b\u578b\u7684\u6808 \nStack&lt;string&gt; stringStack;    // string \u7c7b\u578b\u7684\u6808 \n// \u64cd\u4f5c int \u7c7b\u578b\u7684\u6808 \nintStack.push(7); cout &lt;&lt; intStack.top() &lt;&lt;endl; // \u64cd\u4f5c string \u7c7b\u578b\u7684\u6808 \nstringStack.push(\"hello\"); cout &lt;&lt; stringStack.top() &lt;&lt; std::endl; stringStack.pop(); stringStack.pop(); } catch (exception const&amp; ex) { cerr &lt;&lt; \"Exception: \" &lt;&lt; ex.what() &lt;&lt;endl; return -1;\n} }\n</code></pre> <p>\u5f53\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u7f16\u8bd1\u548c\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4e0b\u5217\u7ed3\u679c\uff1a</p> <pre><code>7\nhello\nException: Stack&lt;&gt;::pop(): empty stack\n</code></pre>"},{"location":"class-OOP/%E6%B5%81/","title":"C++ \u6587\u4ef6\u548c\u6d41","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5df2\u7ecf\u4f7f\u7528\u4e86 iostream \u6807\u51c6\u5e93\uff0c\u5b83\u63d0\u4f9b\u4e86 cin \u548c cout \u65b9\u6cd5\u5206\u522b\u7528\u4e8e\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u53d6\u6d41\u548c\u5411\u6807\u51c6\u8f93\u51fa\u5199\u5165\u6d41\u3002</p> <p>\u672c\u6559\u7a0b\u4ecb\u7ecd\u5982\u4f55\u4ece\u6587\u4ef6\u8bfb\u53d6\u6d41\u548c\u5411\u6587\u4ef6\u5199\u5165\u6d41\u3002\u8fd9\u5c31\u9700\u8981\u7528\u5230 C++ \u4e2d\u53e6\u4e00\u4e2a\u6807\u51c6\u5e93 fstream\uff0c\u5b83\u5b9a\u4e49\u4e86\u4e09\u4e2a\u65b0\u7684\u6570\u636e\u7c7b\u578b\uff1a</p> \u6570\u636e\u7c7b\u578b \u63cf\u8ff0 ofstream \u8be5\u6570\u636e\u7c7b\u578b\u8868\u793a\u8f93\u51fa\u6587\u4ef6\u6d41\uff0c\u7528\u4e8e\u521b\u5efa\u6587\u4ef6\u5e76\u5411\u6587\u4ef6\u5199\u5165\u4fe1\u606f\u3002 ifstream \u8be5\u6570\u636e\u7c7b\u578b\u8868\u793a\u8f93\u5165\u6587\u4ef6\u6d41\uff0c\u7528\u4e8e\u4ece\u6587\u4ef6\u8bfb\u53d6\u4fe1\u606f\u3002 fstream \u8be5\u6570\u636e\u7c7b\u578b\u901a\u5e38\u8868\u793a\u6587\u4ef6\u6d41\uff0c\u4e14\u540c\u65f6\u5177\u6709 ofstream \u548c ifstream \u4e24\u79cd\u529f\u80fd\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u53ef\u4ee5\u521b\u5efa\u6587\u4ef6\uff0c\u5411\u6587\u4ef6\u5199\u5165\u4fe1\u606f\uff0c\u4ece\u6587\u4ef6\u8bfb\u53d6\u4fe1\u606f\u3002 <p>\u8981\u5728 C++ \u4e2d\u8fdb\u884c\u6587\u4ef6\u5904\u7406\uff0c\u5fc5\u987b\u5728 C++ \u6e90\u4ee3\u7801\u6587\u4ef6\u4e2d\u5305\u542b\u5934\u6587\u4ef6  \u548c \u3002"},{"location":"class-OOP/%E6%B5%81/#_1","title":"\u6253\u5f00\u6587\u4ef6","text":"<p>\u5728\u4ece\u6587\u4ef6\u8bfb\u53d6\u4fe1\u606f\u6216\u8005\u5411\u6587\u4ef6\u5199\u5165\u4fe1\u606f\u4e4b\u524d\uff0c\u5fc5\u987b\u5148\u6253\u5f00\u6587\u4ef6\u3002ofstream \u548c fstream \u5bf9\u8c61\u90fd\u53ef\u4ee5\u7528\u6765\u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u5982\u679c\u53ea\u9700\u8981\u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u8bfb\u64cd\u4f5c\uff0c\u5219\u4f7f\u7528 ifstream \u5bf9\u8c61\u3002</p> <p>\u4e0b\u9762\u662f open() \u51fd\u6570\u7684\u6807\u51c6\u8bed\u6cd5\uff0copen() \u51fd\u6570\u662f fstream\u3001ifstream \u548c ofstream \u5bf9\u8c61\u7684\u4e00\u4e2a\u6210\u5458\u3002</p> <pre><code>void open(const char *filename, ios::openmode mode);\n</code></pre> <p>\u5728\u8fd9\u91cc\uff0copen() \u6210\u5458\u51fd\u6570\u7684\u7b2c\u4e00\u53c2\u6570\u6307\u5b9a\u8981\u6253\u5f00\u7684\u6587\u4ef6\u7684\u540d\u79f0\u548c\u4f4d\u7f6e\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5b9a\u4e49\u6587\u4ef6\u88ab\u6253\u5f00\u7684\u6a21\u5f0f\u3002</p> \u6a21\u5f0f\u6807\u5fd7 \u63cf\u8ff0 ios::app \u8ffd\u52a0\u6a21\u5f0f\u3002\u6240\u6709\u5199\u5165\u90fd\u8ffd\u52a0\u5230\u6587\u4ef6\u672b\u5c3e\u3002 ios::ate \u6587\u4ef6\u6253\u5f00\u540e\u5b9a\u4f4d\u5230\u6587\u4ef6\u672b\u5c3e\u3002 ios::in \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u3002 ios::out \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u5199\u5165\u3002 ios::trunc \u5982\u679c\u8be5\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\uff0c\u5176\u5185\u5bb9\u5c06\u5728\u6253\u5f00\u6587\u4ef6\u4e4b\u524d\u88ab\u622a\u65ad\uff0c\u5373\u628a\u6587\u4ef6\u957f\u5ea6\u8bbe\u4e3a 0\u3002 <p>\u60a8\u53ef\u4ee5\u628a\u4ee5\u4e0a\u4e24\u79cd\u6216\u4e24\u79cd\u4ee5\u4e0a\u7684\u6a21\u5f0f\u7ed3\u5408\u4f7f\u7528\u3002\u4f8b\u5982\uff0c\u5982\u679c\u60a8\u60f3\u8981\u4ee5\u5199\u5165\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5e0c\u671b\u622a\u65ad\u6587\u4ef6\uff0c\u4ee5\u9632\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8bed\u6cd5\uff1a</p> <pre><code>ofstream outfile;\noutfile.open(\"file.dat\", ios::out | ios::trunc );\n</code></pre> <p>\u7c7b\u4f3c\u5730\uff0c\u60a8\u5982\u679c\u60f3\u8981\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u7528\u4e8e\u8bfb\u5199\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u8bed\u6cd5\uff1a</p> <pre><code>ifstream  afile;\nafile.open(\"file.dat\", ios::out | ios::in );\n</code></pre>"},{"location":"class-OOP/%E6%B5%81/#_2","title":"\u5173\u95ed\u6587\u4ef6","text":"<p>\u5f53 C++ \u7a0b\u5e8f\u7ec8\u6b62\u65f6\uff0c\u5b83\u4f1a\u81ea\u52a8\u5173\u95ed\u5237\u65b0\u6240\u6709\u6d41\uff0c\u91ca\u653e\u6240\u6709\u5206\u914d\u7684\u5185\u5b58\uff0c\u5e76\u5173\u95ed\u6240\u6709\u6253\u5f00\u7684\u6587\u4ef6\u3002\u4f46\u7a0b\u5e8f\u5458\u5e94\u8be5\u517b\u6210\u4e00\u4e2a\u597d\u4e60\u60ef\uff0c\u5728\u7a0b\u5e8f\u7ec8\u6b62\u524d\u5173\u95ed\u6240\u6709\u6253\u5f00\u7684\u6587\u4ef6\u3002</p> <p>\u4e0b\u9762\u662f close() \u51fd\u6570\u7684\u6807\u51c6\u8bed\u6cd5\uff0cclose() \u51fd\u6570\u662f fstream\u3001ifstream \u548c ofstream \u5bf9\u8c61\u7684\u4e00\u4e2a\u6210\u5458\u3002</p> <pre><code>void close();\n</code></pre>"},{"location":"class-OOP/%E6%B5%81/#_3","title":"\u5199\u5165\u6587\u4ef6","text":"<p>\u5728 C++ \u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6d41\u63d2\u5165\u8fd0\u7b97\u7b26\uff08 &lt;&lt; \uff09\u5411\u6587\u4ef6\u5199\u5165\u4fe1\u606f\uff0c\u5c31\u50cf\u4f7f\u7528\u8be5\u8fd0\u7b97\u7b26\u8f93\u51fa\u4fe1\u606f\u5230\u5c4f\u5e55\u4e0a\u4e00\u6837\u3002\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff0c\u5728\u8fd9\u91cc\u60a8\u4f7f\u7528\u7684\u662f ofstream \u6216 fstream \u5bf9\u8c61\uff0c\u800c\u4e0d\u662f cout \u5bf9\u8c61\u3002</p>"},{"location":"class-OOP/%E6%B5%81/#_4","title":"\u8bfb\u53d6\u6587\u4ef6","text":"<p>\u5728 C++ \u7f16\u7a0b\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u6d41\u63d0\u53d6\u8fd0\u7b97\u7b26\uff08 &gt;&gt; \uff09\u4ece\u6587\u4ef6\u8bfb\u53d6\u4fe1\u606f\uff0c\u5c31\u50cf\u4f7f\u7528\u8be5\u8fd0\u7b97\u7b26\u4ece\u952e\u76d8\u8f93\u5165\u4fe1\u606f\u4e00\u6837\u3002\u552f\u4e00\u4e0d\u540c\u7684\u662f\uff0c\u5728\u8fd9\u91cc\u60a8\u4f7f\u7528\u7684\u662f ifstream \u6216 fstream \u5bf9\u8c61\uff0c\u800c\u4e0d\u662f cin \u5bf9\u8c61\u3002</p>"},{"location":"class-OOP/%E6%B5%81/#_5","title":"\u8bfb\u53d6 &amp; \u5199\u5165\u5b9e\u4f8b","text":"<p>\u4e0b\u9762\u7684 C++ \u7a0b\u5e8f\u4ee5\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u3002\u5728\u5411\u6587\u4ef6 afile.dat \u5199\u5165\u7528\u6237\u8f93\u5165\u7684\u4fe1\u606f\u4e4b\u540e\uff0c\u7a0b\u5e8f\u4ece\u6587\u4ef6\u8bfb\u53d6\u4fe1\u606f\uff0c\u5e76\u5c06\u5176\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\uff1a</p>"},{"location":"class-OOP/%E6%B5%81/#_6","title":"\u5b9e\u4f8b","text":"<pre><code>#include &lt;fstream&gt;\n#include &lt;iostream&gt;\nusing namespace std;\nint main ()\n{\nchar data[100];\n// \u4ee5\u5199\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\nofstream outfile;\noutfile.open(\"afile.dat\");\ncout &lt;&lt; \"Writing to the file\" &lt;&lt; endl;\ncout &lt;&lt; \"Enter your name: \"; cin.getline(data, 100);\n// \u5411\u6587\u4ef6\u5199\u5165\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\noutfile &lt;&lt; data &lt;&lt; endl;\ncout &lt;&lt; \"Enter your age: \"; cin &gt;&gt; data;\ncin.ignore();\n// \u518d\u6b21\u5411\u6587\u4ef6\u5199\u5165\u7528\u6237\u8f93\u5165\u7684\u6570\u636e\noutfile &lt;&lt; data &lt;&lt; endl;\n// \u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6\noutfile.close();\n// \u4ee5\u8bfb\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\nifstream infile; infile.open(\"afile.dat\"); cout &lt;&lt; \"Reading from the file\" &lt;&lt; endl; infile &gt;&gt; data; // \u5728\u5c4f\u5e55\u4e0a\u5199\u5165\u6570\u636e\ncout &lt;&lt; data &lt;&lt; endl;\n// \u518d\u6b21\u4ece\u6587\u4ef6\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u663e\u793a\u5b83\ninfile &gt;&gt; data; cout &lt;&lt; data &lt;&lt; endl; // \u5173\u95ed\u6253\u5f00\u7684\u6587\u4ef6\ninfile.close();\nreturn 0;\n}\n</code></pre> <p>\u5f53\u4e0a\u9762\u7684\u4ee3\u7801\u88ab\u7f16\u8bd1\u548c\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4e0b\u5217\u8f93\u5165\u548c\u8f93\u51fa\uff1a</p> <pre><code>$./a.out\nWriting to the file\nEnter your name: Zara\nEnter your age: 9\nReading from the file\nZara\n9\n</code></pre> <p>\u4e0a\u9762\u7684\u5b9e\u4f8b\u4e2d\u4f7f\u7528\u4e86 cin \u5bf9\u8c61\u7684\u9644\u52a0\u51fd\u6570\uff0c\u6bd4\u5982 getline()\u51fd\u6570\u4ece\u5916\u90e8\u8bfb\u53d6\u4e00\u884c\uff0cignore() \u51fd\u6570\u4f1a\u5ffd\u7565\u6389\u4e4b\u524d\u8bfb\u8bed\u53e5\u7559\u4e0b\u7684\u591a\u4f59\u5b57\u7b26\u3002</p>"},{"location":"class-OOP/%E6%B5%81/#_7","title":"\u6587\u4ef6\u4f4d\u7f6e\u6307\u9488","text":"<p>istream \u548c ostream \u90fd\u63d0\u4f9b\u4e86\u7528\u4e8e\u91cd\u65b0\u5b9a\u4f4d\u6587\u4ef6\u4f4d\u7f6e\u6307\u9488\u7684\u6210\u5458\u51fd\u6570\u3002\u8fd9\u4e9b\u6210\u5458\u51fd\u6570\u5305\u62ec\u5173\u4e8e istream \u7684 seekg\uff08\"seek get\"\uff09\u548c\u5173\u4e8e ostream \u7684 seekp\uff08\"seek put\"\uff09\u3002</p> <p>seekg \u548c seekp \u7684\u53c2\u6570\u901a\u5e38\u662f\u4e00\u4e2a\u957f\u6574\u578b\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u53ef\u4ee5\u7528\u4e8e\u6307\u5b9a\u67e5\u627e\u65b9\u5411\u3002\u67e5\u627e\u65b9\u5411\u53ef\u4ee5\u662f ios::beg\uff08\u9ed8\u8ba4\u7684\uff0c\u4ece\u6d41\u7684\u5f00\u5934\u5f00\u59cb\u5b9a\u4f4d\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f ios::cur\uff08\u4ece\u6d41\u7684\u5f53\u524d\u4f4d\u7f6e\u5f00\u59cb\u5b9a\u4f4d\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f ios::end\uff08\u4ece\u6d41\u7684\u672b\u5c3e\u5f00\u59cb\u5b9a\u4f4d\uff09\u3002</p> <p>\u6587\u4ef6\u4f4d\u7f6e\u6307\u9488\u662f\u4e00\u4e2a\u6574\u6570\u503c\uff0c\u6307\u5b9a\u4e86\u4ece\u6587\u4ef6\u7684\u8d77\u59cb\u4f4d\u7f6e\u5230\u6307\u9488\u6240\u5728\u4f4d\u7f6e\u7684\u5b57\u8282\u6570\u3002\u4e0b\u9762\u662f\u5173\u4e8e\u5b9a\u4f4d \"get\" \u6587\u4ef6\u4f4d\u7f6e\u6307\u9488\u7684\u5b9e\u4f8b\uff1a</p> <pre><code>// \u5b9a\u4f4d\u5230 fileObject \u7684\u7b2c n \u4e2a\u5b57\u8282\uff08\u5047\u8bbe\u662f ios::beg\uff09\nfileObject.seekg( n );\n// \u628a\u6587\u4ef6\u7684\u8bfb\u6307\u9488\u4ece fileObject \u5f53\u524d\u4f4d\u7f6e\u5411\u540e\u79fb n \u4e2a\u5b57\u8282\nfileObject.seekg( n, ios::cur );\n// \u628a\u6587\u4ef6\u7684\u8bfb\u6307\u9488\u4ece fileObject \u672b\u5c3e\u5f80\u56de\u79fb n \u4e2a\u5b57\u8282\nfileObject.seekg( n, ios::end );\n// \u5b9a\u4f4d\u5230 fileObject \u7684\u672b\u5c3e\nfileObject.seekg( 0, ios::end );\n</code></pre>"},{"location":"others/LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/","title":"LaTeX Formula","text":""},{"location":"others/LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/#_1","title":"\u4e0a\u6807\u3001\u4e0b\u6807\u4e0e\u7ec4\u5408","text":"<ol> <li>\u4e0a\u6807\u7b26\u53f7\uff0c\u7b26\u53f7\uff1a<code>^</code>\uff0c\u5982\uff1a</li> <li>\u4e0b\u6807\u7b26\u53f7\uff0c\u7b26\u53f7\uff1a<code>_</code>\uff0c\u5982\uff1a</li> <li>\u7ec4\u5408\u7b26\u53f7\uff0c\u7b26\u53f7\uff1a<code>{}</code>\uff0c\u5982\uff1a</li> </ol>"},{"location":"others/LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/#_2","title":"\u6c49\u5b57\u3001\u5b57\u4f53\u4e0e\u683c\u5f0f","text":"<ol> <li>\u6c49\u5b57\u5f62\u5f0f\uff0c\u7b26\u53f7\uff1a<code>\\mbox{}</code>\uff0c\u5982\uff1a</li> <li>\u5b57\u4f53\u63a7\u5236\uff0c\u7b26\u53f7\uff1a<code>\\displaystyle</code>\uff0c\u5982\uff1a</li> <li>\u4e0b\u5212\u7ebf\u7b26\u53f7\uff0c\u7b26\u53f7\uff1a<code>\\underline</code>\uff0c\u5982\uff1a</li> <li>\u6807\u7b7e\uff0c\u7b26\u53f7<code>\\tag{\u6570\u5b57}</code>\uff0c\u5982\uff1a</li> <li>\u4e0a\u5927\u62ec\u53f7\uff0c\u7b26\u53f7\uff1a<code>\\overbrace{\u7b97\u5f0f}</code>\uff0c\u5982\uff1a</li> <li>\u4e0b\u5927\u62ec\u53f7\uff0c\u7b26\u53f7\uff1a<code>\\underbrace{\u7b97\u5f0f}</code>\uff0c\u5982\uff1a</li> <li>\u4e0a\u4f4d\u7b26\u53f7\uff0c\u7b26\u53f7\uff1a<code>\\stacrel{\u4e0a\u4f4d\u7b26\u53f7}{\u57fa\u4f4d\u7b26\u53f7}</code>\uff0c\u5982\uff1a</li> </ol>"},{"location":"others/LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/#_3","title":"\u5360\u4f4d\u7b26","text":"<ol> <li>\u4e24\u4e2aquad\u7a7a\u683c\uff0c\u7b26\u53f7\uff1a<code>\\qquad</code>\uff0c\u5982\uff1a</li> <li>quad\u7a7a\u683c\uff0c\u7b26\u53f7\uff1a<code>\\quad</code>\uff0c\u5982\uff1a</li> <li>\u5927\u7a7a\u683c\uff0c\u7b26\u53f7<code>\\</code>\uff0c\u5982\uff1a</li> <li>\u4e2d\u7a7a\u683c\uff0c\u7b26\u53f7<code>\\:</code>\uff0c\u5982\uff1a</li> <li>\u5c0f\u7a7a\u683c\uff0c\u7b26\u53f7<code>\\,</code>\uff0c\u5982\uff1a</li> <li>\u6ca1\u6709\u7a7a\u683c\uff0c\u7b26\u53f7``\uff0c\u5982\uff1a</li> <li>\u7d27\u8d34\uff0c\u7b26\u53f7<code>\\!</code>\uff0c\u5982\uff1a</li> </ol>"},{"location":"others/LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/#_4","title":"\u5b9a\u754c\u7b26\u4e0e\u7ec4\u5408","text":"<ol> <li>\u62ec\u53f7\uff0c\u7b26\u53f7\uff1a<code>\uff08\uff09\\big(\\big) \\Big(\\Big) \\bigg(\\bigg) \\Bigg(\\Bigg)</code>\uff0c\u5982\uff1a</li> <li>\u4e2d\u62ec\u53f7\uff0c\u7b26\u53f7\uff1a<code>[]</code>\uff0c\u5982\uff1a</li> <li>\u5927\u62ec\u53f7\uff0c\u7b26\u53f7\uff1a<code>\\{ \\}</code>\uff0c\u5982\uff1a</li> <li>\u81ea\u9002\u5e94\u62ec\u53f7\uff0c\u7b26\u53f7\uff1a<code>\\left \\right</code>\uff0c\u5982\uff1a\uff0c</li> <li>\u7ec4\u5408\u516c\u5f0f\uff0c\u7b26\u53f7\uff1a<code>{\u4e0a\u4f4d\u516c\u5f0f \\choose \u4e0b\u4f4d\u516c\u5f0f}</code>\uff0c\u5982\uff1a</li> <li>\u7ec4\u5408\u516c\u5f0f\uff0c\u7b26\u53f7\uff1a<code>{\u4e0a\u4f4d\u516c\u5f0f \\atop \u4e0b\u4f4d\u516c\u5f0f}</code>\uff0c\u5982\uff1a</li> </ol>"},{"location":"others/LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/#_5","title":"\u56db\u5219\u8fd0\u7b97","text":"<ol> <li>\u52a0\u6cd5\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>+</code>\uff0c\u5982\uff1a</li> <li>\u51cf\u6cd5\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>-</code>\uff0c\u5982\uff1a</li> <li>\u52a0\u51cf\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\pm</code>\uff0c\u5982\uff1a</li> <li>\u51cf\u7532\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\mp</code>\uff0c\u5982\uff1a</li> <li>\u4e58\u6cd5\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\times</code>\uff0c\u5982\uff1a</li> <li>\u70b9\u4e58\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\cdot</code>\uff0c\u5982\uff1a</li> <li>\u661f\u4e58\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\ast</code>\uff0c\u5982\uff1a</li> <li>\u9664\u6cd5\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\div</code>\uff0c\u5982\uff1a</li> <li>\u659c\u6cd5\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>/</code>\uff0c\u5982\uff1a</li> <li>\u5206\u5f0f\u8868\u793a\uff0c\u7b26\u53f7\uff1a<code>\\frac{\u5206\u5b50}{\u5206\u6bcd}</code>\uff0c\u5982\uff1a</li> <li>\u5206\u5f0f\u8868\u793a\uff0c\u7b26\u53f7\uff1a<code>{\u5206\u5b50} \\voer {\u5206\u6bcd}</code>\uff0c\u5982\uff1a</li> <li>\u7edd\u5bf9\u503c\u8868\u793a\uff0c\u7b26\u53f7\uff1a<code>||</code>\uff0c\u5982\uff1a</li> </ol>"},{"location":"others/LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/#_6","title":"\u9ad8\u7ea7\u8fd0\u7b97","text":"<ol> <li>\u5e73\u5747\u6570\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\overline{\u7b97\u5f0f}</code>\uff0c\u5982\uff1a</li> <li>\u5f00\u4e8c\u6b21\u65b9\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\sqrt</code>\uff0c\u5982\uff1a</li> <li>\u5f00\u65b9\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\sqrt[\u5f00\u65b9\u6570]{\u88ab\u5f00\u65b9\u6570}</code>\uff0c\u5982\uff1a</li> <li>\u5bf9\u6570\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\log</code>\uff0c\u5982\uff1a</li> <li>\u6781\u9650\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\lim</code>\uff0c\u5982\uff1a</li> <li>\u6781\u9650\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\displaystyle \\lim</code>\uff0c\u5982\uff1a</li> <li>\u6c42\u548c\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\sum</code>\uff0c\u5982\uff1a</li> <li>\u6c42\u548c\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\displaystyle \\sum</code>\uff0c\u5982\uff1a</li> <li>\u79ef\u5206\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\int</code>\uff0c\u5982\uff1a</li> <li>\u79ef\u5206\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\displaystyle \\int</code>\uff0c\u5982\uff1a</li> <li>\u5fae\u5206\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\partial</code>\uff0c\u5982\uff1a</li> <li>\u77e9\u9635\u8868\u793a\uff0c\u7b26\u53f7\uff1a<code>\\begin{matrix} \\end{matrix}</code>\uff0c\u5982\uff1a</li> </ol>"},{"location":"others/LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/#_7","title":"\u903b\u8f91\u8fd0\u7b97","text":"<ol> <li>\u7b49\u4e8e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>=</code>\uff0c\u5982\uff1a</li> <li>\u5927\u4e8e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>&gt;</code>\uff0c\u5982\uff1a</li> <li>\u5c0f\u4e8e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>&lt;</code>\uff0c\u5982\uff1a</li> <li>\u5927\u4e8e\u7b49\u4e8e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\geq</code>\uff0c\u5982\uff1a</li> <li>\u5c0f\u4e8e\u7b49\u4e8e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\leq</code>\uff0c\u5982\uff1a</li> <li>\u4e0d\u7b49\u4e8e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\neq</code>\uff0c\u5982\uff1a</li> <li>\u4e0d\u5927\u4e8e\u7b49\u4e8e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\ngeq</code>\uff0c\u5982\uff1a</li> <li>\u4e0d\u5927\u4e8e\u7b49\u4e8e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\not\\geq</code>\uff0c\u5982\uff1a</li> <li>\u4e0d\u5c0f\u4e8e\u7b49\u4e8e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\nleq</code>\uff0c\u5982\uff1a</li> <li>\u4e0d\u5c0f\u4e8e\u7b49\u4e8e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\not\\leq</code>\uff0c\u5982\uff1a</li> <li>\u7ea6\u7b49\u4e8e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\approx</code>\uff0c\u5982\uff1a</li> <li>\u6052\u5b9a\u7b49\u4e8e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\equiv</code>\uff0c\u5982\uff1a</li> </ol>"},{"location":"others/LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/#_8","title":"\u96c6\u5408\u8fd0\u7b97","text":"<ol> <li>\u5c5e\u4e8e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\in</code>\uff0c\u5982\uff1a</li> <li>\u4e0d\u5c5e\u4e8e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\notin</code>\uff0c\u5982\uff1a</li> <li>\u4e0d\u5c5e\u4e8e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\not\\in</code>\uff0c\u5982\uff1a</li> <li>\u5b50\u96c6\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\subset</code>\uff0c\u5982\uff1a</li> <li>\u5b50\u96c6\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\supset</code>\uff0c\u5982\uff1a</li> <li>\u771f\u5b50\u96c6\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\subseteq</code>\uff0c\u5982\uff1a</li> <li>\u975e\u771f\u5b50\u96c6\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\subsetneq</code>\uff0c\u5982\uff1a</li> <li>\u771f\u5b50\u96c6\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\supseteq</code>\uff0c\u5982\uff1a</li> <li>\u975e\u771f\u5b50\u96c6\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\supsetneq</code>\uff0c\u5982\uff1a</li> <li>\u975e\u5b50\u96c6\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\not\\subset</code>\uff0c\u5982\uff1a</li> <li>\u975e\u5b50\u96c6\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\not\\supset</code>\uff0c\u5982\uff1a</li> <li>\u5e76\u96c6\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\cup</code>\uff0c\u5982\uff1a</li> <li>\u4ea4\u96c6\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\cap</code>\uff0c\u5982\uff1a</li> <li>\u5dee\u96c6\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\setminus</code>\uff0c\u5982\uff1a</li> <li>\u540c\u6216\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\bigodot</code>\uff0c\u5982\uff1a</li> <li>\u540c\u4e0e\u8fd0\u7b97\uff0c\u7b26\u53f7\uff1a<code>\\bigotimes</code>\uff0c\u5982\uff1a</li> <li>\u5b9e\u6570\u96c6\u5408\uff0c\u7b26\u53f7\uff1a<code>\\mathbb{R}</code>\uff0c\u5982\uff1a<code>\\mathbb{R}</code></li> <li>\u81ea\u7136\u6570\u96c6\u5408\uff0c\u7b26\u53f7\uff1a<code>\\mathbb{Z}</code>\uff0c\u5982\uff1a<code>\\mathbb{Z}</code></li> <li>\u7a7a\u96c6\uff0c\u7b26\u53f7\uff1a<code>\\emptyset</code>\uff0c\u5982\uff1a</li> </ol>"},{"location":"others/LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/#_9","title":"\u6570\u5b66\u7b26\u53f7","text":"<ol> <li>\u65e0\u7a77\uff0c\u7b26\u53f7\uff1a<code>\\infty</code>\uff0c\u5982\uff1a</li> <li>\u865a\u6570\uff0c\u7b26\u53f7\uff1a<code>\\imath</code>\uff0c\u5982\uff1a</li> <li>\u865a\u6570\uff0c\u7b26\u53f7\uff1a<code>\\jmath</code>\uff0c\u5982\uff1a</li> <li>\u6570\u5b66\u7b26\u53f7\uff0c\u7b26\u53f7<code>\\hat{a}</code>\uff0c\u5982\uff1a</li> <li>\u6570\u5b66\u7b26\u53f7\uff0c\u7b26\u53f7<code>\\check{a}</code>\uff0c\u5982\uff1a</li> <li>\u6570\u5b66\u7b26\u53f7\uff0c\u7b26\u53f7<code>\\breve{a}</code>\uff0c\u5982\uff1a</li> <li>\u6570\u5b66\u7b26\u53f7\uff0c\u7b26\u53f7<code>\\tilde{a}</code>\uff0c\u5982\uff1a</li> <li>\u6570\u5b66\u7b26\u53f7\uff0c\u7b26\u53f7<code>\\bar{a}</code>\uff0c\u5982\uff1a</li> <li>\u77e2\u91cf\u7b26\u53f7\uff0c\u7b26\u53f7<code>\\vec{a}</code>\uff0c\u5982\uff1a</li> <li>\u6570\u5b66\u7b26\u53f7\uff0c\u7b26\u53f7<code>\\acute{a}</code>\uff0c\u5982\uff1a</li> <li>\u6570\u5b66\u7b26\u53f7\uff0c\u7b26\u53f7<code>\\grave{a}</code>\uff0c\u5982\uff1a</li> <li>\u6570\u5b66\u7b26\u53f7\uff0c\u7b26\u53f7<code>\\mathring{a}</code>\uff0c\u5982\uff1a</li> <li>\u4e00\u9636\u5bfc\u6570\u7b26\u53f7\uff0c\u7b26\u53f7<code>\\dot{a}</code>\uff0c\u5982\uff1a</li> <li>\u4e8c\u9636\u5bfc\u6570\u7b26\u53f7\uff0c\u7b26\u53f7<code>\\ddot{a}</code>\uff0c\u5982\uff1a</li> <li>\u4e0a\u7bad\u5934\uff0c\u7b26\u53f7\uff1a<code>\\uparrow</code>\uff0c\u5982\uff1a</li> <li>\u4e0a\u7bad\u5934\uff0c\u7b26\u53f7\uff1a<code>\\Uparrow</code>\uff0c\u5982\uff1a</li> <li>\u4e0b\u7bad\u5934\uff0c\u7b26\u53f7\uff1a<code>\\downarrow</code>\uff0c\u5982\uff1a</li> <li>\u4e0b\u7bad\u5934\uff0c\u7b26\u53f7\uff1a<code>\\Downarrow</code>\uff0c\u5982\uff1a</li> <li>\u5de6\u7bad\u5934\uff0c\u7b26\u53f7\uff1a<code>\\leftarrow</code>\uff0c\u5982\uff1a</li> <li>\u5de6\u7bad\u5934\uff0c\u7b26\u53f7\uff1a<code>\\Leftarrow</code>\uff0c\u5982\uff1a</li> <li>\u53f3\u7bad\u5934\uff0c\u7b26\u53f7\uff1a<code>\\rightarrow</code>\uff0c\u5982\uff1a</li> <li>\u53f3\u7bad\u5934\uff0c\u7b26\u53f7\uff1a<code>\\Rightarrow</code>\uff0c\u5982\uff1a</li> <li>\u5e95\u7aef\u5bf9\u9f50\u7684\u7701\u7565\u53f7\uff0c\u7b26\u53f7\uff1a<code>\\ldots</code>\uff0c\u5982\uff1a</li> <li>\u4e2d\u7ebf\u5bf9\u9f50\u7684\u7701\u7565\u53f7\uff0c\u7b26\u53f7\uff1a<code>\\cdots</code>\uff0c\u5982\uff1a</li> <li>\u7ad6\u76f4\u5bf9\u9f50\u7684\u7701\u7565\u53f7\uff0c\u7b26\u53f7\uff1a<code>\\vdots</code>\uff0c\u5982\uff1a</li> <li>\u659c\u5bf9\u9f50\u7684\u7701\u7565\u53f7\uff0c\u7b26\u53f7\uff1a<code>\\ddots</code>\uff0c\u5982\uff1a</li> </ol>"},{"location":"others/LaTeX%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/#_10","title":"\u5e0c\u814a\u5b57\u6bcd","text":"\u5b57\u6bcd \u5b9e\u73b0 \u5b57\u6bcd \u5b9e\u73b0 A <code>A</code> \u03b1 <code>\\alhpa</code> B <code>B</code> \u03b2 <code>\\beta</code> \u0393 <code>\\Gamma</code> \u03b3 <code>\\gamma</code> \u0394 <code>\\Delta</code> \u03b4 <code>\\delta</code> E <code>E</code> \u03f5 <code>\\epsilon</code> Z <code>Z</code> \u03b6 <code>\\zeta</code> H <code>H</code> \u03b7 <code>\\eta</code> \u0398 <code>\\Theta</code> \u03b8 <code>\\theta</code> I <code>I</code> \u03b9 <code>\\iota</code> K <code>K</code> \u03ba <code>\\kappa</code> \u039b <code>\\Lambda</code> \u03bb <code>\\lambda</code> M <code>M</code> \u03bc <code>\\mu</code> N <code>N</code> \u03bd <code>\\nu</code> \u039e <code>\\Xi</code> \u03be <code>\\xi</code> O <code>O</code> \u03bf <code>\\omicron</code> \u03a0 <code>\\Pi</code> \u03c0 <code>\\pi</code> P <code>P</code> \u03c1 <code>\\rho</code> \u03a3 <code>\\Sigma</code> \u03c3 <code>\\sigma</code> T <code>T</code> \u03c4 <code>\\tau</code> \u03a5 <code>\\Upsilon</code> \u03c5 <code>\\upsilon</code> \u03a6 <code>\\Phi</code> \u03d5 <code>\\phi</code> X <code>X</code> \u03c7 <code>\\chi</code> \u03a8 <code>\\Psi</code> \u03c8 <code>\\psi</code> \u03a9 <code>\\v</code> \u03c9 <code>\\omega</code>"},{"location":"others/makedown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","title":"Title","text":""},{"location":"others/makedown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#subtitle","title":"Subtitle","text":"<ul> <li> <p>\u5b57\u4f53\uff1a</p> </li> <li> <p>\u659c\u4f53\uff0c\u7c97\u4f53\uff0c\u7c97\u659c\u4f53</p> </li> <li> <p><code>\u9ad8\u5149</code>\uff0c\u5220\u9664\u7ebf\uff0c\u4e0b\u5212\u7ebf</p> </li> </ul> <ul> <li> <p>\u63d2\u5165\uff1a</p> </li> <li> <p>\u4ee3\u7801\uff1a</p> <ul> <li> <p>\u6bb5\u843d\u63d2\u5165\uff1a<code>print()</code></p> </li> <li> <p>\u4ee3\u7801\u5757\uff1a</p> </li> </ul> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main(){\ncout &lt;&lt; \"Hello world!\" &lt;&lt; endl;\nreturn 0;\n}\n</code></pre> </li> <li> <p>\u516c\u5f0f\uff1a</p> </li> <li> <p>\u6bb5\u843d\u63d2\u5165\uff1a\\(\\mathbf{F}_n = \\mathbf{F}_{n-1}^2\\)</p> </li> <li> <p>\u516c\u5f0f\u5757\uff1a     $$     \\mathbf{V}_1 \\times \\mathbf{V}_2 =  \\begin{vmatrix}     \\mathbf{i} &amp; \\mathbf{j} &amp; \\mathbf{k} \\     \\frac{\\partial X}{\\partial u} &amp;  \\frac{\\partial Y}{\\partial u} &amp; 0 \\     \\frac{\\partial X}{\\partial v} &amp;  \\frac{\\partial Y}{\\partial v} &amp; 0 \\     \\end{vmatrix}     $$</p> </li> <li> <p>\u56fe\u7247\uff1a</p> </li> </ul> <p></p> <pre><code>\u7f51\u7edc\uff1a\n![\u6d1b\u8c37\u56fe\u5e8a](https://cdn.luogu.com.cn/upload/image_hosting/tz9gnswb.png)\n\u672c\u5730\uff1a\n![\u4e00\u679c\u6d41\u6c57](C:\\Users\\86133\\Desktop\\SMILE\\\u4e00\u679c\u6d41\u6c57.jpg)\n\u7f29\u653e\uff1a\n&lt;img src=\"C:\\Users\\86133\\Desktop\\SMILE\\\u4e00\u679c\u6d41\u6c57.jpg\" alt=\"\u4e00\u679c\u6d41\u6c57\" style=\"zoom:50%;\" /&gt;\n</code></pre> <ul> <li>\u94fe\u63a5\uff1a</li> <li>Baidu</li> </ul>"}]}